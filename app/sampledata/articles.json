{
  "articles": [
    {
      "rendered_body": "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>初心者から中級者に上がる際，最初の壁がアーキテクチャでした。<br>\nViewControllerに全部書いていた時期もありました。<br>\n初めてMVCというものを教わったことで，<br>\n何が良くないのか，どうしていくのが好ましいのかと先へ進むことができました。</p>\n\n<p>一方でネット上の情報は断片的で，自身ではその総括的な歴史やその変貌を追うことができませんでした。<br>\n各ソフトウェアアーキテクチャについての解説はあれど，それぞれがどのように異なるのか，<br>\nまた，Review論文のようなものはあるのでしょうか (もしあれば教えていただきたいです) 。</p>\n\n<h2>\n<span id=\"作ったもの\" class=\"fragment\"></span><a href=\"#%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE\"><i class=\"fa fa-link\"></i></a>作ったもの</h2>\n\n<p><a href=\"https://github.com/YutoMizutani/architectures\" rel=\"nofollow noopener\" target=\"_blank\">architectures</a> というiOSアプリのリポジトリを作成しました。<br>\n1つの本当に単純なボタンとラベルだけの簡単な送金プログラムのiOSサンプルアプリです。<br>\nAPI通信等のない簡単な1つのプロジェクトを作成し，それを複数のアーキテクチャ思想に則りコーディングすることで，「コードを読む」ためのアプリを作成致しました。<br>\n比較がしやすいよう，git branchで切り換えるのではなく，UISplitViewControllerを用いて1画面で確認できるようにしました。</p>\n\n<h2>\n<span id=\"動作概要\" class=\"fragment\"></span><a href=\"#%E5%8B%95%E4%BD%9C%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>動作概要</h2>\n\n<p>WatanabeさんからTakahashiさんへ，一方通行にお金を送金するプログラムです。</p>\n\n<ul>\n<li><p>RESETボタンを押すと，Watanabeさんは0に，Takahashiさんは1000に初期化されます。</p></li>\n<li><p>TRANSFERボタンを押すと，Watanabeさんは-100，Takahashiさんは+100されます。</p></li>\n<li><p>Watanabeさんが0の場合にTRANSFERボタンを押すとErrorのアラートが表示され，キャンセルされます。</p></li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/59da3d0bbb3659571e60621221e111e3d380bb0d/68747470733a2f2f6769746875622e636f6d2f5975746f4d697a7574616e692f617263686974656374757265732f626c6f622f6d61737465722f7372632f7069632f73637265656e73686f742e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/59da3d0bbb3659571e60621221e111e3d380bb0d/68747470733a2f2f6769746875622e636f6d2f5975746f4d697a7574616e692f617263686974656374757265732f626c6f622f6d61737465722f7372632f7069632f73637265656e73686f742e706e67\" alt=\"screenshot\" data-canonical-src=\"https://github.com/YutoMizutani/architectures/blob/master/src/pic/screenshot.png\"></a></p>\n\n<h2>\n<span id=\"何が嬉しいのか\" class=\"fragment\"></span><a href=\"#%E4%BD%95%E3%81%8C%E5%AC%89%E3%81%97%E3%81%84%E3%81%AE%E3%81%8B\"><i class=\"fa fa-link\"></i></a>何が嬉しいのか</h2>\n\n<p>一言で伝えるならば，「自身の中にすでにある知見をもとに新しい知識を吸収することができる」点にあると考えています。</p>\n\n<p>それぞれのソフトウェアアーキテクチャを学ぼうと思っても，そのサンプルが断片的な機能についてのサンプルであったり，そもそもサンプルコードの提供がなかったりします。<br>\nその結果，現在の設計との利点が上手く比較できなかったり，0から初めることで学習コストが高まったりします。<br>\nそのハードルをこのリポジトリがクッションとなることで，皆さんの学習を促進できればと考えています。</p>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>今回，私がこれまで集めた知見をもとに，様々なアーキテクチャを利用し，1つのリポジトリを作成致しました。<br>\n本リポジトリは，ソフトウェア設計における情報を統一しようと試みるものであり，設計そのもの及び歴史に関する誤謬を含んだものであることを断っておきます。本記事及びコードが正確であることを保証するものではありません。そもそも設計方針であって，単体で1アーキテクチャとして成立するとは言い難いものもあります。本リポジトリは全てのアーキテクチャを網羅するものではなく，それぞれを比較し，優劣をつけるような意図はありません。</p>\n\n<p>一方で，上辺だけの理解による実装も多く，もっとこうした方が良いよ!というご意見等ありましたら，遠慮なくコメント，PRよろしくお願い致します!</p>\n\n<p><a href=\"https://peaks.cc/iOS_architecture\" rel=\"nofollow noopener\" target=\"_blank\">iOSアプリ設計パターン入門</a> という書籍が発売されるようです。一切無関係ですが，私の1疑問が少しでもこの書籍を通じて解決されればと期待しております!</p>\n\n<p>詳しくは<a href=\"https://github.com/YutoMizutani/architectures\" rel=\"nofollow noopener\" target=\"_blank\">リポジトリ</a>を参照していただけましたら幸いなのですが，少し短いため以下にREADMEを転載します。</p>\n\n<h1>\n<span id=\"各アーキテクチャについて\" class=\"fragment\"></span><a href=\"#%E5%90%84%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>各アーキテクチャについて</h1>\n\n<h2>\n<span id=\"pds\" class=\"fragment\"></span><a href=\"#pds\"><i class=\"fa fa-link\"></i></a>PDS</h2>\n\n<h4>\n<span id=\"概要\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p>Presentation Domain Separationの略。プレゼンテーションロジックとドメインロジックが分離されることで，以下のようなメリットを享受することができる。</p>\n\n<p><a href=\"http://bliki-ja.github.io/PresentationDomainSeparation/\" rel=\"nofollow noopener\" target=\"_blank\">プレゼンテーションとドメインの分離 - Martin Fowler's Bliki (ja)</a></p>\n\n<blockquote>\n<ul>\n<li>プレゼンテーションロジックとドメインロジックが分かれていると、理解しやすい\n同じ基本プログラムを、重複コードなしに、複数のプレゼンテーションに対応させることができる</li>\n<li>ユーザーインターフェイスはテストがしにくいため、それを分離することにより、テスト可能なロジック部分に集中できる</li>\n<li>スクリプト用のAPIやサービスとして外部化するためのAPIを楽に追加できる（選択可能なプレゼンテーション部分で見かける）</li>\n<li>プレゼンテーション部分のコードは、ドメイン部分のコードと違ったスキルと知識が必要</li>\n</ul>\n</blockquote>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>Presentation (inherited UIViewController)</li>\n<li>Domain</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://martinfowler.com/bliki/PresentationDomainSeparation.html\" rel=\"nofollow noopener\" target=\"_blank\">PresentationDomainSeparation - Martin Fowler</a></li>\n<li><a href=\"http://bliki-ja.github.io/PresentationDomainSeparation/\" rel=\"nofollow noopener\" target=\"_blank\">プレゼンテーションとドメインの分離 - Martin Fowler's Bliki (ja)</a></li>\n<li><a href=\"http://memowomome.hatenablog.com/entry/2014/04/13/102736\" rel=\"nofollow noopener\" target=\"_blank\">MVCとかMVVMの前の自分まとめ - メモを揉め</a></li>\n<li><a href=\"http://ugaya40.hateblo.jp/entry/dis-move\" rel=\"nofollow noopener\" target=\"_blank\">MOVEは望まれなかった子 - the sea of fertility</a></li>\n</ul>\n\n<h4>\n<span id=\"議論\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"mvc\" class=\"fragment\"></span><a href=\"#mvc\"><i class=\"fa fa-link\"></i></a>MVC</h2>\n\n<h4>\n<span id=\"概要-1\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-1\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p>Viewはアプリケーションの表示に関わるオブジェクトを定義し，ControllerはViewにおけるアクションの定義および遷移に関わる処理を，Modelにはデータおよびその処理を担う。<br>\nこの時，ViewとModelはControllerを必ず経由し，ModelにはUIに関わるロジックは含まれない。<br>\nプレゼンテーションロジックとドメインロジックの分離に適した設計。</p>\n\n<p><a href=\"https://camo.qiitausercontent.com/0dd8beef2aa597d59574a7020a71a58cf8573d83/68747470733a2f2f646576656c6f7065722e6170706c652e636f6d2f6c6962726172792f617263686976652f646f63756d656e746174696f6e2f47656e6572616c2f436f6e6365707475616c2f44657650656469612d436f636f61436f72652f4172742f6d6f64656c5f766965775f636f6e74726f6c6c65725f32782e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/0dd8beef2aa597d59574a7020a71a58cf8573d83/68747470733a2f2f646576656c6f7065722e6170706c652e636f6d2f6c6962726172792f617263686976652f646f63756d656e746174696f6e2f47656e6572616c2f436f6e6365707475616c2f44657650656469612d436f636f61436f72652f4172742f6d6f64656c5f766965775f636f6e74726f6c6c65725f32782e706e67\" alt=\"model_view_controller_2x.png\" data-canonical-src=\"https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png\"></a><br>\n<a href=\"https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png\" rel=\"nofollow noopener\" target=\"_blank\">https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png</a></p>\n\n<p>ちなみに，</p>\n\n<p><a href=\"https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html\" rel=\"nofollow noopener\" target=\"_blank\">MVC - Apple Developer</a></p>\n\n<blockquote>\n<p>MVC is central to a good design for a Cocoa application. The benefits of adopting this pattern are numerous. Many objects in these applications tend to be more reusable, and their interfaces tend to be better defined. Applications having an MVC design are also more easily extensible than other applications. Moreover, many Cocoa technologies and architectures are based on MVC and require that your custom objects play one of the MVC roles.</p>\n</blockquote>\n\n<p>と，Apple側の多くの設計はMVCに基づいていることが明記されている。</p>\n\n<p>MVCの理解にはしばしば誤解があると言われる(<a href=\"https://github.com/YutoMizutani/architectures#%E8%AD%B0%E8%AB%96-1\" rel=\"nofollow noopener\" target=\"_blank\">議論を参照</a>)。</p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-1\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-1\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>Model</li>\n<li>View</li>\n<li>Controller (inherits UIViewController)</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-1\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-1\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"参考-1\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-1\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html\" rel=\"nofollow noopener\" target=\"_blank\">MVC - Apple Developer</a></li>\n<li><a href=\"https://ja.stackoverflow.com/questions/25253/ios%E9%96%8B%E7%99%BA%E3%81%A7%E3%81%AEmvc%E3%81%A8%E3%81%AF\" rel=\"nofollow noopener\" target=\"_blank\">iOS開発でのMVCとは - スタック・オーバーフロー</a></li>\n<li><a href=\"https://qiita.com/koitaro/items/b3a924245fd72f22871a\" id=\"reference-d42cf1118694ece85623\">これが最強のMVC(iOS) - Qiita</a></li>\n<li><a href=\"https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52\" rel=\"nofollow noopener\" target=\"_blank\">iOS Architecture Patterns; Demystifying MVC, MVP, MVVM and VIPER – Medium</a></li>\n<li><a href=\"http://ugaya40.hateblo.jp/entry/dis-move\" rel=\"nofollow noopener\" target=\"_blank\">MOVEは望まれなかった子 - the sea of fertility</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-1\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-1\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<ul>\n<li><a href=\"https://www.slideshare.net/MugeSo/mvc-14469802\" rel=\"nofollow noopener\" target=\"_blank\">やはりお前らのMVCは間違っている - SlideShare</a></li>\n<li><a href=\"http://satoshi.blogs.com/life/2009/10/rails_mvc.html\" rel=\"nofollow noopener\" target=\"_blank\">Ruby on Railsの「えせMVC」の弊害 - Life is beautiful</a></li>\n<li><a href=\"https://nekogata.hatenablog.com/entry/2013/11/11/075234\" rel=\"nofollow noopener\" target=\"_blank\">やはりおまえらの MVC は間違えている in バックボーンジェーエス - 猫型の蓄音機は 1 分間に 45 回にゃあと鳴く</a></li>\n</ul>\n\n<h2>\n<span id=\"mvp\" class=\"fragment\"></span><a href=\"#mvp\"><i class=\"fa fa-link\"></i></a>MVP</h2>\n\n<h4>\n<span id=\"概要-2\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-2\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-2\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-2\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>Model</li>\n<li>View (inherits UIViewController)</li>\n<li>Presenter</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-2\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-2\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"参考-2\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-2\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52\" rel=\"nofollow noopener\" target=\"_blank\">iOS Architecture Patterns; Demystifying MVC, MVP, MVVM and VIPER – Medium</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-2\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-2\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<ul>\n<li><a href=\"http://konifar.hatenablog.com/entry/2015/04/17/010606\" rel=\"nofollow noopener\" target=\"_blank\">AndroidではMVCよりMVPの方がいいかもしれない - Konifar's WIP</a></li>\n</ul>\n\n<h2>\n<span id=\"mvvm\" class=\"fragment\"></span><a href=\"#mvvm\"><i class=\"fa fa-link\"></i></a>MVVM</h2>\n\n<h4>\n<span id=\"概要-3\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-3\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-3\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-3\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>Model</li>\n<li>View</li>\n<li>ViewModel (inherits UIViewController)</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-3\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-3\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/ReactiveX/RxSwift\" rel=\"nofollow noopener\" target=\"_blank\">RxSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-3\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-3\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://docs.microsoft.com/ja-jp/dotnet/standard/cross-platform/using-portable-class-library-with-model-view-view-model\" rel=\"nofollow noopener\" target=\"_blank\">Model-View-View Model を利用した汎用性のあるクラス ライブラリの使用 - Microsoft Docs</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-3\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-3\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"ddd\" class=\"fragment\"></span><a href=\"#ddd\"><i class=\"fa fa-link\"></i></a>DDD</h2>\n\n<h4>\n<span id=\"概要-4\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-4\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-4\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-4\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>UserInterface (inherits UIViewController)</li>\n<li>Application</li>\n<li>Domain</li>\n<li>Entity</li>\n<li>Infrastructure</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-4\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-4\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"参考-4\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-4\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"議論-4\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-4\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"reswift\" class=\"fragment\"></span><a href=\"#reswift\"><i class=\"fa fa-link\"></i></a>ReSwift</h2>\n\n<h4>\n<span id=\"概要-5\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-5\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-5\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-5\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>ViewController (inherits UIViewController)</li>\n<li>Reducer</li>\n<li>State</li>\n<li>Actions</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-5\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-5\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/ReSwift/ReSwift\" rel=\"nofollow noopener\" target=\"_blank\">ReSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-5\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-5\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"議論-5\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-5\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"reactorkit\" class=\"fragment\"></span><a href=\"#reactorkit\"><i class=\"fa fa-link\"></i></a>ReactorKit</h2>\n\n<h4>\n<span id=\"概要-6\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-6\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-6\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-6\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>ViewController (inherits UIViewController)</li>\n<li>Reactor</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-6\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-6\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/ReactorKit/ReactorKit\" rel=\"nofollow noopener\" target=\"_blank\">ReactorKit</a></li>\n<li><a href=\"https://github.com/ReactiveX/RxSwift\" rel=\"nofollow noopener\" target=\"_blank\">RxSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-6\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-6\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"議論-6\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-6\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"viper\" class=\"fragment\"></span><a href=\"#viper\"><i class=\"fa fa-link\"></i></a>VIPER</h2>\n\n<h4>\n<span id=\"概要-7\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-7\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p><a href=\"https://camo.qiitausercontent.com/9f2d517cc2d9b2f0dda0931c231e7f54443645ce/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f636b6c2d776562736974652d7374617469632f77702d636f6e74656e742f75706c6f6164732f323031362f30342f76697065725f6172636869746563747572652d32303030783732302e6a7067\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/9f2d517cc2d9b2f0dda0931c231e7f54443645ce/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f636b6c2d776562736974652d7374617469632f77702d636f6e74656e742f75706c6f6164732f323031362f30342f76697065725f6172636869746563747572652d32303030783732302e6a7067\" alt=\"viper_architecture-2000x720.jpg\" data-canonical-src=\"https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg\"></a><br>\n<a href=\"https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg\" rel=\"nofollow noopener\" target=\"_blank\">https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg</a></p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-7\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-7\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>ViewController (inherits UIViewController)</li>\n<li>Interactor</li>\n<li>Presenter</li>\n<li>Entity</li>\n<li>Router</li>\n<li>Protocols</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-7\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-7\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"テンプレート生成ツール\" class=\"fragment\"></span><a href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E7%94%9F%E6%88%90%E3%83%84%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>テンプレート生成ツール</h4>\n\n<ul>\n<li><a href=\"https://github.com/Juanpe/Swift-VIPER-Module\" rel=\"nofollow noopener\" target=\"_blank\">Juanpe/Swift-VIPER-Module - GitHub</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-7\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-7\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://qiita.com/YKEI_mrn/items/67735d8ebc9a83fffd29\" id=\"reference-ffd57fa3fa34ecb2e4ac\">iOS Project Architecture : Using VIPER [和訳]</a></li>\n<li><a href=\"https://cheesecakelabs.com/blog/ios-project-architecture-using-viper/\" rel=\"nofollow noopener\" target=\"_blank\">iOS Project Architecture: Using VIPER - Cheesecake Labs</a></li>\n<li><a href=\"https://github.com/Juanpe/Swift-VIPER-Module\" rel=\"nofollow noopener\" target=\"_blank\">Juanpe/Swift-VIPER-Module</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-7\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-7\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"clean-architecture\" class=\"fragment\"></span><a href=\"#clean-architecture\"><i class=\"fa fa-link\"></i></a>Clean Architecture</h2>\n\n<h4>\n<span id=\"概要-8\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-8\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p><a href=\"https://camo.qiitausercontent.com/a118b60051624cc3515c6ac1bef8b36ac468ab39/68747470733a2f2f3874686c696768742e636f6d2f626c6f672f6173736574732f706f7374732f323031322d30382d31332d7468652d636c65616e2d6172636869746563747572652f436c65616e4172636869746563747572652d386431666530363665386637666139633764386538346331613662306532623734623263363730666638303532383238663461376537336663626263363938632e6a7067\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/a118b60051624cc3515c6ac1bef8b36ac468ab39/68747470733a2f2f3874686c696768742e636f6d2f626c6f672f6173736574732f706f7374732f323031322d30382d31332d7468652d636c65616e2d6172636869746563747572652f436c65616e4172636869746563747572652d386431666530363665386637666139633764386538346331613662306532623734623263363730666638303532383238663461376537336663626263363938632e6a7067\" alt=\"CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg\" data-canonical-src=\"https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg\"></a><br>\n<a href=\"https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg\" rel=\"nofollow noopener\" target=\"_blank\">https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg</a></p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-8\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-8\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>Application/\n\n<ul>\n<li>Wireframe</li>\n<li>Builder</li>\n</ul>\n</li>\n<li>Data/\n\n<ul>\n<li>Repository</li>\n<li>DataStore</li>\n<li>Entity</li>\n</ul>\n</li>\n<li>Domain/\n\n<ul>\n<li>UseCase</li>\n<li>Translator</li>\n<li>Model</li>\n</ul>\n</li>\n<li>Presentation/\n\n<ul>\n<li>Presenter</li>\n<li>UI/\n\n<ul>\n<li>View</li>\n<li>ViewController (inherits UIViewController)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-8\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-8\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/ReactiveX/RxSwift\" rel=\"nofollow noopener\" target=\"_blank\">RxSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"テンプレート生成ツール-1\" class=\"fragment\"></span><a href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E7%94%9F%E6%88%90%E3%83%84%E3%83%BC%E3%83%AB-1\"><i class=\"fa fa-link\"></i></a>テンプレート生成ツール</h4>\n\n<ul>\n<li><a href=\"https://github.com/bannzai/Kuri\" rel=\"nofollow noopener\" target=\"_blank\">bannzai/Kuri - GitHub</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-8\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-8\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html\" rel=\"nofollow noopener\" target=\"_blank\">The Clean Architecture | 8th Light - 8th Light Blog</a></li>\n<li><a href=\"https://blog.tai2.net/the_clean_architecture.html\" rel=\"nofollow noopener\" target=\"_blank\">クリーンアーキテクチャ(The Clean Architecture翻訳) - blog.tai2.net</a></li>\n<li><a href=\"https://qiita.com/bannzai/items/6e8add18b15af235a19f\" id=\"reference-e66659379a7a8ab1664d\">まだiOS Clean Architecture で消耗してるの？ 爆速開発ツールを作ったのでご紹介 - Qiita</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-8\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-8\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"rxfeedback\" class=\"fragment\"></span><a href=\"#rxfeedback\"><i class=\"fa fa-link\"></i></a>RxFeedback</h2>\n\n<h4>\n<span id=\"概要-9\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-9\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p><a href=\"https://camo.qiitausercontent.com/7eb08b1a0784a46bb296687e663f5960802c9fa6/68747470733a2f2f6769746875622e636f6d2f6b7a616865722f72787377696674636f6e74656e742f7261772f6d61737465722f5278466565646261636b2e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/7eb08b1a0784a46bb296687e663f5960802c9fa6/68747470733a2f2f6769746875622e636f6d2f6b7a616865722f72787377696674636f6e74656e742f7261772f6d61737465722f5278466565646261636b2e706e67\" alt=\"RxFeedback.png\" data-canonical-src=\"https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png\"></a><br>\n<a href=\"https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png</a></p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-9\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-9\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>View</li>\n<li>ViewController (inherits UIViewController)</li>\n<li>State</li>\n<li>Event</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-9\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-9\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/NoTests/RxFeedback.swift\" rel=\"nofollow noopener\" target=\"_blank\">RxFeedback</a></li>\n<li><a href=\"https://github.com/ReactiveX/RxSwift\" rel=\"nofollow noopener\" target=\"_blank\">RxSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-9\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-9\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<ul>\n<li><a href=\"https://github.com/NoTests/RxFeedback.swift\" rel=\"nofollow noopener\" target=\"_blank\">RxFeedback</a></li>\n<li><a href=\"https://academy.realm.io/posts/try-swift-nyc-2017-krunoslav-zaher-modern-rxswift-architectures/\" rel=\"nofollow noopener\" target=\"_blank\">Modern RxSwift Architectures - Realm Academy</a></li>\n</ul>\n\n<h4>\n<span id=\"議論-9\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-9\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n\n<h2>\n<span id=\"realistic-viewcontroller\" class=\"fragment\"></span><a href=\"#realistic-viewcontroller\"><i class=\"fa fa-link\"></i></a>Realistic ViewController</h2>\n\n<h4>\n<span id=\"概要-10\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81-10\"><i class=\"fa fa-link\"></i></a>概要</h4>\n\n<p>この設計で実装する最低限の機能を実装したViewController。保存処理も含めない。<br>\n「最低限動く」このVCにユーザー管理の分割や保存処理を追加したものが各アーキテクチャで構成される。</p>\n\n<p>保存処理を実装していない為，値の保持や他のViewとの連携は行われない。</p>\n\n<h4>\n<span id=\"本リポジトリにおける-ディレクトリ構成-10\" class=\"fragment\"></span><a href=\"#%E6%9C%AC%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90-10\"><i class=\"fa fa-link\"></i></a>(本リポジトリにおける) ディレクトリ構成</h4>\n\n<ul>\n<li>ViewController (inherits UIViewController)</li>\n</ul>\n\n<h4>\n<span id=\"依存ライブラリ-10\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA-10\"><i class=\"fa fa-link\"></i></a>依存ライブラリ</h4>\n\n<ul>\n<li><a href=\"https://github.com/ReactiveX/RxSwift\" rel=\"nofollow noopener\" target=\"_blank\">RxSwift</a></li>\n</ul>\n\n<h4>\n<span id=\"参考-10\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83-10\"><i class=\"fa fa-link\"></i></a>参考</h4>\n\n<p>(なし)</p>\n\n<h4>\n<span id=\"議論-10\" class=\"fragment\"></span><a href=\"#%E8%AD%B0%E8%AB%96-10\"><i class=\"fa fa-link\"></i></a>議論</h4>\n\n<p>(なし)</p>\n",
      "body": "## はじめに\n\n初心者から中級者に上がる際，最初の壁がアーキテクチャでした。\nViewControllerに全部書いていた時期もありました。\n初めてMVCというものを教わったことで，\n何が良くないのか，どうしていくのが好ましいのかと先へ進むことができました。\n\n一方でネット上の情報は断片的で，自身ではその総括的な歴史やその変貌を追うことができませんでした。\n各ソフトウェアアーキテクチャについての解説はあれど，それぞれがどのように異なるのか，\nまた，Review論文のようなものはあるのでしょうか (もしあれば教えていただきたいです) 。\n\n## 作ったもの\n\n[architectures](https://github.com/YutoMizutani/architectures) というiOSアプリのリポジトリを作成しました。\n1つの本当に単純なボタンとラベルだけの簡単な送金プログラムのiOSサンプルアプリです。\nAPI通信等のない簡単な1つのプロジェクトを作成し，それを複数のアーキテクチャ思想に則りコーディングすることで，「コードを読む」ためのアプリを作成致しました。\n比較がしやすいよう，git branchで切り換えるのではなく，UISplitViewControllerを用いて1画面で確認できるようにしました。\n\n## 動作概要\n\nWatanabeさんからTakahashiさんへ，一方通行にお金を送金するプログラムです。\n\n\n- RESETボタンを押すと，Watanabeさんは0に，Takahashiさんは1000に初期化されます。\n\n- TRANSFERボタンを押すと，Watanabeさんは-100，Takahashiさんは+100されます。\n\n- Watanabeさんが0の場合にTRANSFERボタンを押すとErrorのアラートが表示され，キャンセルされます。\n\n![screenshot](https://github.com/YutoMizutani/architectures/blob/master/src/pic/screenshot.png)\n\n## 何が嬉しいのか\n\n一言で伝えるならば，「自身の中にすでにある知見をもとに新しい知識を吸収することができる」点にあると考えています。\n\nそれぞれのソフトウェアアーキテクチャを学ぼうと思っても，そのサンプルが断片的な機能についてのサンプルであったり，そもそもサンプルコードの提供がなかったりします。\nその結果，現在の設計との利点が上手く比較できなかったり，0から初めることで学習コストが高まったりします。\nそのハードルをこのリポジトリがクッションとなることで，皆さんの学習を促進できればと考えています。\n\n## まとめ\n\n今回，私がこれまで集めた知見をもとに，様々なアーキテクチャを利用し，1つのリポジトリを作成致しました。\n本リポジトリは，ソフトウェア設計における情報を統一しようと試みるものであり，設計そのもの及び歴史に関する誤謬を含んだものであることを断っておきます。本記事及びコードが正確であることを保証するものではありません。そもそも設計方針であって，単体で1アーキテクチャとして成立するとは言い難いものもあります。本リポジトリは全てのアーキテクチャを網羅するものではなく，それぞれを比較し，優劣をつけるような意図はありません。\n\n一方で，上辺だけの理解による実装も多く，もっとこうした方が良いよ!というご意見等ありましたら，遠慮なくコメント，PRよろしくお願い致します!\n\n[iOSアプリ設計パターン入門](https://peaks.cc/iOS_architecture) という書籍が発売されるようです。一切無関係ですが，私の1疑問が少しでもこの書籍を通じて解決されればと期待しております!\n\n詳しくは[リポジトリ](https://github.com/YutoMizutani/architectures)を参照していただけましたら幸いなのですが，少し短いため以下にREADMEを転載します。\n\n# 各アーキテクチャについて\n\n## PDS\n\n#### 概要\n\nPresentation Domain Separationの略。プレゼンテーションロジックとドメインロジックが分離されることで，以下のようなメリットを享受することができる。\n\n[プレゼンテーションとドメインの分離 - Martin Fowler's Bliki (ja)](http://bliki-ja.github.io/PresentationDomainSeparation/)\n> - プレゼンテーションロジックとドメインロジックが分かれていると、理解しやすい\n同じ基本プログラムを、重複コードなしに、複数のプレゼンテーションに対応させることができる\n> - ユーザーインターフェイスはテストがしにくいため、それを分離することにより、テスト可能なロジック部分に集中できる\n> - スクリプト用のAPIやサービスとして外部化するためのAPIを楽に追加できる（選択可能なプレゼンテーション部分で見かける）\n> - プレゼンテーション部分のコードは、ドメイン部分のコードと違ったスキルと知識が必要\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- Presentation (inherited UIViewController)\n- Domain\n\n#### 依存ライブラリ\n\n(なし)\n\n#### 参考\n\n- [PresentationDomainSeparation - Martin Fowler](https://martinfowler.com/bliki/PresentationDomainSeparation.html)\n- [プレゼンテーションとドメインの分離 - Martin Fowler's Bliki (ja)](http://bliki-ja.github.io/PresentationDomainSeparation/)\n- [MVCとかMVVMの前の自分まとめ - メモを揉め](http://memowomome.hatenablog.com/entry/2014/04/13/102736)\n- [MOVEは望まれなかった子 - the sea of fertility](http://ugaya40.hateblo.jp/entry/dis-move)\n\n#### 議論\n\n(なし)\n\n## MVC\n\n#### 概要\n\nViewはアプリケーションの表示に関わるオブジェクトを定義し，ControllerはViewにおけるアクションの定義および遷移に関わる処理を，Modelにはデータおよびその処理を担う。\nこの時，ViewとModelはControllerを必ず経由し，ModelにはUIに関わるロジックは含まれない。\nプレゼンテーションロジックとドメインロジックの分離に適した設計。\n\n![model_view_controller_2x.png](https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png)\n[https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png](https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Art/model_view_controller_2x.png)\n\nちなみに，\n\n[MVC - Apple Developer](https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html)\n> MVC is central to a good design for a Cocoa application. The benefits of adopting this pattern are numerous. Many objects in these applications tend to be more reusable, and their interfaces tend to be better defined. Applications having an MVC design are also more easily extensible than other applications. Moreover, many Cocoa technologies and architectures are based on MVC and require that your custom objects play one of the MVC roles.\n\nと，Apple側の多くの設計はMVCに基づいていることが明記されている。\n\nMVCの理解にはしばしば誤解があると言われる([議論を参照](https://github.com/YutoMizutani/architectures#%E8%AD%B0%E8%AB%96-1))。\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- Model\n- View\n- Controller (inherits UIViewController)\n\n#### 依存ライブラリ\n\n(なし)\n\n#### 参考\n\n- [MVC - Apple Developer](https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html)\n- [iOS開発でのMVCとは - スタック・オーバーフロー](https://ja.stackoverflow.com/questions/25253/ios%E9%96%8B%E7%99%BA%E3%81%A7%E3%81%AEmvc%E3%81%A8%E3%81%AF)\n- [これが最強のMVC(iOS) - Qiita](https://qiita.com/koitaro/items/b3a924245fd72f22871a)\n- [iOS Architecture Patterns; Demystifying MVC, MVP, MVVM and VIPER – Medium](https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52)\n- [MOVEは望まれなかった子 - the sea of fertility](http://ugaya40.hateblo.jp/entry/dis-move)\n\n#### 議論\n\n- [やはりお前らのMVCは間違っている - SlideShare](https://www.slideshare.net/MugeSo/mvc-14469802)\n- [Ruby on Railsの「えせMVC」の弊害 - Life is beautiful](http://satoshi.blogs.com/life/2009/10/rails_mvc.html)\n- [やはりおまえらの MVC は間違えている in バックボーンジェーエス - 猫型の蓄音機は 1 分間に 45 回にゃあと鳴く](https://nekogata.hatenablog.com/entry/2013/11/11/075234)\n\n## MVP\n\n#### 概要\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- Model\n- View (inherits UIViewController)\n- Presenter\n\n#### 依存ライブラリ\n\n(なし)\n\n#### 参考\n\n- [iOS Architecture Patterns; Demystifying MVC, MVP, MVVM and VIPER – Medium](https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52)\n\n#### 議論\n\n- [AndroidではMVCよりMVPの方がいいかもしれない - Konifar's WIP](http://konifar.hatenablog.com/entry/2015/04/17/010606)\n\n## MVVM\n\n#### 概要\n\n(なし)\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- Model\n- View\n- ViewModel (inherits UIViewController)\n\n#### 依存ライブラリ\n\n- [RxSwift](https://github.com/ReactiveX/RxSwift)\n\n#### 参考\n\n- [Model-View-View Model を利用した汎用性のあるクラス ライブラリの使用 - Microsoft Docs](https://docs.microsoft.com/ja-jp/dotnet/standard/cross-platform/using-portable-class-library-with-model-view-view-model)\n\n#### 議論\n\n(なし)\n\n## DDD\n\n#### 概要\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- UserInterface (inherits UIViewController)\n- Application\n- Domain\n- Entity\n- Infrastructure\n\n#### 依存ライブラリ\n\n(なし)\n\n#### 参考\n\n(なし)\n\n#### 議論\n\n(なし)\n\n## ReSwift\n\n#### 概要\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- ViewController (inherits UIViewController)\n- Reducer\n- State\n- Actions\n\n#### 依存ライブラリ\n\n- [ReSwift](https://github.com/ReSwift/ReSwift)\n\n#### 参考\n\n(なし)\n\n#### 議論\n\n(なし)\n\n## ReactorKit\n\n#### 概要\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- ViewController (inherits UIViewController)\n- Reactor\n\n#### 依存ライブラリ\n\n- [ReactorKit](https://github.com/ReactorKit/ReactorKit)\n- [RxSwift](https://github.com/ReactiveX/RxSwift)\n\n#### 参考\n\n(なし)\n\n#### 議論\n\n(なし)\n\n## VIPER\n\n#### 概要\n\n![viper_architecture-2000x720.jpg](https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg)\n[https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg](https://s3.amazonaws.com/ckl-website-static/wp-content/uploads/2016/04/viper_architecture-2000x720.jpg)\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- ViewController (inherits UIViewController)\n- Interactor\n- Presenter\n- Entity\n- Router\n- Protocols\n\n#### 依存ライブラリ\n\n(なし)\n\n#### テンプレート生成ツール\n\n- [Juanpe/Swift-VIPER-Module - GitHub](https://github.com/Juanpe/Swift-VIPER-Module)\n\n#### 参考\n\n- [iOS Project Architecture : Using VIPER [和訳]](https://qiita.com/YKEI_mrn/items/67735d8ebc9a83fffd29)\n- [iOS Project Architecture: Using VIPER - Cheesecake Labs](https://cheesecakelabs.com/blog/ios-project-architecture-using-viper/)\n- [Juanpe/Swift-VIPER-Module](https://github.com/Juanpe/Swift-VIPER-Module)\n\n#### 議論\n\n(なし)\n\n## Clean Architecture\n\n#### 概要\n\n![CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg](https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg)\n[https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg](https://8thlight.com/blog/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-8d1fe066e8f7fa9c7d8e84c1a6b0e2b74b2c670ff8052828f4a7e73fcbbc698c.jpg)\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- Application/\n\t- Wireframe\n\t- Builder\n- Data/\n\t- Repository\n\t- DataStore\n\t- Entity\n- Domain/\n\t- UseCase\n\t- Translator\n\t- Model\n- Presentation/\n\t- Presenter\n\t- UI/\n\t\t- View\n\t\t- ViewController (inherits UIViewController)\n\n#### 依存ライブラリ\n\n- [RxSwift](https://github.com/ReactiveX/RxSwift)\n\n#### テンプレート生成ツール\n\n- [bannzai/Kuri - GitHub](https://github.com/bannzai/Kuri)\n\n#### 参考\n\n- [The Clean Architecture | 8th Light - 8th Light Blog](https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html)\n- [クリーンアーキテクチャ(The Clean Architecture翻訳) - blog.tai2.net](https://blog.tai2.net/the_clean_architecture.html)\n- [まだiOS Clean Architecture で消耗してるの？ 爆速開発ツールを作ったのでご紹介 - Qiita](https://qiita.com/bannzai/items/6e8add18b15af235a19f)\n\n#### 議論\n\n(なし)\n\n## RxFeedback\n\n#### 概要\n\n![RxFeedback.png](https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png)\n[https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png](https://github.com/kzaher/rxswiftcontent/raw/master/RxFeedback.png)\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- View\n- ViewController (inherits UIViewController)\n- State\n- Event\n\n#### 依存ライブラリ\n\n- [RxFeedback](https://github.com/NoTests/RxFeedback.swift)\n- [RxSwift](https://github.com/ReactiveX/RxSwift)\n\n#### 参考\n\n- [RxFeedback](https://github.com/NoTests/RxFeedback.swift)\n- [Modern RxSwift Architectures - Realm Academy](https://academy.realm.io/posts/try-swift-nyc-2017-krunoslav-zaher-modern-rxswift-architectures/)\n\n#### 議論\n\n(なし)\n\n## Realistic ViewController\n\n#### 概要\n\nこの設計で実装する最低限の機能を実装したViewController。保存処理も含めない。\n「最低限動く」このVCにユーザー管理の分割や保存処理を追加したものが各アーキテクチャで構成される。\n\n保存処理を実装していない為，値の保持や他のViewとの連携は行われない。\n\n#### (本リポジトリにおける) ディレクトリ構成\n\n- ViewController (inherits UIViewController)\n\n#### 依存ライブラリ\n\n- [RxSwift](https://github.com/ReactiveX/RxSwift)\n\n#### 参考\n\n(なし)\n\n#### 議論\n\n(なし)\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T22:00:55+09:00",
      "group": null,
      "id": "260f684871b77732e18f",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "iOS",
          "versions": []
        },
        {
          "name": "Swift",
          "versions": []
        },
        {
          "name": "architecture",
          "versions": []
        },
        {
          "name": "CleanArchitecture",
          "versions": []
        },
        {
          "name": "ソフトウェアアーキテクチャ",
          "versions": []
        }
      ],
      "title": "各ソフトウェアアーキテクチャの違いが分からなかったので調べてまとめてみた",
      "updated_at": "2018-08-19T22:00:55+09:00",
      "url": "https://qiita.com/YutoMizutani/items/260f684871b77732e18f",
      "user": {
        "description": "新卒だったけど転職して東京進出したiOSエンジニア。RxSwiftとClean Architectureが好き。設計に興味あり。ディレクトリ構成に悩む今日この頃。",
        "facebook_id": "",
        "followees_count": 6,
        "followers_count": 6,
        "github_login_name": "YutoMizutani",
        "id": "YutoMizutani",
        "items_count": 9,
        "linkedin_id": "",
        "location": "",
        "name": "",
        "organization": "",
        "permanent_id": 195913,
        "profile_image_url": "https://avatars0.githubusercontent.com/u/22558921?v=4",
        "twitter_screen_name": "EXPENSIVE_MAN",
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>初めての投稿</p>\n",
      "body": "初めての投稿\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T22:00:47+09:00",
      "group": null,
      "id": "bd938e062a0f518f19bc",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "テスト1",
          "versions": []
        }
      ],
      "title": "テスト投稿",
      "updated_at": "2018-08-19T22:00:47+09:00",
      "url": "https://qiita.com/movingfastballny2012/items/bd938e062a0f518f19bc",
      "user": {
        "description": "",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 0,
        "github_login_name": null,
        "id": "movingfastballny2012",
        "items_count": 1,
        "linkedin_id": "",
        "location": "",
        "name": "ダンベルクローバー",
        "organization": "",
        "permanent_id": 282164,
        "profile_image_url": "https://secure.gravatar.com/avatar/c6c23a3d19921f3b1f9b94a69a902922",
        "twitter_screen_name": null,
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>CowboyでCookieの使い方を学んだので備忘録的に残しておきます。</p>\n\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>ErlangやCowboyの環境構築や設定は以下の記事にまとめてるので気になる人はやってみてください。<br>\n<a href=\"https://qiita.com/kobatako/items/456642c42017e17cadca\" id=\"reference-94e9000f50cbcb5eca26\">CowboyでHello Worldのサンプルを動かしてみる</a></p>\n\n<h2>\n<span id=\"ハンドラーの準備\" class=\"fragment\"></span><a href=\"#%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%83%BC%E3%81%AE%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>ハンドラーの準備</h2>\n\n<p>まずはCowboyで呼び出すハンドラーの準備をします。パスに応じてハンドラーを呼び分けたりしますが今回は全てのリクエストは一つのハンドラーが受けるようにします。</p>\n\n<div class=\"code-frame\" data-lang=\"erlang\">\n<div class=\"code-lang\"><span class=\"bold\">sandbox_app.erl</span></div>\n<div class=\"highlight\"><pre><span class=\"nf\">start</span><span class=\"p\">(_</span><span class=\"nv\">StartType</span><span class=\"p\">,</span> <span class=\"p\">_</span><span class=\"nv\">StartArgs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"nv\">Dispatch</span> <span class=\"o\">=</span> <span class=\"nn\">cowboy_router</span><span class=\"p\">:</span><span class=\"nf\">compile</span><span class=\"p\">([</span>\n        <span class=\"p\">{</span><span class=\"n\">'_'</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"n\">'_'</span><span class=\"p\">,</span> <span class=\"n\">toppage_handler</span><span class=\"p\">,</span> <span class=\"p\">[]}</span>\n        <span class=\"p\">]}</span>\n    <span class=\"p\">]),</span>\n    <span class=\"p\">{</span><span class=\"n\">ok</span><span class=\"p\">,</span> <span class=\"p\">_}</span> <span class=\"o\">=</span> <span class=\"nn\">cowboy</span><span class=\"p\">:</span><span class=\"nf\">start_clear</span><span class=\"p\">(</span><span class=\"n\">http</span><span class=\"p\">,</span> <span class=\"p\">[{</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"mi\">8010</span><span class=\"p\">}],</span> <span class=\"err\">#</span><span class=\"p\">{</span>\n        <span class=\"n\">env</span> <span class=\"o\">=&gt;</span> <span class=\"err\">#</span><span class=\"p\">{</span><span class=\"n\">dispatch</span> <span class=\"o\">=&gt;</span> <span class=\"nv\">Dispatch</span><span class=\"p\">}</span>\n    <span class=\"p\">}),</span>\n    <span class=\"nn\">sandbox_sup</span><span class=\"p\">:</span><span class=\"nf\">start_link</span><span class=\"p\">().</span>\n</pre></div>\n</div>\n\n<p><code>toppage_handler</code>ハンドラーが全てのリクエストを受け止めてくれます。なのでリクエストのたびにこのハンドラーが呼ばれます。<br>\n今回はテンプレートエンジンにErlyDTLを使いました。<br>\nそしてCowboyを8010ポートで待ち受けるように設定します。</p>\n\n<h2>\n<span id=\"cookieを扱う\" class=\"fragment\"></span><a href=\"#cookie%E3%82%92%E6%89%B1%E3%81%86\"><i class=\"fa fa-link\"></i></a>Cookieを扱う</h2>\n\n<h3>\n<span id=\"cookieをセットする\" class=\"fragment\"></span><a href=\"#cookie%E3%82%92%E3%82%BB%E3%83%83%E3%83%88%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Cookieをセットする</h3>\n\n<p>では実際にCookieを扱ってみます。Cowboyのサンプルでもありましたが、Cookieに値のセットと値の取得を繰り返すサンプルになります。ではさらっと全体像を。</p>\n\n<div class=\"code-frame\" data-lang=\"erlang\">\n<div class=\"code-lang\"><span class=\"bold\">toppage_handler.erl</span></div>\n<div class=\"highlight\"><pre><span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"nv\">Req0</span><span class=\"p\">,</span> <span class=\"nv\">Opts</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"nv\">NewValue</span> <span class=\"o\">=</span> <span class=\"nb\">integer_to_list</span><span class=\"p\">(</span><span class=\"nn\">rand</span><span class=\"p\">:</span><span class=\"nf\">uniform</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">)),</span>\n    <span class=\"nv\">Req1</span> <span class=\"o\">=</span> <span class=\"nn\">cowboy_req</span><span class=\"p\">:</span><span class=\"nf\">set_resp_cookie</span><span class=\"p\">(</span><span class=\"o\">&lt;&lt;</span><span class=\"s\">\"server\"</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span> <span class=\"nv\">NewValue</span><span class=\"p\">,</span>\n            <span class=\"nv\">Req0</span><span class=\"p\">,</span> <span class=\"err\">#</span><span class=\"p\">{</span><span class=\"n\">path</span> <span class=\"o\">=&gt;</span> <span class=\"o\">&lt;&lt;</span><span class=\"s\">\"/\"</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">}),</span>\n</pre></div>\n</div>\n\n<p><code>NewValue = integer_to_list(rand:uniform(10000)),</code>ではランダムな値を取得します。Cookieの値が入れ替わるのを確認するためランダムな値を取っています。</p>\n\n<p><code>Req1 = cowboy_req:set_resp_cookie(&lt;&lt;\"server\"&gt;&gt;, NewValue, Req0, #{path =&gt; &lt;&lt;\"/\"&gt;&gt;}),</code> でCookieに値をセットしています。第一引数の<code>&lt;&lt;server&gt;&gt;</code> はCookieの値、第二引数にCookieの値を入れています。第三引数にReq objectをセットし、第四引数にCookieのオプションを渡します。今回のオプションではCookieのパスを設定しています。<br>\n返り値として新しいRep objectを返します。</p>\n\n<h3>\n<span id=\"cookieの値を取り出す\" class=\"fragment\"></span><a href=\"#cookie%E3%81%AE%E5%80%A4%E3%82%92%E5%8F%96%E3%82%8A%E5%87%BA%E3%81%99\"><i class=\"fa fa-link\"></i></a>Cookieの値を取り出す</h3>\n\n<p>次は、Cookieの値をハンドラー内で取り出す処理です。</p>\n\n<div class=\"code-frame\" data-lang=\"erlang\">\n<div class=\"code-lang\"><span class=\"bold\">toppage_handler.erl</span></div>\n<div class=\"highlight\"><pre>    <span class=\"err\">#</span><span class=\"p\">{</span><span class=\"n\">client</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"nv\">ClientCookie</span><span class=\"p\">,</span> <span class=\"n\">server</span> <span class=\"p\">:</span><span class=\"o\">=</span> <span class=\"nv\">ServerCookie</span><span class=\"p\">}</span>\n        <span class=\"o\">=</span> <span class=\"nn\">cowboy_req</span><span class=\"p\">:</span><span class=\"nf\">match_cookies</span><span class=\"p\">([{</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"o\">&lt;&lt;&gt;&gt;</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"o\">&lt;&lt;&gt;&gt;</span><span class=\"p\">}],</span> <span class=\"nv\">Req1</span><span class=\"p\">),</span>\n</pre></div>\n</div>\n\n<p><code>#{client := ClientCookie, server := ServerCookie} = cowboy_req:match_cookies([{client, [], &lt;&lt;&gt;&gt;}, {server, [], &lt;&lt;&gt;&gt;}], Req1)</code>で値を取り出します。<br>\n返り値にCookieのclientとserverをマップとして返します。第一引数ではどの値を取り出すかを決めます。第一引数は<code>{Cookieのキー名, 制約, デフォルト値}</code>でのタプルのリストを渡しています。</p>\n\n<p>これでCookieの値の取得を行うことができました。</p>\n\n<h3>\n<span id=\"cookieのオプションたち\" class=\"fragment\"></span><a href=\"#cookie%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%9F%E3%81%A1\"><i class=\"fa fa-link\"></i></a>Cookieのオプションたち</h3>\n\n<p>最後に、<code>set_resp_cookie</code> のオプションとして設定できるものを記載していきます。</p>\n\n<ul>\n<li>max_arg =&gt; 失効するまでの時間</li>\n<li>domain =&gt; 有効なドメイン</li>\n<li>path =&gt; Cookieを設定するパス</li>\n<li>secure =&gt; HTTPSのみ有効</li>\n<li>http_only =&gt; HTTPのみ有効</li>\n</ul>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>簡単ではありましたが、CowboyのCookieの扱い方でした。<br>\nもっといろいろしようかと思いましたが、これ以上することがないので（悲しい、、、）。<br>\n別の記事でCookieを使っていろいろするのを書こうと思います。</p>\n",
      "body": "CowboyでCookieの使い方を学んだので備忘録的に残しておきます。\n\n## はじめに\n\nErlangやCowboyの環境構築や設定は以下の記事にまとめてるので気になる人はやってみてください。\n[CowboyでHello Worldのサンプルを動かしてみる](https://qiita.com/kobatako/items/456642c42017e17cadca)\n\n## ハンドラーの準備\nまずはCowboyで呼び出すハンドラーの準備をします。パスに応じてハンドラーを呼び分けたりしますが今回は全てのリクエストは一つのハンドラーが受けるようにします。\n\n```erlang:sandbox_app.erl\nstart(_StartType, _StartArgs) ->\n    Dispatch = cowboy_router:compile([\n        {'_', [\n            {'_', toppage_handler, []}\n        ]}\n    ]),\n    {ok, _} = cowboy:start_clear(http, [{port, 8010}], #{\n        env => #{dispatch => Dispatch}\n    }),\n    sandbox_sup:start_link().\n```\n`toppage_handler`ハンドラーが全てのリクエストを受け止めてくれます。なのでリクエストのたびにこのハンドラーが呼ばれます。\n今回はテンプレートエンジンにErlyDTLを使いました。\nそしてCowboyを8010ポートで待ち受けるように設定します。\n\n## Cookieを扱う\n### Cookieをセットする\n\nでは実際にCookieを扱ってみます。Cowboyのサンプルでもありましたが、Cookieに値のセットと値の取得を繰り返すサンプルになります。ではさらっと全体像を。\n\n```erlang:toppage_handler.erl\ninit(Req0, Opts) ->\n    NewValue = integer_to_list(rand:uniform(10000)),\n    Req1 = cowboy_req:set_resp_cookie(<<\"server\">>, NewValue,\n            Req0, #{path => <<\"/\">>}),\n```\n\n`NewValue = integer_to_list(rand:uniform(10000)),`ではランダムな値を取得します。Cookieの値が入れ替わるのを確認するためランダムな値を取っています。\n\n`Req1 = cowboy_req:set_resp_cookie(<<\"server\">>, NewValue, Req0, #{path => <<\"/\">>}),` でCookieに値をセットしています。第一引数の`<<server>>` はCookieの値、第二引数にCookieの値を入れています。第三引数にReq objectをセットし、第四引数にCookieのオプションを渡します。今回のオプションではCookieのパスを設定しています。\n返り値として新しいRep objectを返します。\n\n### Cookieの値を取り出す\n次は、Cookieの値をハンドラー内で取り出す処理です。\n\n```erlang:toppage_handler.erl\n    #{client := ClientCookie, server := ServerCookie}\n        = cowboy_req:match_cookies([{client, [], <<>>}, {server, [], <<>>}], Req1),\n```\n\n`#{client := ClientCookie, server := ServerCookie} = cowboy_req:match_cookies([{client, [], <<>>}, {server, [], <<>>}], Req1)`で値を取り出します。\n返り値にCookieのclientとserverをマップとして返します。第一引数ではどの値を取り出すかを決めます。第一引数は`{Cookieのキー名, 制約, デフォルト値}`でのタプルのリストを渡しています。\n\nこれでCookieの値の取得を行うことができました。\n\n### Cookieのオプションたち\n\n最後に、`set_resp_cookie` のオプションとして設定できるものを記載していきます。\n\n* max_arg => 失効するまでの時間\n* domain => 有効なドメイン\n* path => Cookieを設定するパス\n* secure => HTTPSのみ有効\n* http_only => HTTPのみ有効\n\n## まとめ\n\n簡単ではありましたが、CowboyのCookieの扱い方でした。\nもっといろいろしようかと思いましたが、これ以上することがないので（悲しい、、、）。\n別の記事でCookieを使っていろいろするのを書こうと思います。\n\n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:58:13+09:00",
      "group": null,
      "id": "4ca838620f0a3702068b",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Erlang",
          "versions": []
        },
        {
          "name": "cowboy",
          "versions": []
        }
      ],
      "title": "CowboyでCookieを扱う",
      "updated_at": "2018-08-19T21:58:13+09:00",
      "url": "https://qiita.com/kobatako/items/4ca838620f0a3702068b",
      "user": {
        "description": "webプログラマー & 自宅Elixirプログラマー & ネットワークプログラマー（になりたい）",
        "facebook_id": "",
        "followees_count": 25,
        "followers_count": 13,
        "github_login_name": "kobatako",
        "id": "kobatako",
        "items_count": 14,
        "linkedin_id": "",
        "location": "",
        "name": "",
        "organization": "",
        "permanent_id": 215989,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/215989/profile-images/1511485301",
        "twitter_screen_name": "kobatako_",
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h1>\n<span id=\"protocolbuffers\" class=\"fragment\"></span><a href=\"#protocolbuffers\"><i class=\"fa fa-link\"></i></a>ProtocolBuffers</h1>\n\n<ul>\n<li>通信や永続化での利用を目的としたシリアライズフォーマット</li>\n<li>Googleによって開発されている</li>\n<li>オープンソースライセンス</li>\n<li>多数言語(Java, Python, Objective-C, and C++...)に対応している</li>\n</ul>\n\n<p>JSONや、MessagePackの様につかえる...!!</p>\n\n<p>参考<br>\n<a href=\"https://developers.google.com/protocol-buffers/\" rel=\"nofollow noopener\" target=\"_blank\">Protocol Buffers  |  Google Developers</a><br>\n<a href=\"https://ja.wikipedia.org/wiki/Protocol_Buffers\" rel=\"nofollow noopener\" target=\"_blank\">Protocol Buffers - Wikipedia</a></p>\n\n<h1>\n<span id=\"環境\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83\"><i class=\"fa fa-link\"></i></a>環境</h1>\n\n<ul>\n<li>macOS High Sierra</li>\n<li>Windows 10</li>\n</ul>\n\n<h1>\n<span id=\"手順\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86\"><i class=\"fa fa-link\"></i></a>手順</h1>\n\n<ol>\n<li>protoc を入手</li>\n<li>protoファイルを作成</li>\n<li>protoc コマンドで言語ごとに使用するファイルを出力</li>\n<li>言語ごとにシリアライズ、デシリアライズ時に上記ファイルを使用</li>\n</ol>\n\n<h2>\n<span id=\"1-protoc-を入手\" class=\"fragment\"></span><a href=\"#1-protoc-%E3%82%92%E5%85%A5%E6%89%8B\"><i class=\"fa fa-link\"></i></a>1. Protoc を入手</h2>\n\n<h4>\n<span id=\"mac\" class=\"fragment\"></span><a href=\"#mac\"><i class=\"fa fa-link\"></i></a>Mac</h4>\n\n<p>Homebrew経由で入手</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre># terminal等\n$ brew update     # formula を更新\n$ brew upgrade    # 更新があるパッケージを再ビルドする\n$ brew upgrade protobuf # protobufをアップグレード\n\n$ protoc --version\nlibprotoc 3.6.0\n</pre></div></div>\n\n<p>参考<br>\n<a href=\"https://qiita.com/k-yamada-github/items/a748a5ea4aafdcd3cee2\" id=\"reference-3c740f04c57e1efcb0ac\">homebrewでprotobufを最新版(3.0.0)にアップグレードする</a></p>\n\n<h4>\n<span id=\"win\" class=\"fragment\"></span><a href=\"#win\"><i class=\"fa fa-link\"></i></a>Win</h4>\n\n<p><a href=\"https://github.com/google/protobuf/releases\" rel=\"nofollow noopener\" target=\"_blank\">ここ</a>から、<code>protoc-xxx-win32.zip</code>を入手。<br>\n<code>C:\\Program Files\\</code>にProtocフォルダを作って上記zipを解答。<br>\n環境変数のPathに　<code>C:\\Program Files\\Protoc\\protoc-3.4.0-win32\\bin</code>を設定。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre># powershell等\n&gt; protoc --version\nlibprotoc 3.6.0\n</pre></div></div>\n\n<p>(より良い方法があったら教えてくださいm(__)m)</p>\n\n<h1>\n<span id=\"2-protoファイルを作成\" class=\"fragment\"></span><a href=\"#2-proto%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>2. protoファイルを作成</h1>\n\n<div class=\"code-frame\" data-lang=\"proto\">\n<div class=\"code-lang\"><span class=\"bold\">Person.proto</span></div>\n<div class=\"highlight\"><pre><span class=\"kd\">message</span> <span class=\"nc\">Person</span> <span class=\"p\">{</span>\n  <span class=\"k\">required</span> <span class=\"kt\">string</span> <span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">required</span> <span class=\"kt\">int32</span> <span class=\"na\">id</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"k\">optional</span> <span class=\"kt\">string</span> <span class=\"na\">email</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n\n  <span class=\"kd\">enum</span> <span class=\"n\">PhoneType</span> <span class=\"p\">{</span>\n    <span class=\"na\">MOBILE</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"na\">HOME</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"na\">WORK</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">message</span> <span class=\"nc\">PhoneNumber</span> <span class=\"p\">{</span>\n    <span class=\"k\">required</span> <span class=\"kt\">string</span> <span class=\"na\">number</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"k\">optional</span> <span class=\"n\">PhoneType</span> <span class=\"na\">type</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"p\">[</span><span class=\"k\">default</span> <span class=\"o\">=</span> <span class=\"n\">HOME</span><span class=\"p\">];</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">repeated</span> <span class=\"n\">PhoneNumber</span> <span class=\"na\">phone</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<p>上記は公式のサンプルです。</p>\n\n<ul>\n<li>required/optionalを定義できる</li>\n<li>enumを使うことができる</li>\n<li>messageフィールドで定義した他のmessageを使うことができる(上記では\"PhoneNumber\")</li>\n<li>repeatedで繰り返し(配列)を定義できる。</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>message {\n    TYPE NAME = UNIQUE NUMBER\n}\n</pre></div></div>\n\n<p>が基本形のようです。<br>\n詳しくは、公式をチェックしてください<br>\n<a href=\"https://developers.google.com/protocol-buffers/docs/proto3\" rel=\"nofollow noopener\" target=\"_blank\">Language Guide (proto3)  |  Protocol Buffers  |  Google Developers</a></p>\n\n<p>今回は、以下の簡単なexample.protoを使用します。</p>\n\n<div class=\"code-frame\" data-lang=\"proto\">\n<div class=\"code-lang\"><span class=\"bold\">example.proto</span></div>\n<div class=\"highlight\"><pre><span class=\"na\">syntax</span> <span class=\"o\">=</span> <span class=\"s\">\"proto3\"</span><span class=\"p\">;</span>\n<span class=\"kn\">package</span> <span class=\"nn\">example</span><span class=\"p\">;</span>\n\n<span class=\"kd\">message</span> <span class=\"nc\">User</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int32</span> <span class=\"na\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"kt\">string</span> <span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"3-protoc-コマンドで言語ごとに使用するファイルを出力\" class=\"fragment\"></span><a href=\"#3-protoc-%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E8%A8%80%E8%AA%9E%E3%81%94%E3%81%A8%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%87%BA%E5%8A%9B\"><i class=\"fa fa-link\"></i></a>3. protoc コマンドで言語ごとに使用するファイルを出力</h1>\n\n<p>go言語の場合は、<br>\n<code>go get -u github.com/golang/protobuf/{proto,protoc-gen-go}</code><br>\nを先に行ってください。　protocコマンドが裏側でprotoc-gen-goを使用しているみたいです。</p>\n\n<p>protocコマンドを使ってファイルを出力します。<br>\n<code>protoc --go_out=. -I. example.proto</code></p>\n\n<ul>\n<li>example.pb.go</li>\n</ul>\n\n<p>が出来上がっていると思います。<br>\n--xx_out=  =&gt; xxが言語名、=の後ろにアウトプットしたいパス<br>\n-I =&gt; インプットフォルダのパス　<br>\n詳しくは、 <br>\n<code>protoc --help</code><br>\nをご確認下さい。</p>\n\n<h1>\n<span id=\"4-言語ごとにシリアライズデシリアライズ時に上記ファイルを使用\" class=\"fragment\"></span><a href=\"#4-%E8%A8%80%E8%AA%9E%E3%81%94%E3%81%A8%E3%81%AB%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA%E3%83%87%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA%E6%99%82%E3%81%AB%E4%B8%8A%E8%A8%98%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%BD%BF%E7%94%A8\"><i class=\"fa fa-link\"></i></a>4. 言語ごとにシリアライズ、デシリアライズ時に上記ファイルを使用</h1>\n\n<p>ただ、シリアライズして、デシリアライズするシンプルなサンプルを以下に置いておきます。</p>\n\n<p>フォルダ構成</p>\n\n<p>.<br>\n├── main.go<br>\n└── protos<br>\n    └── example.pb.go</p>\n\n<div class=\"code-frame\" data-lang=\"go\">\n<div class=\"code-lang\"><span class=\"bold\">main.go</span></div>\n<div class=\"highlight\"><pre><span class=\"k\">package</span><span class=\"x\"> </span><span class=\"n\">main</span><span class=\"x\">\n\n</span><span class=\"k\">import</span><span class=\"x\"> </span><span class=\"p\">(</span><span class=\"x\">\n    </span><span class=\"s\">\"log\"</span><span class=\"x\">\n\n    </span><span class=\"s\">\"./protos\"</span><span class=\"x\">\n    </span><span class=\"s\">\"github.com/golang/protobuf/proto\"</span><span class=\"x\">\n</span><span class=\"p\">)</span><span class=\"x\">\n\n</span><span class=\"k\">func</span><span class=\"x\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"x\"> </span><span class=\"p\">{</span><span class=\"x\">\n\n    </span><span class=\"c\">//Serialize</span><span class=\"x\">\n    </span><span class=\"n\">test</span><span class=\"x\"> </span><span class=\"o\">:=</span><span class=\"x\"> </span><span class=\"o\">&amp;</span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"p\">{</span><span class=\"x\">\n        </span><span class=\"n\">Id</span><span class=\"o\">:</span><span class=\"x\">   </span><span class=\"m\">33</span><span class=\"p\">,</span><span class=\"x\">\n        </span><span class=\"n\">Name</span><span class=\"o\">:</span><span class=\"x\"> </span><span class=\"s\">\"laughing_cat\"</span><span class=\"p\">,</span><span class=\"x\">\n    </span><span class=\"p\">}</span><span class=\"x\">\n    </span><span class=\"n\">buff</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">err</span><span class=\"x\"> </span><span class=\"o\">:=</span><span class=\"x\"> </span><span class=\"n\">proto</span><span class=\"o\">.</span><span class=\"n\">Marshal</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span><span class=\"x\">\n    </span><span class=\"k\">if</span><span class=\"x\"> </span><span class=\"n\">err</span><span class=\"x\"> </span><span class=\"o\">!=</span><span class=\"x\"> </span><span class=\"no\">nil</span><span class=\"x\"> </span><span class=\"p\">{</span><span class=\"x\">\n        </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"marshal error\"</span><span class=\"p\">)</span><span class=\"x\">\n        </span><span class=\"k\">return</span><span class=\"x\">\n    </span><span class=\"p\">}</span><span class=\"x\">\n    </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"serialize success: \"</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">buff</span><span class=\"p\">)</span><span class=\"x\">\n\n    </span><span class=\"c\">// Deserialize</span><span class=\"x\">\n    </span><span class=\"n\">parsedTest</span><span class=\"x\"> </span><span class=\"o\">:=</span><span class=\"x\"> </span><span class=\"o\">&amp;</span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"p\">{}</span><span class=\"x\">\n    </span><span class=\"n\">err</span><span class=\"x\"> </span><span class=\"o\">=</span><span class=\"x\"> </span><span class=\"n\">proto</span><span class=\"o\">.</span><span class=\"n\">Unmarshal</span><span class=\"p\">(</span><span class=\"n\">buff</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">parsedTest</span><span class=\"p\">)</span><span class=\"x\">\n\n    </span><span class=\"k\">if</span><span class=\"x\"> </span><span class=\"n\">err</span><span class=\"x\"> </span><span class=\"o\">!=</span><span class=\"x\"> </span><span class=\"no\">nil</span><span class=\"x\"> </span><span class=\"p\">{</span><span class=\"x\">\n        </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"deserialize error: \"</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"x\">\n    </span><span class=\"p\">}</span><span class=\"x\">\n    </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"deserialized id :\"</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">parsedTest</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">)</span><span class=\"x\">\n    </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">Print</span><span class=\"p\">(</span><span class=\"s\">\"deserialized name: \"</span><span class=\"p\">,</span><span class=\"x\"> </span><span class=\"n\">parsedTest</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span><span class=\"x\">\n</span><span class=\"p\">}</span><span class=\"x\">\n\n</span></pre></div>\n</div>\n\n<p>上記で、シリアライズ=&gt;デシリアライズ　が完了するかと思います。<br>\nimportの時に、*.pb.goファイルのパスを指定するのをお忘れなく。</p>\n\n<p>間違えや訂正があったら教えて頂けると嬉しいですm(_ _)m。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<p><a href=\"https://developers.google.com/protocol-buffers/\" rel=\"nofollow noopener\" target=\"_blank\">公式</a><br>\n<a href=\"https://qiita.com/yugui/items/160737021d25d761b353\" id=\"reference-eeb8179613834d864293\">今さらProtocol Buffersと、手に馴染む道具の話</a><br>\n<a href=\"https://qiita.com/takusemba/items/05a4431114f0c6fee3d9\" id=\"reference-333b940fc1ff055f2dac\">Protocol BuffersでAPI通信 サーバー編【golang】　</a></p>\n",
      "body": "# ProtocolBuffers\n- 通信や永続化での利用を目的としたシリアライズフォーマット\n- Googleによって開発されている\n- オープンソースライセンス\n- 多数言語(Java, Python, Objective-C, and C++...)に対応している\n\nJSONや、MessagePackの様につかえる...!!\n\n参考\n[Protocol Buffers  |  Google Developers](https://developers.google.com/protocol-buffers/)\n[Protocol Buffers - Wikipedia](https://ja.wikipedia.org/wiki/Protocol_Buffers)\n\n# 環境\n- macOS High Sierra\n- Windows 10\n\n# 手順\n1. protoc を入手\n2. protoファイルを作成\n3. protoc コマンドで言語ごとに使用するファイルを出力\n4. 言語ごとにシリアライズ、デシリアライズ時に上記ファイルを使用\n\n## 1. Protoc を入手\n#### Mac\nHomebrew経由で入手\n\n```\n# terminal等\n$ brew update     # formula を更新\n$ brew upgrade    # 更新があるパッケージを再ビルドする\n$ brew upgrade protobuf # protobufをアップグレード\n\n$ protoc --version\nlibprotoc 3.6.0\n```\n参考\n[homebrewでprotobufを最新版(3.0.0)にアップグレードする](https://qiita.com/k-yamada-github/items/a748a5ea4aafdcd3cee2)\n\n#### Win\n[ここ](https://github.com/google/protobuf/releases)から、`protoc-xxx-win32.zip`を入手。\n`C:\\Program Files\\`にProtocフォルダを作って上記zipを解答。\n環境変数のPathに　`C:\\Program Files\\Protoc\\protoc-3.4.0-win32\\bin`を設定。\n\n```\n# powershell等\n> protoc --version\nlibprotoc 3.6.0\n```\n(より良い方法があったら教えてくださいm(__)m)\n\n# 2. protoファイルを作成\n\n```proto:Person.proto\nmessage Person {\n  required string name = 1;\n  required int32 id = 2;\n  optional string email = 3;\n\n  enum PhoneType {\n    MOBILE = 0;\n    HOME = 1;\n    WORK = 2;\n  }\n\n  message PhoneNumber {\n    required string number = 1;\n    optional PhoneType type = 2 [default = HOME];\n  }\n\n  repeated PhoneNumber phone = 4;\n}\n```\n上記は公式のサンプルです。\n\n- required/optionalを定義できる\n- enumを使うことができる\n- messageフィールドで定義した他のmessageを使うことができる(上記では\"PhoneNumber\")\n- repeatedで繰り返し(配列)を定義できる。\n\n```\nmessage {\n    TYPE NAME = UNIQUE NUMBER\n}\n```\nが基本形のようです。\n詳しくは、公式をチェックしてください\n[Language Guide (proto3)  |  Protocol Buffers  |  Google Developers](https://developers.google.com/protocol-buffers/docs/proto3)\n\n今回は、以下の簡単なexample.protoを使用します。\n\n```proto:example.proto\nsyntax = \"proto3\";\npackage example;\n\nmessage User {\n    int32 id = 1;\n    string name = 2;\n}\n```\n\n# 3. protoc コマンドで言語ごとに使用するファイルを出力\ngo言語の場合は、\n`go get -u github.com/golang/protobuf/{proto,protoc-gen-go}`\nを先に行ってください。　protocコマンドが裏側でprotoc-gen-goを使用しているみたいです。\n\nprotocコマンドを使ってファイルを出力します。\n```protoc --go_out=. -I. example.proto```\n\n- example.pb.go\n\nが出来上がっていると思います。\n--xx_out=  => xxが言語名、=の後ろにアウトプットしたいパス\n-I => インプットフォルダのパス　\n詳しくは、 \n```protoc --help```\nをご確認下さい。\n\n# 4. 言語ごとにシリアライズ、デシリアライズ時に上記ファイルを使用\nただ、シリアライズして、デシリアライズするシンプルなサンプルを以下に置いておきます。\n\nフォルダ構成\n\n.\n├── main.go\n└── protos\n    └── example.pb.go\n\n```main.go\npackage main\n\nimport (\n\t\"log\"\n\n\t\"./protos\"\n\t\"github.com/golang/protobuf/proto\"\n)\n\nfunc main() {\n\n\t//Serialize\n\ttest := &example.User{\n\t\tId:   33,\n\t\tName: \"laughing_cat\",\n\t}\n\tbuff, err := proto.Marshal(test)\n\tif err != nil {\n\t\tlog.Print(\"marshal error\")\n\t\treturn\n\t}\n\tlog.Print(\"serialize success: \", buff)\n\n\t// Deserialize\n\tparsedTest := &example.User{}\n\terr = proto.Unmarshal(buff, parsedTest)\n\n\tif err != nil {\n\t\tlog.Print(\"deserialize error: \", err)\n\t}\n\tlog.Print(\"deserialized id :\", parsedTest.Id)\n\tlog.Print(\"deserialized name: \", parsedTest.Name)\n}\n\n```\n\n上記で、シリアライズ=>デシリアライズ　が完了するかと思います。\nimportの時に、*.pb.goファイルのパスを指定するのをお忘れなく。\n\n間違えや訂正があったら教えて頂けると嬉しいですm(_ _)m。\n\n## 参考\n[公式](https://developers.google.com/protocol-buffers/)\n[今さらProtocol Buffersと、手に馴染む道具の話](https://qiita.com/yugui/items/160737021d25d761b353)\n[Protocol BuffersでAPI通信 サーバー編【golang】　](https://qiita.com/takusemba/items/05a4431114f0c6fee3d9)\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:56:33+09:00",
      "group": null,
      "id": "7208c880693e63ca247a",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Data",
          "versions": []
        },
        {
          "name": "ProtocolBuffers",
          "versions": []
        },
        {
          "name": "serialize",
          "versions": []
        }
      ],
      "title": "ProtocolBuffers 導入メモ Mac/Win",
      "updated_at": "2018-08-19T21:56:33+09:00",
      "url": "https://qiita.com/tkmn0/items/7208c880693e63ca247a",
      "user": {
        "description": "",
        "facebook_id": "",
        "followees_count": 8,
        "followers_count": 2,
        "github_login_name": "tkmn0",
        "id": "tkmn0",
        "items_count": 2,
        "linkedin_id": "",
        "location": "",
        "name": "0 t",
        "organization": "",
        "permanent_id": 142448,
        "profile_image_url": "https://avatars.githubusercontent.com/u/22463862?v=3",
        "twitter_screen_name": null,
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h1>\n<span id=\"環境\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83\"><i class=\"fa fa-link\"></i></a>環境</h1>\n\n<p>この記事は以下の環境で動いています。</p>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center\">項目</th>\n<th style=\"text-align: center\">値</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center\">CPU</td>\n<td style=\"text-align: center\">Core i5-8250U</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">Ubuntu</td>\n<td style=\"text-align: center\">16.04</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">ROS</td>\n<td style=\"text-align: center\">Kinetic</td>\n</tr>\n</tbody>\n</table>\n\n<p>インストールについては<a href=\"https://qiita.com/eri_aka/items/e0e0a9dc3f94c2d3348e\" id=\"reference-8f39852afdb4911ba427\">ROS講座02 インストール</a>を参照してください。<br>\nまたこの記事のプログラムはgithubにアップロードされています。<a href=\"https://qiita.com/eri_aka/items/25a56a6abda41dcf396e\" id=\"reference-ce27b428a11a52cff2ef\">ROS講座11 gitリポジトリ</a>を参照してください。</p>\n\n<h1>\n<span id=\"概要\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>概要</h1>\n\n<p>マイコンのプログラムの一番面倒な部分は通信です。PCとArduinoの通信を自分で作ったプロトコルで作っていたらその製作だけでも大変なことになってしまいます。そこでできたのがrosserialです。Arduinoでrosのpublisherやsubscriberが作れます。</p>\n\n<h1>\n<span id=\"前準備\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>前準備</h1>\n\n<h2>\n<span id=\"rosserialのインストール\" class=\"fragment\"></span><a href=\"#rosserial%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>rosserialのインストール</h2>\n\n<p>以下の2つをインストールします。</p>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre><span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>ros-kinetic-rosserial\n<span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>ros-kinetic-rosserial-arduino\n</pre></div></div>\n\n<h2>\n<span id=\"ワークスペースの作成\" class=\"fragment\"></span><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>ワークスペースの作成</h2>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre>roscd hard_lecture\n<span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> platformio/ino02\n<span class=\"nb\">cd </span>platformio/ino02\nplatformio init <span class=\"nt\">-b</span> megaatmega2560\n<span class=\"nb\">echo</span> <span class=\"s2\">\"upload_port = /dev/ttyACM0\"</span> <span class=\"o\">&gt;&gt;</span> platformio.ini \n<span class=\"nb\">echo</span> <span class=\"s2\">\"targets = upload\"</span> <span class=\"o\">&gt;&gt;</span> platformio.ini \n</pre></div></div>\n\n<h2>\n<span id=\"ros_libのコピー\" class=\"fragment\"></span><a href=\"#ros_lib%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC\"><i class=\"fa fa-link\"></i></a>ros_libのコピー</h2>\n\n<p>rosのメッセージヘッダをコピーします。以下のコマンドで現在のワークスペースのメッセージファイルをarduinoで使うために変換できます。arduinoのコンパイルに使うライブラリは<code>hard_lecture/platformio/ino02/lib</code>にコピーします。ここではワークスペースごとの個別に使うlocalなライブラリの保管場所です。</p>\n\n<div class=\"code-frame\" data-lang=\"shell\"><div class=\"highlight\"><pre>roscd hard_lecture/platformio/ino02/lib\nrosrun rosserial_arduino make_libraries.py <span class=\"nb\">.</span>\n</pre></div></div>\n\n<h1>\n<span id=\"ソースコード\" class=\"fragment\"></span><a href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>ソースコード</h1>\n\n<p>以下がrosserialでpublish、subscribeをするためのarduino側のソースコードです。いつものrosのプログラムと見た目は似ていますが、細部はいくらか違うので注意が必要です。</p>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">hard_lecture/platformio/ino02/src/main.ino</span></div>\n<div class=\"highlight\"><pre><span class=\"c\">#include &lt;ros.h&gt;</span>\n<span class=\"c\">#include &lt;std_msgs/String.h&gt;</span>\n<span class=\"c\">#include &lt;std_msgs/Bool.h&gt;</span>\n\nros::NodeHandle  nh<span class=\"p\">;</span>\nstd_msgs::String str_msg<span class=\"p\">;</span>\nros::Publisher chatter<span class=\"o\">(</span><span class=\"s2\">\"chatter\"</span>, &amp;str_msg<span class=\"o\">)</span><span class=\"p\">;</span>\nchar hello[13] <span class=\"o\">=</span> <span class=\"s2\">\"hello world!\"</span><span class=\"p\">;</span>\n\nvoid led_cb<span class=\"o\">(</span>const std_msgs::Bool&amp; msg<span class=\"o\">){</span>\n  <span class=\"k\">if</span><span class=\"o\">(</span>msg.data<span class=\"o\">)</span>digitalWrite<span class=\"o\">(</span>13, HIGH<span class=\"o\">)</span><span class=\"p\">;</span>\n  <span class=\"k\">else </span>digitalWrite<span class=\"o\">(</span>13, LOW<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"o\">}</span>\nros::Subscriber&lt;std_msgs::Bool&gt; sub0<span class=\"o\">(</span><span class=\"s2\">\"led\"</span>, &amp;led_cb<span class=\"o\">)</span><span class=\"p\">;</span>\n\nvoid setup<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n  nh.initNode<span class=\"o\">()</span><span class=\"p\">;</span>\n  nh.advertise<span class=\"o\">(</span>chatter<span class=\"o\">)</span><span class=\"p\">;</span>\n  nh.subscribe<span class=\"o\">(</span>sub0<span class=\"o\">)</span><span class=\"p\">;</span>\n\n  pinMode<span class=\"o\">(</span>LED_BUILTIN, OUTPUT<span class=\"o\">)</span><span class=\"p\">;</span>\n  pinMode<span class=\"o\">(</span>13, OUTPUT<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"o\">}</span>\n\nvoid loop<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n  str_msg.data <span class=\"o\">=</span> hello<span class=\"p\">;</span>\n  chatter.publish<span class=\"o\">(</span> &amp;str_msg <span class=\"o\">)</span><span class=\"p\">;</span>\n  nh.spinOnce<span class=\"o\">()</span><span class=\"p\">;</span>\n  delay<span class=\"o\">(</span>500<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"書き込み用のスクリプト\" class=\"fragment\"></span><a href=\"#%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF%E7%94%A8%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88\"><i class=\"fa fa-link\"></i></a>書き込み用のスクリプト</h1>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">hard_lecture/scripts/write_ino02.sh</span></div>\n<div class=\"highlight\"><pre><span class=\"nb\">echo</span> <span class=\"s2\">\"writing arduino\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"connect arduino on USB\"</span>\n\n<span class=\"nb\">cd</span> <span class=\"sb\">`</span><span class=\"nb\">dirname</span> <span class=\"k\">${</span><span class=\"nv\">0</span><span class=\"k\">}</span><span class=\"sb\">`</span>/../platformio/ino02\nplatformio run\n</pre></div>\n</div>\n\n<h1>\n<span id=\"実行\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>実行</h1>\n\n<p>初めに書き込みを行います。</p>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">arduinoのコンパイル・書き込み</span></div>\n<div class=\"highlight\"><pre>rosrun hard_lecture write_ino02.sh \n</pre></div>\n</div>\n\n<p>この後実行します。<br>\n<code>shell:1つ目のターミナル<br>\nroscore<br>\n</code></p>\n\n<div class=\"code-frame\" data-lang=\"shell\">\n<div class=\"code-lang\"><span class=\"bold\">1つ目のターミナル</span></div>\n<div class=\"highlight\"><pre>rosrun rosserial_python serial_node.py _port:<span class=\"o\">=</span>/dev/ttyACM0\n</pre></div>\n</div>\n\n<p>この状態で<code>rostopic list</code>をするとarduinoでpublish、subscriveした<code>/chatter</code>と<code>/led</code>のROSトピックが見えます。<br>\n<code>rostopic echo /chatter</code>とすると<code>data: \"hello world!\"</code>と見えます。<br>\n<code>rostopic pub -1 /led std_msgs/Bool \"data: true\"</code>とするとledが点灯します。</p>\n\n<h1>\n<span id=\"ros_libの必要なディレクトリ\" class=\"fragment\"></span><a href=\"#ros_lib%E3%81%AE%E5%BF%85%E8%A6%81%E3%81%AA%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA\"><i class=\"fa fa-link\"></i></a>ros_libの必要なディレクトリ</h1>\n\n<p><code>hard_lecture/platformio/ino02/lib/ros_lib</code>以下には多数のディレクトリが生成されます。しかしすべてのディレクトリが必要なわけではありません。特に今回はgitで管理するのであまり多くの無駄なディレクトリを作りたくありません。<br>\nディレクトリのうち常に必須なのは<code>ros</code>と<code>rosserial_msgs</code>とros_lib直下のファイルのみです。<br>\nこれとは別にarduinoのプログラムからリンクしている<code>std_msgs</code>が必要です。</p>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<p><a href=\"http://makemove.hatenablog.com/entry/2015/04/05/181604\" rel=\"nofollow noopener\" target=\"_blank\">rosserialの使い方</a></p>\n\n<h1>\n<span id=\"目次ページへのリンク\" class=\"fragment\"></span><a href=\"#%E7%9B%AE%E6%AC%A1%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%B8%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF\"><i class=\"fa fa-link\"></i></a>目次ページへのリンク</h1>\n\n<p><a href=\"https://qiita.com/eri_aka/items/5f44440afea0eb616b4a\" id=\"reference-472e7296902d2675a425\">ROS講座の目次へのリンク</a></p>\n",
      "body": "# 環境\nこの記事は以下の環境で動いています。\n\n| 項目 | 値 |\n|:-:|:-:|\n| CPU | Core i5-8250U |\n| Ubuntu | 16.04 |\n| ROS | Kinetic |\n\nインストールについては[ROS講座02 インストール](https://qiita.com/eri_aka/items/e0e0a9dc3f94c2d3348e)を参照してください。\nまたこの記事のプログラムはgithubにアップロードされています。[ROS講座11 gitリポジトリ](https://qiita.com/eri_aka/items/25a56a6abda41dcf396e)を参照してください。\n\n# 概要\nマイコンのプログラムの一番面倒な部分は通信です。PCとArduinoの通信を自分で作ったプロトコルで作っていたらその製作だけでも大変なことになってしまいます。そこでできたのがrosserialです。Arduinoでrosのpublisherやsubscriberが作れます。\n\n# 前準備\n## rosserialのインストール\n以下の2つをインストールします。\n\n```shell\nsudo apt-get install ros-kinetic-rosserial\nsudo apt-get install ros-kinetic-rosserial-arduino\n```\n\n## ワークスペースの作成\n\n```shell\nroscd hard_lecture\nmkdir -p platformio/ino02\ncd platformio/ino02\nplatformio init -b megaatmega2560\necho \"upload_port = /dev/ttyACM0\" >> platformio.ini \necho \"targets = upload\" >> platformio.ini \n```\n\n## ros_libのコピー\nrosのメッセージヘッダをコピーします。以下のコマンドで現在のワークスペースのメッセージファイルをarduinoで使うために変換できます。arduinoのコンパイルに使うライブラリは`hard_lecture/platformio/ino02/lib`にコピーします。ここではワークスペースごとの個別に使うlocalなライブラリの保管場所です。\n\n```shell\nroscd hard_lecture/platformio/ino02/lib\nrosrun rosserial_arduino make_libraries.py .\n```\n\n# ソースコード\n以下がrosserialでpublish、subscribeをするためのarduino側のソースコードです。いつものrosのプログラムと見た目は似ていますが、細部はいくらか違うので注意が必要です。\n\n```shell:hard_lecture/platformio/ino02/src/main.ino\n#include <ros.h>\n#include <std_msgs/String.h>\n#include <std_msgs/Bool.h>\n\nros::NodeHandle  nh;\nstd_msgs::String str_msg;\nros::Publisher chatter(\"chatter\", &str_msg);\nchar hello[13] = \"hello world!\";\n\nvoid led_cb(const std_msgs::Bool& msg){\n  if(msg.data)digitalWrite(13, HIGH);\n  else digitalWrite(13, LOW);\n}\nros::Subscriber<std_msgs::Bool> sub0(\"led\", &led_cb);\n\nvoid setup()\n{\n  nh.initNode();\n  nh.advertise(chatter);\n  nh.subscribe(sub0);\n  \n  pinMode(LED_BUILTIN, OUTPUT);\n  pinMode(13, OUTPUT);\n}\n\nvoid loop()\n{\n  str_msg.data = hello;\n  chatter.publish( &str_msg );\n  nh.spinOnce();\n  delay(500);\n}\n```\n\n\n\n# 書き込み用のスクリプト\n\n```shell:hard_lecture/scripts/write_ino02.sh\necho \"writing arduino\"\necho \"connect arduino on USB\"\n\ncd `dirname ${0}`/../platformio/ino02\nplatformio run\n```\n\n# 実行\n初めに書き込みを行います。\n\n```shell:arduinoのコンパイル・書き込み\nrosrun hard_lecture write_ino02.sh \n```\n\nこの後実行します。\n```shell:1つ目のターミナル\nroscore\n```\n\n```shell:1つ目のターミナル\nrosrun rosserial_python serial_node.py _port:=/dev/ttyACM0\n```\n\nこの状態で`rostopic list`をするとarduinoでpublish、subscriveした`/chatter`と`/led`のROSトピックが見えます。\n`rostopic echo /chatter`とすると`data: \"hello world!\"`と見えます。\n`rostopic pub -1 /led std_msgs/Bool \"data: true\"`とするとledが点灯します。\n\n# ros_libの必要なディレクトリ\n`hard_lecture/platformio/ino02/lib/ros_lib`以下には多数のディレクトリが生成されます。しかしすべてのディレクトリが必要なわけではありません。特に今回はgitで管理するのであまり多くの無駄なディレクトリを作りたくありません。\nディレクトリのうち常に必須なのは`ros`と`rosserial_msgs`とros_lib直下のファイルのみです。\nこれとは別にarduinoのプログラムからリンクしている`std_msgs`が必要です。\n\n\n# 参考\n[rosserialの使い方](http://makemove.hatenablog.com/entry/2015/04/05/181604)\n\n# 目次ページへのリンク\n[ROS講座の目次へのリンク](https://qiita.com/eri_aka/items/5f44440afea0eb616b4a)\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:54:48+09:00",
      "group": null,
      "id": "389f527743f01f3e788f",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "C++",
          "versions": []
        },
        {
          "name": "ROS",
          "versions": []
        },
        {
          "name": "ロボット",
          "versions": []
        },
        {
          "name": "rosserial",
          "versions": []
        }
      ],
      "title": "ROS講座47 rosserialを使う",
      "updated_at": "2018-08-19T21:54:48+09:00",
      "url": "https://qiita.com/eri_aka/items/389f527743f01f3e788f",
      "user": {
        "description": "ロボットを日々こつこつと製作しています。ロボットやROSやC++、pythonに関心があります。",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 13,
        "github_login_name": "eriac",
        "id": "eri_aka",
        "items_count": 48,
        "linkedin_id": "",
        "location": "kanagawa, japan",
        "name": "eriac",
        "organization": "",
        "permanent_id": 254442,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/254442/profile-images/1525219464",
        "twitter_screen_name": null,
        "website_url": "http://erioakanuma.strikingly.com/"
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>LIN+++ <a href=\"http://mohonsportslive.blogspot.com/2018/05/soccer.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://mohonsportslive.blogspot.com/2018/05/soccer.html</a><br>\nLIN+++ <a href=\"http://mohonsportslive.blogspot.com/2018/05/soccer.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://mohonsportslive.blogspot.com/2018/05/soccer.html</a></p>\n\n<p>Erzurumspor-Beşiktaş maçı şifresiz canlı izle! BŞB Erzurumspor-Beşiktaş MACI CANLI İZLE..BB Erzurumspor Beşiktaş maçı saat kaçta canlı izlenebilecek? Bugün Beşiktaş, kartalların diyarı Erzurum'a konuk oluyor. Lige mağlubiyet ile ...<br>\nSüper Lig'de heyecan kaldığı yerden devam ediyor. Sezona Akhisarspor galibiyetiyle başlayan Beşiktaş deplasmanda Erzurumspor'u yenmek ...<br>\nErzurumspor Beşiktaş Canlı İzle| Erzurum BJK maçı kaç kaç? Erzurumspor beşiktaş maçını canlı izlemek isteyen taraftarlar internet üzerinden erzurumspor beşiktaş maçı canlı izle aramaları yapıyor. işte bu ...<br>\nerzurumspor beşiktaş maçı canlı izle ile ilgili haberler<br>\nerzurumspor beşiktaş maçı canlı izle haberleri,güncel erzurumspor beşiktaş maçı canlı izle haber ve fotoğrafları ile en yeni erzurumspor beşiktaş maçı canlı izle ...<br>\nBB Erzurumspor Beşiktaş maçı canlı izle! Saat kaçta, nasıl izlenecek ...</p>\n",
      "body": "LIN+++ http://mohonsportslive.blogspot.com/2018/05/soccer.html\nLIN+++ http://mohonsportslive.blogspot.com/2018/05/soccer.html\n\n\nErzurumspor-Beşiktaş maçı şifresiz canlı izle! BŞB Erzurumspor-Beşiktaş MACI CANLI İZLE..BB Erzurumspor Beşiktaş maçı saat kaçta canlı izlenebilecek? Bugün Beşiktaş, kartalların diyarı Erzurum'a konuk oluyor. Lige mağlubiyet ile ...\nSüper Lig'de heyecan kaldığı yerden devam ediyor. Sezona Akhisarspor galibiyetiyle başlayan Beşiktaş deplasmanda Erzurumspor'u yenmek ...\nErzurumspor Beşiktaş Canlı İzle| Erzurum BJK maçı kaç kaç? Erzurumspor beşiktaş maçını canlı izlemek isteyen taraftarlar internet üzerinden erzurumspor beşiktaş maçı canlı izle aramaları yapıyor. işte bu ...\nerzurumspor beşiktaş maçı canlı izle ile ilgili haberler\nerzurumspor beşiktaş maçı canlı izle haberleri,güncel erzurumspor beşiktaş maçı canlı izle haber ve fotoğrafları ile en yeni erzurumspor beşiktaş maçı canlı izle ...\nBB Erzurumspor Beşiktaş maçı canlı izle! Saat kaçta, nasıl izlenecek ...\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:54:22+09:00",
      "group": null,
      "id": "40df42468a5aad586093",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "soccer",
          "versions": []
        }
      ],
      "title": "(((BEDAVA ))) Beşiktaş BŞB Erzurumspor Maçını canlı izle HD 19.08.2018",
      "updated_at": "2018-08-19T21:59:01+09:00",
      "url": "https://qiita.com/mohon9/items/40df42468a5aad586093",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 0,
        "followers_count": 0,
        "github_login_name": null,
        "id": "mohon9",
        "items_count": 1,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 282354,
        "profile_image_url": "https://secure.gravatar.com/avatar/b7e807a60d16c2ec801a859bb95676bd",
        "twitter_screen_name": null,
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<div class=\"code-frame\" data-lang=\"vb\"><div class=\"highlight\"><pre><span class=\"k\">Option</span> <span class=\"n\">Explicit</span>\n<span class=\"cp\">#If VBA7 Then</span>\n<span class=\"c1\">'Wavファイルを鳴らすmcSendString</span>\n<span class=\"k\">Declare</span> <span class=\"n\">PtrSafe</span> <span class=\"k\">Function</span> <span class=\"nf\">mciSendString</span> <span class=\"k\">Lib</span> <span class=\"s\">\"winmm.dll\"</span> <span class=\"k\">Alias</span> <span class=\"s\">\"mciSendStringA\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">lpstrCommand</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">lpstrReturnString</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">uReturnLength</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">hwndCallback</span> <span class=\"ow\">As</span> <span class=\"n\">LongPtr</span><span class=\"p\">)</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n<span class=\"c1\">'Beep音を鳴らす</span>\n<span class=\"k\">Declare</span> <span class=\"n\">PtrSafe</span> <span class=\"k\">Function</span> <span class=\"nf\">Beep</span> <span class=\"k\">Lib</span> <span class=\"s\">\"kernel32\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">dwFreq</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">dwDuration</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n<span class=\"p\">#</span><span class=\"k\">Else</span>\n<span class=\"k\">Declare</span> <span class=\"k\">Function</span> <span class=\"nf\">mciSendString</span> <span class=\"k\">Lib</span> <span class=\"s\">\"winmm.dll\"</span> <span class=\"k\">Alias</span> <span class=\"s\">\"mciSendStringA\"</span> <span class=\"n\">_</span>\n<span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">lpstrCommand</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">lpstrReturnString</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"n\">_</span>\n<span class=\"k\">ByVal</span> <span class=\"n\">uReturnLength</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">hwndCallback</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n\n<span class=\"k\">Declare</span> <span class=\"k\">Function</span> <span class=\"nf\">Beep</span> <span class=\"k\">Lib</span> <span class=\"s\">\"kernel32\"</span> <span class=\"k\">Alias</span> <span class=\"s\">\"Beep\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">dwFreq</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">,</span> <span class=\"k\">ByVal</span> <span class=\"n\">dwDuration</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n<span class=\"cp\">#End If</span>\n<span class=\"c1\">'MessageBeep</span>\n<span class=\"c1\">'https://msdn.microsoft.com/ja-jp/library/cc429002.aspx?f=255&amp;MSPPError=-2147217396</span>\n<span class=\"c1\">'戻り値</span>\n<span class=\"c1\">'関数が成功すると､0 以外の値が返ります｡</span>\n<span class=\"c1\">'関数が失敗すると、0 が返ります。拡張エラー情報を取得するには、GetLastError 関数を使います。</span>\n<span class=\"c1\">'解説</span>\n<span class=\"c1\">'MessageBeep 関数は､サウンドをキューに置いた後､呼び出し側へ制御を返し､非同期的にサウンドを再生します｡</span>\n<span class=\"c1\">'指定された警告音を再生できない場合､MessageBeep 関数は一般の警告音を再生しようとします｡一般の警告音を再生できない場合､コンピュータのスピーカから発生する標準的なビープ音を鳴らします｡</span>\n<span class=\"c1\">'ユーザーは、コントロールパネルの［サウンド］を使って、警告のビープオンを無効にできます。</span>\n<span class=\"cp\">#If VBA7 Then</span>\n<span class=\"k\">Declare</span> <span class=\"n\">PtrSafe</span> <span class=\"k\">Function</span> <span class=\"nf\">MessageBeep</span> <span class=\"k\">Lib</span> <span class=\"s\">\"user32\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">wType</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n<span class=\"p\">#</span><span class=\"k\">Else</span>\n<span class=\"cp\">#If Win32 Then</span>\n    <span class=\"k\">Declare</span> <span class=\"k\">Sub</span> <span class=\"nf\">MessageBeep</span> <span class=\"k\">Lib</span> <span class=\"s\">\"User32\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">N</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span>\n<span class=\"p\">#</span><span class=\"k\">Else</span>\n    <span class=\"k\">Declare</span> <span class=\"k\">Sub</span> <span class=\"nf\">MessageBeep</span> <span class=\"k\">Lib</span> <span class=\"s\">\"User\"</span> <span class=\"p\">(</span><span class=\"k\">ByVal</span> <span class=\"n\">N</span> <span class=\"ow\">As</span> <span class=\"kt\">Integer</span><span class=\"p\">)</span>\n<span class=\"cp\">#End If</span>\n<span class=\"cp\">#End If</span>\n<span class=\"c1\">'http://www.vb-zentrum.de/tip_api.html</span>\n<span class=\"k\">Public</span> <span class=\"k\">Enum</span> <span class=\"nc\">BeepType</span>\n  <span class=\"n\">MB_ICONASTERISK</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">H1</span><span class=\"o\">&amp;</span> <span class=\"c1\">'情報</span>\n  <span class=\"n\">MB_ICONEXCLAMATION</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">H30</span><span class=\"o\">&amp;</span> <span class=\"c1\">'警告</span>\n  <span class=\"n\">MB_ICONQUESTION</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">H20</span><span class=\"o\">&amp;</span> <span class=\"c1\">'問合せ</span>\n  <span class=\"n\">MB_ICONHAND</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">H10</span><span class=\"o\">&amp;</span> <span class=\"c1\">'システムエラー</span>\n  <span class=\"n\">MB_OK</span> <span class=\"o\">=</span> <span class=\"o\">&amp;</span><span class=\"n\">H0</span> <span class=\"c1\">'一般の警告音</span>\n  <span class=\"n\">MB_SPEEKER</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"k\">End</span> <span class=\"k\">Enum</span>\n\n<span class=\"k\">Sub</span> <span class=\"nf\">PlaySoundFileTest1</span><span class=\"p\">()</span>\n<span class=\"c1\">'http://officetanaka.net/excel/vba/tips/tips22.htm</span>\n    <span class=\"k\">Dim</span> <span class=\"nv\">SoundFile</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"n\">rc</span>\n    <span class=\"c1\">'ただしWindows10ではMediaフォルダやWavファイルが管理者によって削除されている場合がある</span>\n    <span class=\"n\">SoundFile</span> <span class=\"o\">=</span> <span class=\"s\">\"C:\\Windows\\media\\Ring01.wav\"</span> <span class=\"c1\">'\"C:\\Windows\\Media\\tada.wav\"</span>\n    <span class=\"k\">If</span> <span class=\"n\">Dir</span><span class=\"p\">(</span><span class=\"n\">SoundFile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span> <span class=\"k\">Then</span>\n        <span class=\"n\">MsgBox</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"n\">vbCrLf</span> <span class=\"o\">&amp;</span> <span class=\"s\">\"がありません。\"</span><span class=\"p\">,</span> <span class=\"n\">vbExclamation</span>\n        <span class=\"k\">Exit</span> <span class=\"k\">Sub</span>\n    <span class=\"nf\">End</span> <span class=\"k\">If</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Play \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"s\">\" wait\"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n\n<span class=\"k\">Sub</span> <span class=\"nf\">PlaySoundFileTest2</span><span class=\"p\">()</span>\n<span class=\"c1\">'http://officetanaka.net/excel/vba/tips/tips22.htm</span>\n    <span class=\"k\">Dim</span> <span class=\"nv\">SoundFile</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span><span class=\"p\">,</span> <span class=\"n\">rc</span>\n    <span class=\"c1\">'ただしWindows10ではMediaフォルダやWavファイルが管理者によって削除されている場合がある</span>\n    <span class=\"n\">SoundFile</span> <span class=\"o\">=</span> <span class=\"s\">\"C:\\Windows\\media\\Ring01.wav\"</span> <span class=\"c1\">'\"C:\\Windows\\Media\\tada.wav\"</span>\n    <span class=\"k\">If</span> <span class=\"n\">Dir</span><span class=\"p\">(</span><span class=\"n\">SoundFile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span> <span class=\"k\">Then</span>\n        <span class=\"n\">MsgBox</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"n\">vbCrLf</span> <span class=\"o\">&amp;</span> <span class=\"s\">\"がありません。\"</span><span class=\"p\">,</span> <span class=\"n\">vbExclamation</span>\n        <span class=\"k\">Exit</span> <span class=\"k\">Sub</span>\n    <span class=\"nf\">End</span> <span class=\"k\">If</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Open \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Play \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"s\">\" wait\"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Close \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">SoundFile</span> <span class=\"o\">=</span> <span class=\"s\">\"C:\\Windows\\Media\\tada.wav\"</span>\n    <span class=\"k\">If</span> <span class=\"n\">Dir</span><span class=\"p\">(</span><span class=\"n\">SoundFile</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span> <span class=\"k\">Then</span>\n        <span class=\"n\">MsgBox</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"n\">vbCrLf</span> <span class=\"o\">&amp;</span> <span class=\"s\">\"がありません。\"</span><span class=\"p\">,</span> <span class=\"n\">vbExclamation</span>\n        <span class=\"k\">Exit</span> <span class=\"k\">Sub</span>\n    <span class=\"nf\">End</span> <span class=\"k\">If</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Open \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Play \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span> <span class=\"o\">&amp;</span> <span class=\"s\">\" wait\"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">rc</span> <span class=\"o\">=</span> <span class=\"n\">mciSendString</span><span class=\"p\">(</span><span class=\"s\">\"Close \"</span> <span class=\"o\">&amp;</span> <span class=\"n\">SoundFile</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n\n<span class=\"k\">Public</span> <span class=\"k\">Function</span> <span class=\"nf\">fnBeep</span><span class=\"p\">(</span><span class=\"n\">lngHelz</span> <span class=\"n\">as</span> <span class=\"kt\">Long</span><span class=\"p\">,</span><span class=\"n\">lngDurationMilliSeconds</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span><span class=\"p\">)</span>\n<span class=\"n\">Beep</span> <span class=\"n\">lngHelz</span><span class=\"p\">,</span><span class=\"n\">lngDurationMilliseconds</span>\n<span class=\"k\">End</span> <span class=\"n\">function</span>\n<span class=\"k\">Sub</span> <span class=\"nf\">BeepSoundTest</span><span class=\"p\">()</span>\n<span class=\"k\">Dim</span> <span class=\"nv\">HeltzLong</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span>\n<span class=\"k\">Dim</span> <span class=\"nv\">JikanLong</span> <span class=\"ow\">As</span> <span class=\"kt\">Long</span> <span class=\"c1\">'millisecond</span>\n<span class=\"n\">HeltzLong</span> <span class=\"o\">=</span> <span class=\"mi\">440</span>\n<span class=\"n\">JikanLong</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span> <span class=\"c1\">'1 Second</span>\n<span class=\"n\">Beep</span> <span class=\"n\">HeltzLong</span><span class=\"p\">,</span> <span class=\"n\">JikanLong</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n<span class=\"k\">Sub</span> <span class=\"nf\">MessageBeepTest</span><span class=\"p\">()</span>\n<span class=\"k\">Dim</span> <span class=\"nv\">Result</span>\n<span class=\"n\">Result</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"c1\">'Windows10は標準だと同じ音が設定されているためがないのでこの2種類が顕著な違いがある。</span>\n<span class=\"c1\">' Stopで止めないと音が鳴らない</span>\n<span class=\"n\">Result</span> <span class=\"o\">=</span> <span class=\"n\">MessageBeep</span><span class=\"p\">(</span><span class=\"n\">BeepType</span><span class=\"p\">.</span><span class=\"n\">MB_ICONEXCLAMATION</span><span class=\"p\">)</span>\n<span class=\"k\">Stop</span>\n<span class=\"n\">MessageBeep</span> <span class=\"n\">BeepType</span><span class=\"p\">.</span><span class=\"n\">MB_ICONHAND</span>\n<span class=\"c1\">'どちらの書き方でもよい</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n</pre></div></div>\n\n<h1>\n<span id=\"各関数\" class=\"fragment\"></span><a href=\"#%E5%90%84%E9%96%A2%E6%95%B0\"><i class=\"fa fa-link\"></i></a>各関数</h1>\n\n<h1>\n<span id=\"mcsendstring\" class=\"fragment\"></span><a href=\"#mcsendstring\"><i class=\"fa fa-link\"></i></a>mcSendString</h1>\n\n<p>wavファイル名を送信して音を鳴らす<br>\nただしこのC:\\Windows\\Mediaのファイルは管理者によって削られている場合がある。<br>\n削られていない場合はtada.wavがあるが昔と比べると安っぽい。<br>\nまた一つならしたら時間をおかないと次のが鳴る。<br>\nOfficeTanaka 大先生のを改造しているが、呼び出すときが重い。</p>\n\n<h2>\n<span id=\"beep\" class=\"fragment\"></span><a href=\"#beep\"><i class=\"fa fa-link\"></i></a>Beep</h2>\n\n<p>確実に使える。ただし音の高さと時間しかないのでサイン波（だと思う）が出る。<br>\n最大同時発音数は１なので、和音を鳴らすことはできない。<br>\n15000以上にするとモスキート音が出せるので加齢チェックに使える。<br>\nしかしなぜかノイズが出る<br>\nなので普通は1000程度を1秒（1000）鳴らすとかそういう使い方をする<br>\nfnBeep関数を作ったのでDeclare Beepと組でこれで任意の高さの音を鳴らせる。</p>\n\n<h2>\n<span id=\"messagebeep\" class=\"fragment\"></span><a href=\"#messagebeep\"><i class=\"fa fa-link\"></i></a>MessageBeep</h2>\n\n<p>Windows10のシステム音が鳴らせる。<br>\nシステム音を変えると音が変わる。<br>\nしかしシステム音がしょぼいので、2種類しか出ない。<br>\nEnumにするのは上記リンク先掲示板のアイディアだが、実質2種類しかない。</p>\n",
      "body": "```vb\nOption Explicit\n#If VBA7 Then\n'Wavファイルを鳴らすmcSendString\nDeclare PtrSafe Function mciSendString Lib \"winmm.dll\" Alias \"mciSendStringA\" (ByVal lpstrCommand As String, ByVal lpstrReturnString As String, ByVal uReturnLength As Long, ByVal hwndCallback As LongPtr) As Long\n'Beep音を鳴らす\nDeclare PtrSafe Function Beep Lib \"kernel32\" (ByVal dwFreq As Long, ByVal dwDuration As Long) As Long\n#Else\nDeclare Function mciSendString Lib \"winmm.dll\" Alias \"mciSendStringA\" _\n(ByVal lpstrCommand As String, ByVal lpstrReturnString As String, _\nByVal uReturnLength As Long, ByVal hwndCallback As Long) As Long\n\nDeclare Function Beep Lib \"kernel32\" Alias \"Beep\" (ByVal dwFreq As Long, ByVal dwDuration As Long) As Long\n#End If\n'MessageBeep\n'https://msdn.microsoft.com/ja-jp/library/cc429002.aspx?f=255&MSPPError=-2147217396\n'戻り値\n'関数が成功すると､0 以外の値が返ります｡\n'関数が失敗すると、0 が返ります。拡張エラー情報を取得するには、GetLastError 関数を使います。\n'解説\n'MessageBeep 関数は､サウンドをキューに置いた後､呼び出し側へ制御を返し､非同期的にサウンドを再生します｡\n'指定された警告音を再生できない場合､MessageBeep 関数は一般の警告音を再生しようとします｡一般の警告音を再生できない場合､コンピュータのスピーカから発生する標準的なビープ音を鳴らします｡\n'ユーザーは、コントロールパネルの［サウンド］を使って、警告のビープオンを無効にできます。\n#If VBA7 Then\nDeclare PtrSafe Function MessageBeep Lib \"user32\" (ByVal wType As Long) As Long\n#Else\n#If Win32 Then\n    Declare Sub MessageBeep Lib \"User32\" (ByVal N As Long)\n#Else\n    Declare Sub MessageBeep Lib \"User\" (ByVal N As Integer)\n#End If\n#End If\n'http://www.vb-zentrum.de/tip_api.html\nPublic Enum BeepType\n  MB_ICONASTERISK = &H1& '情報\n  MB_ICONEXCLAMATION = &H30& '警告\n  MB_ICONQUESTION = &H20& '問合せ\n  MB_ICONHAND = &H10& 'システムエラー\n  MB_OK = &H0 '一般の警告音\n  MB_SPEEKER = -1\nEnd Enum\n\nSub PlaySoundFileTest1()\n'http://officetanaka.net/excel/vba/tips/tips22.htm\n    Dim SoundFile As String, rc\n    'ただしWindows10ではMediaフォルダやWavファイルが管理者によって削除されている場合がある\n    SoundFile = \"C:\\Windows\\media\\Ring01.wav\" '\"C:\\Windows\\Media\\tada.wav\"\n    If Dir(SoundFile) = \"\" Then\n        MsgBox SoundFile & vbCrLf & \"がありません。\", vbExclamation\n        Exit Sub\n    End If\n    rc = mciSendString(\"Play \" & SoundFile & \" wait\", \"\", 0, 0)\nEnd Sub\n\nSub PlaySoundFileTest2()\n'http://officetanaka.net/excel/vba/tips/tips22.htm\n    Dim SoundFile As String, rc\n    'ただしWindows10ではMediaフォルダやWavファイルが管理者によって削除されている場合がある\n    SoundFile = \"C:\\Windows\\media\\Ring01.wav\" '\"C:\\Windows\\Media\\tada.wav\"\n    If Dir(SoundFile) = \"\" Then\n        MsgBox SoundFile & vbCrLf & \"がありません。\", vbExclamation\n        Exit Sub\n    End If\n    rc = mciSendString(\"Open \" & SoundFile, \"\", 0, 0)\n    rc = mciSendString(\"Play \" & SoundFile & \" wait\", \"\", 0, 0)\n    rc = mciSendString(\"Close \" & SoundFile, \"\", 0, 0)\n    SoundFile = \"C:\\Windows\\Media\\tada.wav\"\n    If Dir(SoundFile) = \"\" Then\n        MsgBox SoundFile & vbCrLf & \"がありません。\", vbExclamation\n        Exit Sub\n    End If\n    rc = mciSendString(\"Open \" & SoundFile, \"\", 0, 0)\n    rc = mciSendString(\"Play \" & SoundFile & \" wait\", \"\", 0, 0)\n    rc = mciSendString(\"Close \" & SoundFile, \"\", 0, 0)\nEnd Sub\n\nPublic Function fnBeep(lngHelz as Long,lngDurationMilliSeconds As Long)\nBeep lngHelz,lngDurationMilliseconds\nEnd function\nSub BeepSoundTest()\nDim HeltzLong As Long\nDim JikanLong As Long 'millisecond\nHeltzLong = 440\nJikanLong = 1000 '1 Second\nBeep HeltzLong, JikanLong\nEnd Sub\nSub MessageBeepTest()\nDim Result\nResult = 0\n'Windows10は標準だと同じ音が設定されているためがないのでこの2種類が顕著な違いがある。\n' Stopで止めないと音が鳴らない\nResult = MessageBeep(BeepType.MB_ICONEXCLAMATION)\nStop\nMessageBeep BeepType.MB_ICONHAND\n'どちらの書き方でもよい\nEnd Sub\n```\n\n#各関数\n#mcSendString\nwavファイル名を送信して音を鳴らす\nただしこのC:\\Windows\\Mediaのファイルは管理者によって削られている場合がある。\n削られていない場合はtada.wavがあるが昔と比べると安っぽい。\nまた一つならしたら時間をおかないと次のが鳴る。\nOfficeTanaka 大先生のを改造しているが、呼び出すときが重い。\n\n\n##Beep\n確実に使える。ただし音の高さと時間しかないのでサイン波（だと思う）が出る。\n最大同時発音数は１なので、和音を鳴らすことはできない。\n15000以上にするとモスキート音が出せるので加齢チェックに使える。\nしかしなぜかノイズが出る\nなので普通は1000程度を1秒（1000）鳴らすとかそういう使い方をする\nfnBeep関数を作ったのでDeclare Beepと組でこれで任意の高さの音を鳴らせる。\n\n##MessageBeep\nWindows10のシステム音が鳴らせる。\nシステム音を変えると音が変わる。\nしかしシステム音がしょぼいので、2種類しか出ない。\nEnumにするのは上記リンク先掲示板のアイディアだが、実質2種類しかない。\n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:53:12+09:00",
      "group": null,
      "id": "9f4cfd58461955dfa850",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "api",
          "versions": []
        },
        {
          "name": "VBA",
          "versions": []
        },
        {
          "name": "beep",
          "versions": []
        },
        {
          "name": "MessageBeep",
          "versions": []
        },
        {
          "name": "mcSendString",
          "versions": []
        }
      ],
      "title": "VBA API 64/32bit共用 音を鳴らす",
      "updated_at": "2018-08-19T22:00:17+09:00",
      "url": "https://qiita.com/Q11Q/items/9f4cfd58461955dfa850",
      "user": {
        "description": "",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 6,
        "github_login_name": "Q11Q",
        "id": "Q11Q",
        "items_count": 210,
        "linkedin_id": "",
        "location": "",
        "name": "",
        "organization": "",
        "permanent_id": 126919,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/126919/profile-images/1473716717",
        "twitter_screen_name": null,
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h1>\n<span id=\"前回の内容\" class=\"fragment\"></span><a href=\"#%E5%89%8D%E5%9B%9E%E3%81%AE%E5%86%85%E5%AE%B9\"><i class=\"fa fa-link\"></i></a>前回の内容</h1>\n\n<p><a href=\"https://qiita.com/mizssy07/items/0f4ca2d7e6f9e022c5e2\" id=\"reference-147bb22e760e45773a0b\">スクレイピングの学習 Python3系 その2</a></p>\n\n<h1>\n<span id=\"改善点\" class=\"fragment\"></span><a href=\"#%E6%94%B9%E5%96%84%E7%82%B9\"><i class=\"fa fa-link\"></i></a>改善点</h1>\n\n<ul>\n<li>一旦ローカルではなくGoogleスプレッドシート上にファイルを出力してみる</li>\n<li>特定のファイルを開き、取得したタイトルとURLを書き込む</li>\n</ul>\n\n<h1>\n<span id=\"手順\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86\"><i class=\"fa fa-link\"></i></a>手順</h1>\n\n<ul>\n<li>Google ColaboratoryでGoogleスプレッドシートを開く</li>\n<li>既に取得済みの値から、A列にタイトル、B列にURLを書き込む</li>\n</ul>\n\n<h1>\n<span id=\"追加したコード\" class=\"fragment\"></span><a href=\"#%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>追加したコード</h1>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"c\"># !pip install gspread</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google.colab</span> <span class=\"kn\">import</span> <span class=\"n\">auth</span>\n<span class=\"kn\">from</span> <span class=\"nn\">oauth2client.client</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleCredentials</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gspread</span>\n\n<span class=\"c\"># 認証処理</span>\n<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">authenticate_user</span><span class=\"p\">()</span>\n<span class=\"n\">gc</span> <span class=\"o\">=</span> <span class=\"n\">gspread</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"n\">GoogleCredentials</span><span class=\"o\">.</span><span class=\"n\">get_application_default</span><span class=\"p\">())</span>\n\n<span class=\"c\"># ファイルを開く</span>\n<span class=\"c\"># 'マイドライブ/sheet/#ファイル#'というスプレッドシートをオープン</span>\n<span class=\"n\">sh</span> <span class=\"o\">=</span> <span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">open_by_key</span><span class=\"p\">(</span><span class=\"s\">'1###Y'</span><span class=\"p\">)</span> \n<span class=\"n\">worksheet</span> <span class=\"o\">=</span> <span class=\"n\">sh</span><span class=\"o\">.</span><span class=\"n\">get_worksheet</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c\"># 書き込み用ワークシートを指定</span>\n\n<span class=\"c\"># 抽出したa要素をセルに入れ込む</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">string</span> <span class=\"c\">#　記事名の取得</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">\"href\"</span><span class=\"p\">)</span> <span class=\"c\">#リンクの取得</span>\n    <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cell</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>  <span class=\"c\"># 座標指定(行,列) # CSVに記入</span>\n    <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cell</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h1>\n<span id=\"全体のコード\" class=\"fragment\"></span><a href=\"#%E5%85%A8%E4%BD%93%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>全体のコード</h1>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"c\"># coding: UTF-8</span>\n<span class=\"c\"># !pip install gspread</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bs4</span> <span class=\"kn\">import</span> <span class=\"n\">BeautifulSoup</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google.colab</span> <span class=\"kn\">import</span> <span class=\"n\">auth</span>\n<span class=\"kn\">from</span> <span class=\"nn\">oauth2client.client</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleCredentials</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gspread</span>\n\n<span class=\"c\"># 認証処理</span>\n<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">authenticate_user</span><span class=\"p\">()</span>\n<span class=\"n\">gc</span> <span class=\"o\">=</span> <span class=\"n\">gspread</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"n\">GoogleCredentials</span><span class=\"o\">.</span><span class=\"n\">get_application_default</span><span class=\"p\">())</span>\n\n<span class=\"c\"># ファイルを開く</span>\n<span class=\"c\"># 'マイドライブ/sheet/#ファイル#'というスプレッドシートをオープン</span>\n<span class=\"n\">sh</span> <span class=\"o\">=</span> <span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">open_by_key</span><span class=\"p\">(</span><span class=\"s\">'1###Y'</span><span class=\"p\">)</span> \n<span class=\"n\">worksheet</span> <span class=\"o\">=</span> <span class=\"n\">sh</span><span class=\"o\">.</span><span class=\"n\">get_worksheet</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c\"># 書き込み用ワークシートを指定</span>\n\n<span class=\"c\"># アクセスするURL = ニュートピ</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">\"https://newstopics.jp/\"</span>\n\n<span class=\"c\"># htmlを取得、BeautifulSoupで扱う</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n<span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"s\">'html.parser'</span><span class=\"p\">)</span> <span class=\"c\"># BeautifulSoupの初期化</span>\n\n<span class=\"c\"># aタグの中から、class=titleの含まれたものを取得</span>\n<span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s\">\"class\"</span><span class=\"p\">:</span> <span class=\"s\">\"title\"</span><span class=\"p\">})</span>\n\n<span class=\"c\"># 抽出したa要素をセルに入れ込む</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">string</span> <span class=\"c\">#　記事名の取得</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">\"href\"</span><span class=\"p\">)</span> <span class=\"c\">#リンクの取得</span>\n    <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cell</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>  <span class=\"c\"># 座標指定(行,列) # CSVに記入</span>\n    <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cell</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h1>\n<span id=\"補足\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>補足</h1>\n\n<ul>\n<li>\n<code>gspread</code>はimportだけだと使えない。<code>!pip install gspread</code>でインストールしてあげる必要あり。(一旦インストールしてしまえばランタイム接続中は再度インストールする必要なし。)</li>\n<li>for文は<code>enumerate</code>を使用して第二引数を1からに指定。スプレッドシート上の座標を指定するのに使用。</li>\n<li>\n<code>sh = gc.open_by_key('###')</code>ファイルのリンク先IDを入れる(<a href=\"https://uepon.hatenadiary.com/entry/2018/04/08/110916\" rel=\"nofollow noopener\" target=\"_blank\">参考リンク</a>)</li>\n<li>\n<code>update_cell</code>以外にもセル指定の仕方がある(<a href=\"https://qiita.com/hid_tgc/items/3f6f97c58c84457bf00c\" id=\"reference-aa3d8b456cf4c679d0c6\">参考リンク</a>)</li>\n</ul>\n\n<h1>\n<span id=\"詰まったところ\" class=\"fragment\"></span><a href=\"#%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>詰まったところ</h1>\n\n<ul>\n<li>gspreadのinstallをせずにimportしてエラーを吐いていた</li>\n<li>pandasで作った行を挿入しようとしたが出来なかったので<code>enumerate</code>を利用してセル単位での書き込み形式にした</li>\n</ul>\n\n<h1>\n<span id=\"次回への課題\" class=\"fragment\"></span><a href=\"#%E6%AC%A1%E5%9B%9E%E3%81%B8%E3%81%AE%E8%AA%B2%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>次回への課題</h1>\n\n<ul>\n<li>法律周りの確認</li>\n<li><del>CSVでダウンロード</del></li>\n<li>1時間に1回取得などの動き</li>\n<li>重複する内容を取得しないようにする</li>\n<li>次ページ以降の取得</li>\n<li>元リンクを取得</li>\n<li>ローカル環境で動かす</li>\n<li>APIを使用してスプレッドシートにアクセス new</li>\n</ul>\n",
      "body": "# 前回の内容\n[スクレイピングの学習 Python3系 その2](https://qiita.com/mizssy07/items/0f4ca2d7e6f9e022c5e2)\n\n# 改善点\n- 一旦ローカルではなくGoogleスプレッドシート上にファイルを出力してみる\n- 特定のファイルを開き、取得したタイトルとURLを書き込む\n\n# 手順\n- Google ColaboratoryでGoogleスプレッドシートを開く\n- 既に取得済みの値から、A列にタイトル、B列にURLを書き込む\n\n# 追加したコード\n```python:\n# !pip install gspread\nfrom google.colab import auth\nfrom oauth2client.client import GoogleCredentials\nimport gspread\n\n# 認証処理\nauth.authenticate_user()\ngc = gspread.authorize(GoogleCredentials.get_application_default())\n\n# ファイルを開く\n# 'マイドライブ/sheet/#ファイル#'というスプレッドシートをオープン\nsh = gc.open_by_key('1###Y') \nworksheet = sh.get_worksheet(0) # 書き込み用ワークシートを指定\n\n# 抽出したa要素をセルに入れ込む\nfor i, tag in enumerate(tags, 1):\n    name = tag.string #　記事名の取得\n    url = tag.get(\"href\") #リンクの取得\n    worksheet.update_cell(i, 1, name)  # 座標指定(行,列) # CSVに記入\n    worksheet.update_cell(i, 2, url)\n```\n\n# 全体のコード\n```python:\n# coding: UTF-8\n# !pip install gspread\nfrom bs4 import BeautifulSoup\nimport requests\nfrom google.colab import auth\nfrom oauth2client.client import GoogleCredentials\nimport gspread\n\n# 認証処理\nauth.authenticate_user()\ngc = gspread.authorize(GoogleCredentials.get_application_default())\n\n# ファイルを開く\n# 'マイドライブ/sheet/#ファイル#'というスプレッドシートをオープン\nsh = gc.open_by_key('1###Y') \nworksheet = sh.get_worksheet(0) # 書き込み用ワークシートを指定\n\n# アクセスするURL = ニュートピ\nurl = \"https://newstopics.jp/\"\n\n# htmlを取得、BeautifulSoupで扱う\nr = requests.get(url)\nsoup = BeautifulSoup(r.content, 'html.parser') # BeautifulSoupの初期化\n\n# aタグの中から、class=titleの含まれたものを取得\ntags = soup.find_all(\"a\", {\"class\": \"title\"})\n\n# 抽出したa要素をセルに入れ込む\nfor i, tag in enumerate(tags, 1):\n    name = tag.string #　記事名の取得\n    url = tag.get(\"href\") #リンクの取得\n    worksheet.update_cell(i, 1, name)  # 座標指定(行,列) # CSVに記入\n    worksheet.update_cell(i, 2, url)\n```\n\n# 補足\n- `gspread`はimportだけだと使えない。`!pip install gspread`でインストールしてあげる必要あり。(一旦インストールしてしまえばランタイム接続中は再度インストールする必要なし。)\n- for文は`enumerate`を使用して第二引数を1からに指定。スプレッドシート上の座標を指定するのに使用。\n- `sh = gc.open_by_key('###') `ファイルのリンク先IDを入れる([参考リンク](https://uepon.hatenadiary.com/entry/2018/04/08/110916))\n- `update_cell`以外にもセル指定の仕方がある([参考リンク](https://qiita.com/hid_tgc/items/3f6f97c58c84457bf00c))\n\n# 詰まったところ\n- gspreadのinstallをせずにimportしてエラーを吐いていた\n- pandasで作った行を挿入しようとしたが出来なかったので`enumerate`を利用してセル単位での書き込み形式にした\n\n# 次回への課題\n- 法律周りの確認\n- ~~CSVでダウンロード~~\n- 1時間に1回取得などの動き\n- 重複する内容を取得しないようにする\n- 次ページ以降の取得\n- 元リンクを取得\n- ローカル環境で動かす\n- APIを使用してスプレッドシートにアクセス new\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:52:31+09:00",
      "group": null,
      "id": "f42925894f45d4443bc8",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "スクレイピング",
          "versions": []
        },
        {
          "name": "初心者",
          "versions": []
        },
        {
          "name": "python3",
          "versions": []
        }
      ],
      "title": "スクレイピングの学習 Python3系 その3",
      "updated_at": "2018-08-19T21:52:31+09:00",
      "url": "https://qiita.com/mizssy07/items/f42925894f45d4443bc8",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 5,
        "followers_count": 5,
        "github_login_name": "mizssy07",
        "id": "mizssy07",
        "items_count": 3,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 29997,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/29997/profile-images/1534513766",
        "twitter_screen_name": "mizssy07",
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h2>\n<span id=\"reference\" class=\"fragment\"></span><a href=\"#reference\"><i class=\"fa fa-link\"></i></a>Reference</h2>\n\n<p><a href=\"https://arxiv.org/abs/1711.09784\" rel=\"nofollow noopener\" target=\"_blank\">Distilling a Neural Network Into a Soft Decision Tree</a></p>\n\n<p><a href=\"https://camo.qiitausercontent.com/cecbf01b96f6458118aee10aaafd8d7d766c5303/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f37666338313837342d643936612d356635622d326561382d3436313937383862333432372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/cecbf01b96f6458118aee10aaafd8d7d766c5303/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f37666338313837342d643936612d356635622d326561382d3436313937383862333432372e706e67\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/254604/7fc81874-d96a-5f5b-2ea8-4619788b3427.png\"></a></p>\n\n<h2>\n<span id=\"data\" class=\"fragment\"></span><a href=\"#data\"><i class=\"fa fa-link\"></i></a>Data</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">images_train</span> <span class=\"o\">=</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">images</span>\n<span class=\"n\">labels_train</span> <span class=\"o\">=</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">labels</span>\n<span class=\"n\">images_test</span> <span class=\"o\">=</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">images</span>\n<span class=\"n\">labels_test</span> <span class=\"o\">=</span> <span class=\"n\">mnist</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">labels</span>\n</pre></div></div>\n\n<h2>\n<span id=\"sample-code\" class=\"fragment\"></span><a href=\"#sample-code\"><i class=\"fa fa-link\"></i></a>Sample Code</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"k\">class</span> <span class=\"nc\">DecisionTree</span><span class=\"p\">():</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">weight_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">):</span>\n    <span class=\"n\">initializer</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">truncated_normal_initializer</span><span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">stddev</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">get_variable</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">initializer</span> <span class=\"o\">=</span> <span class=\"n\">initializer</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">bias_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">):</span>\n    <span class=\"n\">initializer</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">constant_initializer</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">get_variable</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">initializer</span> <span class=\"o\">=</span> <span class=\"n\">initializer</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">tree</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">lam</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"bp\">False</span><span class=\"p\">):</span>\n\n    <span class=\"n\">pathprob</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">pathprob_l</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">prob_i</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">prob_l</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">loss_i</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">loss_l</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">))</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_0'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">sigmoid</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n      <span class=\"n\">prob_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">prob_i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"mf\">1e-10</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span> \\\n                                   <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span>\n      <span class=\"n\">loss_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_1'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">sigmoid</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n      <span class=\"n\">prob_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">p</span><span class=\"p\">))</span>\n      <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">prob_i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"mf\">1e-10</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span> \\\n                                   <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span>\n      <span class=\"n\">loss_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_2'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">sigmoid</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n      <span class=\"n\">prob_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">pathprob</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">p</span><span class=\"p\">))</span>\n      <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">prob_i</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"mf\">1e-10</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span> \\\n                                   <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)))</span>\n      <span class=\"n\">loss_i</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"c\"># leaf  </span>\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_3'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)),</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n      <span class=\"n\">prob_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">loss_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_4'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)),</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n      <span class=\"n\">prob_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">loss_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_5'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)),</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n      <span class=\"n\">prob_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">loss_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">variable_scope</span><span class=\"p\">(</span><span class=\"s\">'n_6'</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"n\">reuse</span><span class=\"p\">):</span>\n      <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weight_variable</span><span class=\"p\">(</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">n_in</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n      <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bias_variable</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">clip_by_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"mf\">1e-10</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)),</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">pathprob</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n      <span class=\"n\">prob_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n      <span class=\"n\">loss_l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"n\">loss_total</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_sum</span><span class=\"p\">(</span><span class=\"n\">loss_l</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">lam</span> <span class=\"o\">*</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">loss_i</span><span class=\"p\">)</span>\n\n    <span class=\"n\">pathprob</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"n\">pathprob_l</span> <span class=\"o\">=</span> <span class=\"n\">pathprob</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">:,</span> <span class=\"p\">:]</span>\n    <span class=\"n\">prob_l</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">prob_l</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">loss_total</span><span class=\"p\">,</span> <span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">accuracy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pathprob</span><span class=\"p\">,</span> <span class=\"n\">prob</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">):</span>\n    <span class=\"n\">pathprob</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">tile</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n    <span class=\"n\">conditional</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"n\">pathprob</span><span class=\"p\">,</span> <span class=\"n\">prob</span><span class=\"p\">)</span>\n    <span class=\"n\">split_1</span><span class=\"p\">,</span> <span class=\"n\">split_2</span><span class=\"p\">,</span> <span class=\"n\">split_3</span><span class=\"p\">,</span> <span class=\"n\">split_4</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">conditional</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">split_1</span> <span class=\"o\">+</span> <span class=\"n\">split_2</span> <span class=\"o\">+</span> <span class=\"n\">split_3</span> <span class=\"o\">+</span> <span class=\"n\">split_4</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">squeeze</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">correct_preds</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">equal</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reduce_mean</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">correct_preds</span><span class=\"p\">,</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">accuracy</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">training</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"p\">):</span>\n    <span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">AdamOptimizer</span><span class=\"p\">(</span><span class=\"n\">learning_rate</span> <span class=\"o\">=</span> <span class=\"n\">learning_rate</span><span class=\"p\">)</span>\n    <span class=\"n\">train_step</span> <span class=\"o\">=</span> <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">train_step</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">fit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">images_train</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">,</span> <span class=\"n\">images_test</span><span class=\"p\">,</span> <span class=\"n\">labels_test</span><span class=\"p\">,</span> \\\n          <span class=\"n\">lam</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">show_step</span><span class=\"p\">,</span> <span class=\"n\">is_saving</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">):</span>\n\n    <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">reset_default_graph</span><span class=\"p\">()</span>\n\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">],</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n\n    <span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"o\">*</span><span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">lam</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">train_step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"p\">)</span>\n    <span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n    <span class=\"n\">init</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">global_variables_initializer</span><span class=\"p\">()</span>\n    <span class=\"n\">saver</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">Saver</span><span class=\"p\">()</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">sess</span><span class=\"p\">:</span>\n\n      <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">init</span><span class=\"p\">)</span>\n\n      <span class=\"n\">history_loss_train</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n      <span class=\"n\">history_loss_test</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n      <span class=\"n\">history_acc_train</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n      <span class=\"n\">history_acc_test</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n      <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">):</span>\n        <span class=\"c\"># Train</span>\n        <span class=\"n\">rand_index</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">images_train</span><span class=\"p\">),</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">batch_size</span><span class=\"p\">)</span>\n        <span class=\"n\">x_batch</span> <span class=\"o\">=</span> <span class=\"n\">images_train</span><span class=\"p\">[</span><span class=\"n\">rand_index</span><span class=\"p\">]</span>\n        <span class=\"n\">y_batch</span> <span class=\"o\">=</span> <span class=\"n\">labels_train</span><span class=\"p\">[</span><span class=\"n\">rand_index</span><span class=\"p\">]</span>\n\n        <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x_batch</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">y_batch</span><span class=\"p\">}</span>\n\n        <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">train_step</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n\n        <span class=\"n\">temp_loss</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n        <span class=\"n\">temp_acc</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n\n        <span class=\"n\">history_loss_train</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temp_loss</span><span class=\"p\">)</span>\n        <span class=\"n\">history_acc_train</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temp_acc</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">show_step</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n          <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'-'</span> <span class=\"o\">*</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n          <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'Iteration: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">'  Loss: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">temp_loss</span><span class=\"p\">)</span> <span class=\"o\">+</span> \\\n                <span class=\"s\">'  Accuracy: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">temp_acc</span><span class=\"p\">))</span>\n\n        <span class=\"c\"># Test</span>\n        <span class=\"n\">rand_index</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">images_test</span><span class=\"p\">),</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">batch_size</span><span class=\"p\">)</span>\n        <span class=\"n\">x_batch</span> <span class=\"o\">=</span> <span class=\"n\">images_test</span><span class=\"p\">[</span><span class=\"n\">rand_index</span><span class=\"p\">]</span>\n        <span class=\"n\">y_batch</span> <span class=\"o\">=</span> <span class=\"n\">labels_test</span><span class=\"p\">[</span><span class=\"n\">rand_index</span><span class=\"p\">]</span>\n\n        <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x_batch</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">y_batch</span><span class=\"p\">}</span>\n\n        <span class=\"n\">temp_loss</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n        <span class=\"n\">temp_acc</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n\n        <span class=\"n\">history_loss_test</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temp_loss</span><span class=\"p\">)</span>\n        <span class=\"n\">history_acc_test</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temp_acc</span><span class=\"p\">)</span>\n\n      <span class=\"k\">if</span> <span class=\"n\">is_saving</span><span class=\"p\">:</span>\n        <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">saver</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'done saving at '</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n\n      <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'-'</span><span class=\"o\">*</span> <span class=\"mi\">15</span><span class=\"p\">)</span>    \n      <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n      <span class=\"n\">ax1</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">),</span> <span class=\"n\">history_loss_train</span><span class=\"p\">,</span> <span class=\"s\">'b-'</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s\">'Train'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">),</span> <span class=\"n\">history_loss_test</span><span class=\"p\">,</span> <span class=\"s\">'r--'</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s\">'Test'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s\">'Loss'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"s\">'upper right'</span><span class=\"p\">)</span>\n\n      <span class=\"n\">ax2</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n      <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">),</span> <span class=\"n\">history_acc_train</span><span class=\"p\">,</span> <span class=\"s\">'b-'</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s\">'Train'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">),</span> <span class=\"n\">history_acc_test</span><span class=\"p\">,</span> <span class=\"s\">'r--'</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s\">'Test'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">set_ylim</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n      <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s\">'Accuracy'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"s\">'lower right'</span><span class=\"p\">)</span>\n\n      <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">):</span>\n\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">],</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"o\">*</span><span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">reuse</span> <span class=\"o\">=</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n    <span class=\"n\">saver</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">Saver</span><span class=\"p\">()</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">sess</span><span class=\"p\">:</span>\n\n      <span class=\"n\">saver</span><span class=\"o\">.</span><span class=\"n\">restore</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n\n      <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">labels</span><span class=\"p\">}</span>\n\n      <span class=\"k\">return</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">pathprob_l</span><span class=\"p\">,</span> <span class=\"n\">prob_l</span><span class=\"p\">,</span> <span class=\"n\">y_hat</span><span class=\"p\">],</span> <span class=\"n\">feed_dict</span> <span class=\"o\">=</span> <span class=\"n\">feed_dict</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h2>\n<span id=\"parameters\" class=\"fragment\"></span><a href=\"#parameters\"><i class=\"fa fa-link\"></i></a>Parameters</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">lam</span> <span class=\"o\">=</span> <span class=\"mf\">10.0</span>\n<span class=\"n\">learning_rate</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>\n<span class=\"n\">n_iter</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n<span class=\"n\">show_step</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s\">'datalab/model'</span>\n</pre></div></div>\n\n<h2>\n<span id=\"output\" class=\"fragment\"></span><a href=\"#output\"><i class=\"fa fa-link\"></i></a>Output</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">images_train</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">,</span> <span class=\"n\">images_test</span><span class=\"p\">,</span> <span class=\"n\">labels_test</span><span class=\"p\">,</span> \\\n       <span class=\"n\">lam</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">show_step</span><span class=\"p\">,</span> <span class=\"n\">is_saving</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/22b2c7ed2b0060c68015c6b6e85cac4e5cc90f80/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f35316465613762372d323734662d353630612d646665632d3430666265326262643561332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/22b2c7ed2b0060c68015c6b6e85cac4e5cc90f80/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f35316465613762372d323734662d353630612d646665632d3430666265326262643561332e706e67\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/254604/51dea7b7-274f-560a-dfec-40fbe2bbd5a3.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">images_train</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">labels_train</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n\n<span class=\"n\">preds</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span> \n\n<span class=\"c\">#print (np.shape(preds[0]))</span>\n<span class=\"c\">#print (np.shape(preds[1]))</span>\n<span class=\"c\">#print (np.shape(preds[2]))</span>\n\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'-'</span> <span class=\"o\">*</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'Prediction: '</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">preds</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span><span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'True: '</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">'Leaf: '</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">preds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)),</span> <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/928527548e333a67d043b429f020f736af751c75/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f66316435393130362d393463382d346434372d626138382d3138643861393563383230322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/928527548e333a67d043b429f020f736af751c75/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3235343630342f66316435393130362d393463382d346434372d626138382d3138643861393563383230322e706e67\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/254604/f1d59106-94c8-4d47-ba88-18d8a95c8202.png\"></a></p>\n",
      "body": "##Reference\n[Distilling a Neural Network Into a Soft Decision Tree](https://arxiv.org/abs/1711.09784)\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/254604/7fc81874-d96a-5f5b-2ea8-4619788b3427.png)\n\n##Data\n```python\nimages_train = mnist.train.images\nlabels_train = mnist.train.labels\nimages_test = mnist.test.images\nlabels_test = mnist.test.labels\n```\n\n\n##Sample Code\n```python\nclass DecisionTree():\n  \n  def __init__(self):\n    pass\n  \n  def weight_variable(self, name, shape):\n    initializer = tf.truncated_normal_initializer(mean = 0.0, stddev = 0.01, dtype = tf.float32)\n    return tf.get_variable(name, shape, initializer = initializer)\n\n  def bias_variable(self, name, shape):\n    initializer = tf.constant_initializer(value = 0.0, dtype = tf.float32)\n    return tf.get_variable(name, shape, initializer = initializer)\n  \n  def tree(self, x, y, n_in, batch_size, lam, reuse = False):\n\n    pathprob = []\n    pathprob_l = []\n    prob_i = []\n    prob_l = []\n    loss_i = []\n    loss_l = []\n    \n    pathprob.append(tf.ones(shape = [batch_size, 1], dtype = tf.float32))\n    \n    with tf.variable_scope('n_0', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 1])\n      b = self.bias_variable('b', [1])\n      \n      p = tf.nn.sigmoid(tf.matmul(x, w) + b)\n      prob_i.append(p)\n      pathprob.append(p)\n      pathprob.append(1.0 - p)\n      alpha = tf.reduce_mean(pathprob[0] * prob_i[0]) / (tf.reduce_mean(pathprob[0]) + 1e-10)\n      loss = -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(alpha, 1e-10, 1.0))) \\\n                                   -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(1.0 - alpha, 1e-10, 1.0)))\n      loss_i.append(loss)\n      \n    with tf.variable_scope('n_1', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 1])\n      b = self.bias_variable('b', [1])\n      \n      p = tf.nn.sigmoid(tf.matmul(x, w) + b)\n      prob_i.append(p)\n      pathprob.append(pathprob[1] * p)\n      pathprob.append(pathprob[1] * (1.0 - p))\n      alpha = tf.reduce_mean(pathprob[1] * prob_i[1]) / (tf.reduce_mean(pathprob[1]) + 1e-10)\n      loss = -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(alpha, 1e-10, 1.0))) \\\n                                   -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(1.0 - alpha, 1e-10, 1.0)))\n      loss_i.append(loss)\n      \n    with tf.variable_scope('n_2', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 1])\n      b = self.bias_variable('b', [1])\n      \n      p = tf.nn.sigmoid(tf.matmul(x, w) + b)\n      prob_i.append(p)\n      pathprob.append(pathprob[2] * p)\n      pathprob.append(pathprob[2] * (1.0 - p))\n      alpha = tf.reduce_mean(pathprob[2] * prob_i[2]) / (tf.reduce_mean(pathprob[2]) + 1e-10)\n      loss = -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(alpha, 1e-10, 1.0))) \\\n                                   -0.5 * tf.reduce_mean(tf.log(tf.clip_by_value(1.0 - alpha, 1e-10, 1.0)))\n      loss_i.append(loss)\n\n    # leaf  \n    with tf.variable_scope('n_3', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 10])\n      b = self.bias_variable('b', [10])\n      \n      p = tf.nn.softmax(tf.matmul(x, w) + b, axis = 1)\n      loss = - tf.reduce_mean(tf.reduce_sum(y * tf.log(tf.clip_by_value(p, 1e-10, 1.0)), axis = 1)) * pathprob[3]\n      prob_l.append(p)\n      loss_l.append(loss)\n\n    with tf.variable_scope('n_4', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 10])\n      b = self.bias_variable('b', [10])\n\n      p = tf.nn.softmax(tf.matmul(x, w) + b, axis = 1)\n      loss = - tf.reduce_mean(tf.reduce_sum(y * tf.log(tf.clip_by_value(p, 1e-10, 1.0)), axis = 1)) * pathprob[4]\n      prob_l.append(p)\n      loss_l.append(loss)\n\n    with tf.variable_scope('n_5', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 10])\n      b = self.bias_variable('b', [10])\n      \n      p = tf.nn.softmax(tf.matmul(x, w) + b, axis = 1)\n      loss = - tf.reduce_mean(tf.reduce_sum(y * tf.log(tf.clip_by_value(p, 1e-10, 1.0)), axis = 1)) * pathprob[5]\n      prob_l.append(p)\n      loss_l.append(loss)\n\n    with tf.variable_scope('n_6', reuse = reuse):\n      w = self.weight_variable('w', [n_in, 10])\n      b = self.bias_variable('b', [10])\n\n      p = tf.nn.softmax(tf.matmul(x, w) + b, axis = 1)\n      loss = - tf.reduce_mean(tf.reduce_sum(y * tf.log(tf.clip_by_value(p, 1e-10, 1.0)), axis = 1)) * pathprob[6]\n      prob_l.append(p)\n      loss_l.append(loss)\n      \n    loss_total = tf.reduce_sum(loss_l) + lam * tf.reduce_mean(loss_i)\n    \n    pathprob = tf.transpose(pathprob, [1, 0, 2])\n    pathprob_l = pathprob[:, 3:, :]\n    prob_l = tf.transpose(prob_l, [1, 0, 2])\n    \n    return loss_total, pathprob_l, prob_l\n  \n  def accuracy(self, pathprob, prob, t):\n    pathprob = tf.tile(pathprob, [1, 1, 10])\n    conditional = tf.multiply(pathprob, prob)\n    split_1, split_2, split_3, split_4 = tf.split(conditional, 4, axis= 1)\n    y = split_1 + split_2 + split_3 + split_4\n    y = tf.squeeze(y)\n    correct_preds = tf.equal(tf.argmax(y, axis = 1), tf.argmax(t, axis = 1))\n    accuracy = tf.reduce_mean(tf.cast(correct_preds, tf.float32))\n    return accuracy, y\n\n  def training(self, loss, learning_rate):\n    optimizer = tf.train.AdamOptimizer(learning_rate = learning_rate)\n    train_step = optimizer.minimize(loss)\n    return train_step\n  \n  def fit(self, images_train, labels_train, images_test, labels_test, \\\n          lam, learning_rate, n_iter, batch_size, show_step, is_saving, model_path):\n    \n    tf.reset_default_graph()\n    \n    x = tf.placeholder(shape = [None, 28 * 28], dtype = tf.float32)\n    y = tf.placeholder(shape = [None, 10], dtype = tf.float32)\n    \n    loss, pathprob_l, prob_l = self.tree(x, y, 28*28, batch_size, lam, reuse = False)\n    train_step = self.training(loss, learning_rate)\n    acc, _ = self.accuracy(pathprob_l, prob_l, y)\n    \n    init = tf.global_variables_initializer()\n    saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n\n      sess.run(init)\n      \n      history_loss_train = []\n      history_loss_test = []\n      history_acc_train = []\n      history_acc_test = []\n\n      for i in range(n_iter):\n        # Train\n        rand_index = np.random.choice(len(images_train), size = batch_size)\n        x_batch = images_train[rand_index]\n        y_batch = labels_train[rand_index]\n\n        feed_dict = {x: x_batch, y: y_batch}\n\n        sess.run(train_step, feed_dict = feed_dict)\n\n        temp_loss = sess.run(loss, feed_dict = feed_dict)\n        temp_acc = sess.run(acc, feed_dict = feed_dict)\n\n        history_loss_train.append(temp_loss)\n        history_acc_train.append(temp_acc)\n\n        if (i + 1) % show_step == 0:\n          print ('-' * 15)\n          print ('Iteration: ' + str(i + 1) + '  Loss: ' + str(temp_loss) + \\\n                '  Accuracy: ' + str(temp_acc))\n\n        # Test\n        rand_index = np.random.choice(len(images_test), size = batch_size)\n        x_batch = images_test[rand_index]\n        y_batch = labels_test[rand_index]\n\n        feed_dict = {x: x_batch, y: y_batch}\n\n        temp_loss = sess.run(loss, feed_dict = feed_dict)\n        temp_acc = sess.run(acc, feed_dict = feed_dict)\n\n        history_loss_test.append(temp_loss)\n        history_acc_test.append(temp_acc)\n\n      if is_saving:\n        model_path = saver.save(sess, model_path)\n        print ('done saving at ', model_path)\n\n      print ('-'* 15)    \n      fig = plt.figure(figsize = (10, 3))\n      ax1 = fig.add_subplot(1, 2, 1)\n      ax1.plot(range(n_iter), history_loss_train, 'b-', label = 'Train')\n      ax1.plot(range(n_iter), history_loss_test, 'r--', label = 'Test')\n      ax1.set_title('Loss')\n      ax1.legend(loc = 'upper right')\n\n      ax2 = fig.add_subplot(1, 2, 2)\n      ax2.plot(range(n_iter), history_acc_train, 'b-', label = 'Train')\n      ax2.plot(range(n_iter), history_acc_test, 'r--', label = 'Test')\n      ax2.set_ylim(0.0, 1.0)\n      ax2.set_title('Accuracy')\n      ax2.legend(loc = 'lower right')\n\n      plt.show()\n  \n  def predict(self, images, labels, batch_size, model_path):\n        \n    x = tf.placeholder(shape = [None, 28 * 28], dtype = tf.float32)\n    y = tf.placeholder(shape = [None, 10], dtype = tf.float32)\n    \n    _, pathprob_l, prob_l = self.tree(x, y, 28*28, batch_size, 1.0, reuse = True)\n    _, y_hat = self.accuracy(pathprob_l, prob_l, y)\n    \n    saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n\n      saver.restore(sess, model_path)\n      \n      feed_dict = {x: images, y: labels}\n      \n      return sess.run([pathprob_l, prob_l, y_hat], feed_dict = feed_dict)\n```\n\n##Parameters\n```python\nlam = 10.0\nlearning_rate = 0.01\nn_iter = 200\nbatch_size = 64\nshow_step = 100\nmodel_path = 'datalab/model'\n```\n\n##Output\n```python\ndt.fit(images_train, labels_train, images_test, labels_test, \\\n       lam, learning_rate, n_iter, batch_size, show_step, is_saving, model_path)\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/254604/51dea7b7-274f-560a-dfec-40fbe2bbd5a3.png)\n\n```python\nindex = np.random.choice(10000, 10)\nimages = images_train[index]\nlabels = labels_train[index]\n\npreds = dt.predict(images, labels, 10, model_path) \n\n#print (np.shape(preds[0]))\n#print (np.shape(preds[1]))\n#print (np.shape(preds[2]))\n\nprint ('-' * 15)\nprint ('Prediction: ')\nprint (np.argmax(preds[2],axis = 1))\nprint ('True: ')\nprint (np.argmax(labels, axis = 1))\nprint ('Leaf: ')\nprint (np.argmax(np.reshape(preds[0], (-1, 4)), axis = 1))\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/254604/f1d59106-94c8-4d47-ba88-18d8a95c8202.png)\n\n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:51:25+09:00",
      "group": null,
      "id": "c713974d65f02ca4ff92",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "MachineLearning",
          "versions": []
        },
        {
          "name": "DeepLearning",
          "versions": []
        },
        {
          "name": "decisiontree",
          "versions": []
        },
        {
          "name": "TensorFlow",
          "versions": []
        }
      ],
      "title": "Neural (Decision) Tree の実装に関するメモ",
      "updated_at": "2018-08-19T21:55:08+09:00",
      "url": "https://qiita.com/takeshikondo/items/c713974d65f02ca4ff92",
      "user": {
        "description": "",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 4,
        "github_login_name": "takeshikondo",
        "id": "takeshikondo",
        "items_count": 43,
        "linkedin_id": "",
        "location": "Tokyo, Japan",
        "name": "Takeshi Kondo",
        "organization": "",
        "permanent_id": 254604,
        "profile_image_url": "https://avatars3.githubusercontent.com/u/31342274?v=4",
        "twitter_screen_name": null,
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h2>\n<span id=\"やりたいこと\" class=\"fragment\"></span><a href=\"#%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8\"><i class=\"fa fa-link\"></i></a>やりたいこと</h2>\n\n<p>cronでnpm scriptを定期実行させたい</p>\n\n<h2>\n<span id=\"設定\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>設定</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ crontab -e\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>* * * * * cd /path/dir/ &amp;&amp; npm script\n</pre></div></div>\n\n<h2>\n<span id=\"実行できないなぜ\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A1%8C%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%AA%E3%81%9C\"><i class=\"fa fa-link\"></i></a>実行できない、なぜ？</h2>\n\n<p>ログを出して確認してみる。</p>\n\n<h3>\n<span id=\"cronの実行ユーザを確認する\" class=\"fragment\"></span><a href=\"#cron%E3%81%AE%E5%AE%9F%E8%A1%8C%E3%83%A6%E3%83%BC%E3%82%B6%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>cronの実行ユーザを確認する</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>crontab -e\n</pre></div></div>\n\n<p>cronの実行ユーザをログに書き出す</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>* * * * * whoami &gt; /home/username/cron.log 2&gt;&amp;1\n</pre></div></div>\n\n<p>ログを確認する</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ cat /home/username/cron.log\n</pre></div></div>\n\n<h3>\n<span id=\"pathを確認する\" class=\"fragment\"></span><a href=\"#path%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>PATHを確認する</h3>\n\n<p>cronで実行する際のPATHを確認する</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>* * * * * echo $PATH &gt; /home/username/cron.log 2&gt;&amp;1\n</pre></div></div>\n\n<p>ログを確認する</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ cat /home/username/cron.log\n</pre></div></div>\n\n<p>該当するユーザで実行する際のPATHを確認する</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ echo $PATH\n</pre></div></div>\n\n<h2>\n<span id=\"結論\" class=\"fragment\"></span><a href=\"#%E7%B5%90%E8%AB%96\"><i class=\"fa fa-link\"></i></a>結論</h2>\n\n<p>自分の場合は、cronで実行する際のPATHとユーザで実行する際のPATHが異なっていたために、npm　scriptが実行できなかった。</p>\n\n<p>ので、cronで実行する際のPATHをユーザで実行する際のPATHに合わせてやったら、npm scriptが実行されるようになった。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ crontab -e\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>PATH= #ここにPATHを設定してやればOK\n\n* * * * * cd /path/dir/ &amp;&amp; npm script\n</pre></div></div>\n",
      "body": "## やりたいこと\ncronでnpm scriptを定期実行させたい\n\n## 設定\n```\n$ crontab -e\n```\n\n```\n* * * * * cd /path/dir/ && npm script\n```\n\n## 実行できない、なぜ？\nログを出して確認してみる。\n\n### cronの実行ユーザを確認する\n\n```\ncrontab -e\n```\n\ncronの実行ユーザをログに書き出す\n\n```\n* * * * * whoami > /home/username/cron.log 2>&1\n```\n\nログを確認する\n\n```\n$ cat /home/username/cron.log\n```\n\n### PATHを確認する\n\ncronで実行する際のPATHを確認する\n\n```\n* * * * * echo $PATH > /home/username/cron.log 2>&1\n```\n\nログを確認する\n\n```\n$ cat /home/username/cron.log\n```\n\n該当するユーザで実行する際のPATHを確認する\n\n```\n$ echo $PATH\n```\n\n## 結論\n自分の場合は、cronで実行する際のPATHとユーザで実行する際のPATHが異なっていたために、npm　scriptが実行できなかった。\n\nので、cronで実行する際のPATHをユーザで実行する際のPATHに合わせてやったら、npm scriptが実行されるようになった。\n\n```\n$ crontab -e\n```\n\n```\nPATH= #ここにPATHを設定してやればOK\n\n* * * * * cd /path/dir/ && npm script\n```\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:49:31+09:00",
      "group": null,
      "id": "1c2ba7fc847e65afb1ba",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Node.js",
          "versions": []
        },
        {
          "name": "cron",
          "versions": []
        },
        {
          "name": "npm",
          "versions": []
        }
      ],
      "title": "cronでnpm scriptを実行する際に詰まったら",
      "updated_at": "2018-08-19T21:49:31+09:00",
      "url": "https://qiita.com/hirokisan/items/1c2ba7fc847e65afb1ba",
      "user": {
        "description": "Webエンジニアとしてサービスづくりをしていく。\r\nLive on the Earth",
        "facebook_id": "",
        "followees_count": 14,
        "followers_count": 3,
        "github_login_name": "hirokisan",
        "id": "hirokisan",
        "items_count": 14,
        "linkedin_id": "",
        "location": "Aichi, Japan",
        "name": "hiroki ueno",
        "organization": "",
        "permanent_id": 97975,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/97975/profile-images/1531748328",
        "twitter_screen_name": "hirokisan39",
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h1>\n<span id=\"概要\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>概要</h1>\n\n<ul>\n<li>UITextViewへの文字入力を監視し、Viewの高さを変更させる</li>\n<li>過去の記事(<a href=\"https://qiita.com/k0uhashi/items/671ec40520967bc3949f\" id=\"reference-e811c67a6aa4a5f88d85\">iMessageの入力UIのようなキーボードの表示と連動するUIを作る with RxSwift, RxKeyboard</a>)の続き</li>\n</ul>\n\n<h1>\n<span id=\"イメージ\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\"><i class=\"fa fa-link\"></i></a>イメージ</h1>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center\">before</th>\n<th style=\"text-align: center\">after</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center\"><a href=\"https://camo.qiitausercontent.com/9ad206864eedd4466e6f63a062f0bf4bc63e52e0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f61646534333431372d623565652d303963642d643164322d3433376637626432643862322e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/9ad206864eedd4466e6f63a062f0bf4bc63e52e0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f61646534333431372d623565652d303963642d643164322d3433376637626432643862322e676966\" alt=\"before.gif\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/ade43417-b5ee-09cd-d1d2-437f7bd2d8b2.gif\"></a></td>\n<td style=\"text-align: center\"><a href=\"https://camo.qiitausercontent.com/fc7bbc06170df3e2388dbd80e154afc32a7d90b9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f39383365653131332d303135632d336431652d383236372d3637356531663662623735342e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/fc7bbc06170df3e2388dbd80e154afc32a7d90b9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f39383365653131332d303135632d336431652d383236372d3637356531663662623735342e676966\" alt=\"after.gif\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/983ee113-015c-3d1e-8267-675e1f6bb754.gif\"></a></td>\n</tr>\n</tbody>\n</table>\n\n<h1>\n<span id=\"環境\" class=\"fragment\"></span><a href=\"#%E7%92%B0%E5%A2%83\"><i class=\"fa fa-link\"></i></a>環境</h1>\n\n<ul>\n<li>Xcode 9.4</li>\n<li>Swift 4.2</li>\n<li>RxSwift 4.2</li>\n<li>RxCocoa 4.2</li>\n</ul>\n\n<h1>\n<span id=\"サンプルリポジトリ\" class=\"fragment\"></span><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA\"><i class=\"fa fa-link\"></i></a>サンプルリポジトリ</h1>\n\n<ul>\n<li><a href=\"https://github.com/ryo-takahashi/LineInputUIExampleWithRxSwift\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/ryo-takahashi/LineInputUIExampleWithRxSwift</a></li>\n</ul>\n\n<h1>\n<span id=\"viewを用意する\" class=\"fragment\"></span><a href=\"#view%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Viewを用意する</h1>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center\">ViewController</th>\n<th style=\"text-align: center\">InputView</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center\"><a href=\"https://camo.qiitausercontent.com/1f7c8aeeea348ce320fca84eed5390e5862624da/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f65366561363363612d313238632d636465332d323339352d3230653433616637646164372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/1f7c8aeeea348ce320fca84eed5390e5862624da/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f65366561363363612d313238632d636465332d323339352d3230653433616637646164372e706e67\" alt=\"スクリーンショット 2018-08-19 21.35.03.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/e6ea63ca-128c-cde3-2395-20e43af7dad7.png\"></a></td>\n<td style=\"text-align: center\"><a href=\"https://camo.qiitausercontent.com/c90355634f4ee7f736b14cff5f70a58d0ad96b4f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f38663064343937642d356634372d666239382d656330652d6335313138663362326461352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/c90355634f4ee7f736b14cff5f70a58d0ad96b4f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f38663064343937642d356634372d666239382d656330652d6335313138663362326461352e706e67\" alt=\"スクリーンショット 2018-08-19 21.32.11.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/8f0d497d-5f47-fb98-ec0e-c5118f3b2da5.png\"></a></td>\n</tr>\n</tbody>\n</table>\n\n<ul>\n<li>ViewControllerの下部にInputViewを配置する</li>\n</ul>\n\n<h1>\n<span id=\"constraintの設定\" class=\"fragment\"></span><a href=\"#constraint%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>Constraintの設定</h1>\n\n<p><a href=\"https://camo.qiitausercontent.com/b477ef2ea34475f0b969cc3454b0dcc88fe0144b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f30323537333066312d666533612d343836322d643238612d6338373737353931353131372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/b477ef2ea34475f0b969cc3454b0dcc88fe0144b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f30323537333066312d666533612d343836322d643238612d6338373737353931353131372e706e67\" alt=\"スクリーンショット 2018-08-19 21.36.59.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/025730f1-fe3a-4862-d28a-c87775915117.png\"></a></p>\n\n<ul>\n<li>ViewControllerの下部に設定したInputViewに高さのConstraintをつける</li>\n<li>実装では、以下のように入力文字に合わせてこのConstraintの値をいじっていくことで、動的に高さを変更させる</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/5d0199bd9371b0bc64195b288cf8f6f0aa8949aa/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f63623035366462652d636463632d323335652d316565372d3932373537653039373130362e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/5d0199bd9371b0bc64195b288cf8f6f0aa8949aa/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f63623035366462652d636463632d323335652d316565372d3932373537653039373130362e676966\" alt=\"viewc.gif\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/cb056dbe-cdcc-235e-1ee7-92757e097106.gif\"></a></p>\n\n<h1>\n<span id=\"コード\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>コード</h1>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">ViewController.swift</span></div>\n<div class=\"highlight\"><pre><span class=\"kd\">import</span> <span class=\"kt\">UIKit</span>\n<span class=\"kd\">import</span> <span class=\"kt\">RxSwift</span>\n<span class=\"kd\">import</span> <span class=\"kt\">RxCocoa</span>\n\n<span class=\"kd\">class</span> <span class=\"kt\">ViewController</span><span class=\"p\">:</span> <span class=\"nf\">UIViewController</span> <span class=\"p\">{</span>\n\n    <span class=\"kd\">@IBOutlet</span> <span class=\"k\">weak</span> <span class=\"k\">var</span> <span class=\"nv\">messageInputView</span><span class=\"p\">:</span> <span class=\"kt\">MessageInputView</span><span class=\"o\">!</span>\n    <span class=\"kd\">@IBOutlet</span> <span class=\"k\">weak</span> <span class=\"k\">var</span> <span class=\"nv\">messageInputViewHeightConstraint</span><span class=\"p\">:</span> <span class=\"kt\">NSLayoutConstraint</span><span class=\"o\">!</span>\n\n    <span class=\"kd\">private</span> <span class=\"k\">let</span> <span class=\"nv\">disposeBag</span> <span class=\"o\">=</span> <span class=\"nf\">DisposeBag</span><span class=\"p\">()</span>\n\n    <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">super</span><span class=\"o\">.</span><span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span>\n        <span class=\"nf\">setupMessageInputView</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"kd\">func</span> <span class=\"nf\">setupMessageInputView</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">let</span> <span class=\"nv\">inputTextViewVerticalMargin</span><span class=\"p\">:</span> <span class=\"kt\">CGFloat</span> <span class=\"o\">=</span> <span class=\"mf\">12.0</span>\n        <span class=\"n\">messageInputView</span><span class=\"o\">.</span><span class=\"n\">inputTextView</span><span class=\"o\">.</span><span class=\"n\">rx</span><span class=\"o\">.</span><span class=\"n\">text</span>\n            <span class=\"o\">.</span><span class=\"nf\">asDriver</span><span class=\"p\">()</span>\n            <span class=\"o\">.</span><span class=\"nf\">drive</span><span class=\"p\">(</span><span class=\"nv\">onNext</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"p\">[</span><span class=\"k\">weak</span> <span class=\"k\">self</span><span class=\"p\">]</span> <span class=\"n\">_</span> <span class=\"k\">in</span>\n                <span class=\"c1\">// テキスト入力されるたびに呼ばれる　（削除でも）</span>\n                <span class=\"k\">guard</span> <span class=\"k\">let</span> <span class=\"nv\">height</span> <span class=\"o\">=</span> <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">messageInputView</span><span class=\"o\">.</span><span class=\"n\">inputTextView</span><span class=\"o\">.</span><span class=\"n\">contentSize</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"nf\">else</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"p\">}</span>\n                <span class=\"k\">let</span> <span class=\"nv\">inputTextViewHeight</span> <span class=\"o\">=</span> <span class=\"n\">height</span> <span class=\"o\">+</span> <span class=\"n\">inputTextViewVerticalMargin</span>\n                <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">messageInputViewHeightConstraint</span><span class=\"o\">.</span><span class=\"n\">constant</span> <span class=\"o\">=</span> <span class=\"n\">inputTextViewHeight</span>\n                <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"nf\">setNeedsLayout</span><span class=\"p\">()</span>\n                <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"nf\">layoutIfNeeded</span><span class=\"p\">()</span>\n            <span class=\"p\">})</span>\n            <span class=\"o\">.</span><span class=\"nf\">disposed</span><span class=\"p\">(</span><span class=\"nv\">by</span><span class=\"p\">:</span> <span class=\"n\">disposeBag</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n\n<ul>\n<li>上記の実装で高さを動的に変更できるようになる</li>\n<li>しかし、高さの制限がないので下記のGIFのように画面の外までUIが伸びてしまう</li>\n</ul>\n\n<p><a href=\"https://camo.qiitausercontent.com/9d34debdcf9067b9831eff97617e9ca2009193ea/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f39396163363665352d383438622d353835382d656337612d3161623236323030376662612e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/9d34debdcf9067b9831eff97617e9ca2009193ea/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3132363434312f39396163363665352d383438622d353835382d656337612d3161623236323030376662612e676966\" alt=\"hei.gif\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/126441/99ac66e5-848b-5858-ec7a-1ab262007fba.gif\"></a></p>\n\n<ul>\n<li>次に、高さの制限をする\n\n<ul>\n<li>といっても実装は簡単で、あるラインを決めてそれ以上の値になったら変更をさせないようにすればよい</li>\n</ul>\n</li>\n</ul>\n\n<div class=\"code-frame\" data-lang=\"swift\">\n<div class=\"code-lang\"><span class=\"bold\">ViewController.swift</span></div>\n<div class=\"highlight\"><pre>\n        <span class=\"k\">let</span> <span class=\"nv\">inputTextViewMaxHeight</span><span class=\"p\">:</span> <span class=\"kt\">CGFloat</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span> <span class=\"c1\">// New Line</span>\n        <span class=\"k\">let</span> <span class=\"nv\">inputTextViewVerticalMargin</span><span class=\"p\">:</span> <span class=\"kt\">CGFloat</span> <span class=\"o\">=</span> <span class=\"mf\">12.0</span>\n        <span class=\"n\">messageInputView</span><span class=\"o\">.</span><span class=\"n\">inputTextView</span><span class=\"o\">.</span><span class=\"n\">rx</span><span class=\"o\">.</span><span class=\"n\">text</span>\n            <span class=\"o\">.</span><span class=\"nf\">asDriver</span><span class=\"p\">()</span>\n            <span class=\"o\">.</span><span class=\"nf\">drive</span><span class=\"p\">(</span><span class=\"nv\">onNext</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"p\">[</span><span class=\"k\">weak</span> <span class=\"k\">self</span><span class=\"p\">]</span> <span class=\"n\">_</span> <span class=\"k\">in</span>\n                <span class=\"k\">guard</span> <span class=\"k\">let</span> <span class=\"nv\">height</span> <span class=\"o\">=</span> <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">messageInputView</span><span class=\"o\">.</span><span class=\"n\">inputTextView</span><span class=\"o\">.</span><span class=\"n\">contentSize</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"nf\">else</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"p\">}</span>\n                <span class=\"k\">let</span> <span class=\"nv\">inputTextViewHeight</span> <span class=\"o\">=</span> <span class=\"n\">height</span> <span class=\"o\">+</span> <span class=\"n\">inputTextViewVerticalMargin</span>\n                <span class=\"k\">if</span> <span class=\"n\">inputTextViewMaxHeight</span> <span class=\"o\">&gt;</span> <span class=\"nf\">inputTextViewHeight</span> <span class=\"p\">{</span> <span class=\"c1\">// New Line</span>\n                    <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">messageInputViewHeightConstraint</span><span class=\"o\">.</span><span class=\"n\">constant</span> <span class=\"o\">=</span> <span class=\"n\">inputTextViewHeight</span>\n                <span class=\"p\">}</span> <span class=\"c1\">// New Line</span>\n                <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"nf\">setNeedsLayout</span><span class=\"p\">()</span>\n                <span class=\"k\">self</span><span class=\"p\">?</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"nf\">layoutIfNeeded</span><span class=\"p\">()</span>\n            <span class=\"p\">})</span>\n            <span class=\"o\">.</span><span class=\"nf\">disposed</span><span class=\"p\">(</span><span class=\"nv\">by</span><span class=\"p\">:</span> <span class=\"n\">disposeBag</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"notes\" class=\"fragment\"></span><a href=\"#notes\"><i class=\"fa fa-link\"></i></a>Notes</h1>\n\n<ul>\n<li>高さの制限を変更したい場合は、 <code>inputTextViewMaxHeight</code> の値を変更しよう</li>\n</ul>\n",
      "body": "# 概要\n\n- UITextViewへの文字入力を監視し、Viewの高さを変更させる\n- 過去の記事([iMessageの入力UIのようなキーボードの表示と連動するUIを作る with RxSwift, RxKeyboard](https://qiita.com/k0uhashi/items/671ec40520967bc3949f))\bの続き\n\n\n# イメージ\n\n|before|after|\n|:-:|:-:|\n|![before.gif](https://qiita-image-store.s3.amazonaws.com/0/126441/ade43417-b5ee-09cd-d1d2-437f7bd2d8b2.gif)|![after.gif](https://qiita-image-store.s3.amazonaws.com/0/126441/983ee113-015c-3d1e-8267-675e1f6bb754.gif)|\n\n# 環境\n\n- Xcode 9.4\n- Swift 4.2\n- RxSwift 4.2\n- RxCocoa 4.2\n\n# サンプルリポジトリ\n\n- [https://github.com/ryo-takahashi/LineInputUIExampleWithRxSwift](https://github.com/ryo-takahashi/LineInputUIExampleWithRxSwift)\n\n# Viewを用意する\n\n|ViewController|InputView|\n|:-:|:-:|\n|![スクリーンショット 2018-08-19 21.35.03.png](https://qiita-image-store.s3.amazonaws.com/0/126441/e6ea63ca-128c-cde3-2395-20e43af7dad7.png)|![スクリーンショット 2018-08-19 21.32.11.png](https://qiita-image-store.s3.amazonaws.com/0/126441/8f0d497d-5f47-fb98-ec0e-c5118f3b2da5.png)|\n\n- ViewControllerの下部にInputViewを配置する\n\n# Constraintの設定\n\n![スクリーンショット 2018-08-19 21.36.59.png](https://qiita-image-store.s3.amazonaws.com/0/126441/025730f1-fe3a-4862-d28a-c87775915117.png)\n\n- ViewControllerの下部に設定したInputViewに高さのConstraintをつける\n- 実装では、以下のように入力文字に合わせてこのConstraintの値をいじっていくことで、動的に高さを変更させる\n\n![viewc.gif](https://qiita-image-store.s3.amazonaws.com/0/126441/cb056dbe-cdcc-235e-1ee7-92757e097106.gif)\n\n# コード\n\n```swift:ViewController.swift\nimport UIKit\nimport RxSwift\nimport RxCocoa\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var messageInputView: MessageInputView!\n    @IBOutlet weak var messageInputViewHeightConstraint: NSLayoutConstraint!\n    \n    private let disposeBag = DisposeBag()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupMessageInputView()\n    }\n\n    private func setupMessageInputView() {\n        let inputTextViewVerticalMargin: CGFloat = 12.0\n        messageInputView.inputTextView.rx.text\n            .asDriver()\n            .drive(onNext: { [weak self] _ in\n                // テキスト入力されるたびに呼ばれる　（削除でも）\n                guard let height = self?.messageInputView.inputTextView.contentSize.height else { return }\n                let inputTextViewHeight = height + inputTextViewVerticalMargin\n                self?.messageInputViewHeightConstraint.constant = inputTextViewHeight\n                self?.view.setNeedsLayout()\n                self?.view.layoutIfNeeded()\n            })\n            .disposed(by: disposeBag)\n    }\n\n}\n```\n\n- 上記の実装で高さを動的に変更できるようになる\n- しかし、高さの制限がないので下記のGIFのように画面の外までUIが伸びてしまう\n\n![hei.gif](https://qiita-image-store.s3.amazonaws.com/0/126441/99ac66e5-848b-5858-ec7a-1ab262007fba.gif)\n\n- 次に、高さの制限をする\n    - といっても実装は簡単で、あるラインを決めてそれ以上の値になったら変更をさせないようにすればよい\n\n```swift:ViewController.swift\n\n        let inputTextViewMaxHeight: CGFloat = 100.0 // New Line\n        let inputTextViewVerticalMargin: CGFloat = 12.0\n        messageInputView.inputTextView.rx.text\n            .asDriver()\n            .drive(onNext: { [weak self] _ in\n                guard let height = self?.messageInputView.inputTextView.contentSize.height else { return }\n                let inputTextViewHeight = height + inputTextViewVerticalMargin\n                if inputTextViewMaxHeight > inputTextViewHeight { // New Line\n                    self?.messageInputViewHeightConstraint.constant = inputTextViewHeight\n                } // New Line\n                self?.view.setNeedsLayout()\n                self?.view.layoutIfNeeded()\n            })\n            .disposed(by: disposeBag)\n```\n\n# Notes\n\n- 高さの制限を変更したい場合は、 `inputTextViewMaxHeight` の値を変更しよう\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:46:02+09:00",
      "group": null,
      "id": "d00d043168eb0c4711c2",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "iOS",
          "versions": []
        },
        {
          "name": "Swift",
          "versions": []
        },
        {
          "name": "RxSwift",
          "versions": []
        }
      ],
      "title": "UITextViewへの入力文字を監視し、Viewの高さを動的に変更する with RxSwift",
      "updated_at": "2018-08-19T21:46:02+09:00",
      "url": "https://qiita.com/k0uhashi/items/d00d043168eb0c4711c2",
      "user": {
        "description": "やってます",
        "facebook_id": "takahashi.ryo.378",
        "followees_count": 21,
        "followers_count": 10,
        "github_login_name": "k0uhashi",
        "id": "k0uhashi",
        "items_count": 18,
        "linkedin_id": "",
        "location": "Tokyo, Japan",
        "name": "Ryo Takahashi",
        "organization": "",
        "permanent_id": 126441,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/126441/profile-images/1516023302",
        "twitter_screen_name": "k0uhashi",
        "website_url": "http://nnnnn15z.hatenablog.jp/"
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h3>\n<span id=\"1-補足\" class=\"fragment\"></span><a href=\"#1-%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>1. 補足</h3>\n\n<p>端末内でアプリ外からアクセス可能なストレージという意味で<br>\nSDも含まれますが、SDの事を指しているわけでありません<br>\nSDを指定してアクセスする方法もあるようですが、アンドロイドのバージョンも関係するようで、今回はパスしてます<br>\n整理出来たら上げてみます   </p>\n\n<h3>\n<span id=\"2-パーミションandroid-60-未満\" class=\"fragment\"></span><a href=\"#2-%E3%83%91%E3%83%BC%E3%83%9F%E3%82%B7%E3%83%A7%E3%83%B3android-60-%E6%9C%AA%E6%BA%80\"><i class=\"fa fa-link\"></i></a>2. パーミション　Android 6.0 未満</h3>\n\n<p>Android 6.0 (APIレベル23)未満は、パーミッションはインストール時に確認<br>\n   なので、インストールされているということは承認されている<br>\n   AndroidManifest.xml にパーミションを宣言しておく</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    &lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/&gt;\n</pre></div></div>\n\n<h3>\n<span id=\"3-パーミションandroid-60-以降\" class=\"fragment\"></span><a href=\"#3-%E3%83%91%E3%83%BC%E3%83%9F%E3%82%B7%E3%83%A7%E3%83%B3android-60-%E4%BB%A5%E9%99%8D\"><i class=\"fa fa-link\"></i></a>3. パーミション　Android 6.0 以降</h3>\n\n<p>APIレベル23以降は動的にパーミションを承認<br>\n   端末、アプリで承認、未承認をインストール後に設定可能</p>\n\n<h4>\n<span id=\"31-設定の確認\" class=\"fragment\"></span><a href=\"#31-%E8%A8%AD%E5%AE%9A%E3%81%AE%E7%A2%BA%E8%AA%8D\"><i class=\"fa fa-link\"></i></a>3.1. 設定の確認</h4>\n\n<p>現在の設定を確認</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>   if ( PackageManager.PERMISSION_GRANTED == ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\n     // 設定済\n  }\n</pre></div></div>\n\n<h4>\n<span id=\"32-拒否--今後確認しない\" class=\"fragment\"></span><a href=\"#32-%E6%8B%92%E5%90%A6--%E4%BB%8A%E5%BE%8C%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>3.2. 拒否 &amp; 「今後確認しない」</h4>\n\n<p>拒否が確定いている場合の判断</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>   if ( PackageManager.PERMISSION_GRANTED == ContextCompat.checkSelfPermission(this, Manifest.permission.PERMISSION_DENIED)) {\n      if (false == ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.ACCESS_FINE_LOCATION)) {\n         // [今後表示しない]指定 -&gt; 拒否確定\n      }\n    }\n</pre></div></div>\n\n<h4>\n<span id=\"33-未許可時確認\" class=\"fragment\"></span><a href=\"#33-%E6%9C%AA%E8%A8%B1%E5%8F%AF%E6%99%82%E7%A2%BA%E8%AA%8D\"><i class=\"fa fa-link\"></i></a>3.3. 未許可時、確認</h4>\n\n<p>・リクエス</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    // リクエスト識別用のユニークな値\n    val REQUEST_PERMISSIONS_ID = 1000\n    // リクエスト用 \n    val reqPermissions = ArrayList&lt;String&gt;()\n    // リクエスト に追加\n    reqPermissions.add(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n    // パーミション確認 \n    ActivityCompat.requestPermissions(this, reqPermissions.toTypedArray(), REQUEST_PERMISSIONS_ID)\n</pre></div></div>\n\n<p>・結果</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    // 承認の結果(オペレータの操作)をこのコールバックで判断\n    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array&lt;String&gt;, grantResults: IntArray) {\n        if (requestCode == REQUEST_PERMISSIONS_ID) {\n            // 識別IDでリクエストを判断\n            if (grantResults.isNotEmpty()) {\n                // 処理された\n                for (i in permissions.indices) {\n                    // 複数リクエストがあった場合\n                    if (permissions[i] == Manifest.permission.WRITE_EXTERNAL_STORAGE) {\n                        // 外部ストレージのパーミッション\n                        if (grantResults[i] == PackageManager.PERMISSION_GRANTED) {\n                            // 許可\n                        } else {\n                            // 拒否\n                        }\n                    }\n                }    \n            }    \n        }        \n    } \n</pre></div></div>\n\n<h4>\n<span id=\"33-実行前の確認\" class=\"fragment\"></span><a href=\"#33-%E5%AE%9F%E8%A1%8C%E5%89%8D%E3%81%AE%E7%A2%BA%E8%AA%8D\"><i class=\"fa fa-link\"></i></a>3.3. 実行前の確認</h4>\n\n<p>実際にアクセス可能かアクセス前に確認だけできるようにしておくと便利</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    // 読み書き可能な外部ストレージがあるかどうかをチェック\n    private val isExternalStorageWritable: Boolean\n        get() {\n            val state = Environment.getExternalStorageState()\n            return Environment.MEDIA_MOUNTED == state\n        }\n\n    // 外部ストレージが読み取り可能かどうかをチェック\n    private val isExternalStorageReadable: Boolean\n        get() {\n            val state = Environment.getExternalStorageState()\n            return Environment.MEDIA_MOUNTED == state || Environment.MEDIA_MOUNTED_READ_ONLY == state\n        }\n</pre></div></div>\n\n<h4>\n<span id=\"34-ファイル名\" class=\"fragment\"></span><a href=\"#34-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D\"><i class=\"fa fa-link\"></i></a>3.4. ファイル名</h4>\n\n<p>外部ストレージでは、フルパスでのアクセスのようです</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    val mydirName = \"ext\" // 保存フォルダー\n    val ExtFileName = \"tmp.txt\" // ファイル名\n\n        // 現在の外部ストレージのログ・ファイル名(パス含め)\n    private val extFilePath: String\n        get() {\n            val myDir = Environment.getExternalStorageDirectory().getPath() +\"/\"+mydirName\n            return  myDir+\"/\"+ getString(ExtFileName)\n        }\n</pre></div></div>\n\n<h3>\n<span id=\"4-書き込み\" class=\"fragment\"></span><a href=\"#4-%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF\"><i class=\"fa fa-link\"></i></a>4. 書き込み</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>// 外部ストレージのファイルにデータを追加\n    val saveData : String = \"保存データ\"\n\n    // フォルダーを使用する場合、あるかを確認\n    val myDir = File(Environment.getExternalStorageDirectory(), mydirName)\n    if (!myDir.exists()) {\n        // なければ、フォルダーを作る\n        myDir.mkdirs()\n    }\n\n    val file = File(extFilePath)\n    try {\n        FileOutputStream(file, true).use({ fileOutputStream -&gt;\n            OutputStreamWriter(fileOutputStream, \"UTF-8\").use({ outputStreamWriter -&gt;\n                BufferedWriter(outputStreamWriter).use({ bw -&gt;\n                    bw.write(saveData+\"\\n\")\n                    bw.flush()\n                })\n            })\n        })\n    } catch (e: Exception) {\n        e.printStackTrace()\n    }\n</pre></div></div>\n\n<h3>\n<span id=\"5-読込\" class=\"fragment\"></span><a href=\"#5-%E8%AA%AD%E8%BE%BC\"><i class=\"fa fa-link\"></i></a>5. 読込</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>    val dataList : ArrayList&lt;String&gt; = ArrayList&lt;String&gt;()\n    try {\n        FileInputStream(extFilePath).use { fileInputStream -&gt;\n            InputStreamReader(fileInputStream, \"UTF8\").use { inputStreamReader -&gt;\n                BufferedReader(inputStreamReader).use { reader -&gt;\n                    for (lineBuffer in reader.readLines()) {\n                        dataList.add(lineBuffer)\n                    }\n                }\n            }\n        }\n   } catch (e: Exception) {\n       e.printStackTrace()\n   }\n</pre></div></div>\n\n<h3>\n<span id=\"5-削除\" class=\"fragment\"></span><a href=\"#5-%E5%89%8A%E9%99%A4\"><i class=\"fa fa-link\"></i></a>5. 削除</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>   try {\n        val fl = File(extFilePath)\n        fl.delete()\n   } catch ( e : IOException) {\n        e.printStackTrace();\n   }\n</pre></div></div>\n\n<p>今回で一応ストレージへのアクセスは制覇（かな）</p>\n\n<p>あ、SDの指定が残ってるか </p>\n",
      "body": "\n### 1. 補足\n端末内でアプリ外からアクセス可能なストレージという意味で\nSDも含まれますが、SDの事を指しているわけでありません\nSDを指定してアクセスする方法もあるようですが、アンドロイドのバージョンも関係するようで、今回はパスしてます\n整理出来たら上げてみます   \n    \n### 2. パーミション　Android 6.0 未満\n   Android 6.0 (APIレベル23)未満は、パーミッションはインストール時に確認\n   なので、インストールされているということは承認されている\n   AndroidManifest.xml にパーミションを宣言しておく\n\n```\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n```\n\n### 3. パーミション　Android 6.0 以降\n   APIレベル23以降は動的にパーミションを承認\n   端末、アプリで承認、未承認をインストール後に設定可能\n\n#### 3.1. 設定の確認\n  現在の設定を確認\n\n```\n   if ( PackageManager.PERMISSION_GRANTED == ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\n     // 設定済\n  }\n```  \n\n#### 3.2. 拒否 & 「今後確認しない」\n  拒否が確定いている場合の判断\n\n```\n   if ( PackageManager.PERMISSION_GRANTED == ContextCompat.checkSelfPermission(this, Manifest.permission.PERMISSION_DENIED)) {\n      if (false == ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.ACCESS_FINE_LOCATION)) {\n         // [今後表示しない]指定 -> 拒否確定\n      }\n    }\n```  \n\n#### 3.3. 未許可時、確認\n・リクエス\n   \n```\n    // リクエスト識別用のユニークな値\n    val REQUEST_PERMISSIONS_ID = 1000\n    // リクエスト用 \n    val reqPermissions = ArrayList<String>()\n    // リクエスト に追加\n    reqPermissions.add(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n    // パーミション確認 \n    ActivityCompat.requestPermissions(this, reqPermissions.toTypedArray(), REQUEST_PERMISSIONS_ID)\n```    \n\n・結果\n\n```\n    // 承認の結果(オペレータの操作)をこのコールバックで判断\n    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray) {\n        if (requestCode == REQUEST_PERMISSIONS_ID) {\n            // 識別IDでリクエストを判断\n            if (grantResults.isNotEmpty()) {\n                // 処理された\n                for (i in permissions.indices) {\n                    // 複数リクエストがあった場合\n                    if (permissions[i] == Manifest.permission.WRITE_EXTERNAL_STORAGE) {\n                        // 外部ストレージのパーミッション\n                        if (grantResults[i] == PackageManager.PERMISSION_GRANTED) {\n                            // 許可\n                        } else {\n                            // 拒否\n                        }\n                    }\n                }    \n            }    \n        }        \n    } \n```\n\n#### 3.3. 実行前の確認\n実際にアクセス可能かアクセス前に確認だけできるようにしておくと便利\n\n```\n    // 読み書き可能な外部ストレージがあるかどうかをチェック\n    private val isExternalStorageWritable: Boolean\n        get() {\n            val state = Environment.getExternalStorageState()\n            return Environment.MEDIA_MOUNTED == state\n        }\n\n    // 外部ストレージが読み取り可能かどうかをチェック\n    private val isExternalStorageReadable: Boolean\n        get() {\n            val state = Environment.getExternalStorageState()\n            return Environment.MEDIA_MOUNTED == state || Environment.MEDIA_MOUNTED_READ_ONLY == state\n        }\n```\n\n#### 3.4. ファイル名\n外部ストレージでは、フルパスでのアクセスのようです\n\n```\n    val mydirName = \"ext\" // 保存フォルダー\n    val ExtFileName = \"tmp.txt\" // ファイル名\n\n        // 現在の外部ストレージのログ・ファイル名(パス含め)\n    private val extFilePath: String\n        get() {\n            val myDir = Environment.getExternalStorageDirectory().getPath() +\"/\"+mydirName\n            return  myDir+\"/\"+ getString(ExtFileName)\n        }\n```\n\n### 4. 書き込み\n\n```\n// 外部ストレージのファイルにデータを追加\n    val saveData : String = \"保存データ\"\n\n    // フォルダーを使用する場合、あるかを確認\n    val myDir = File(Environment.getExternalStorageDirectory(), mydirName)\n    if (!myDir.exists()) {\n        // なければ、フォルダーを作る\n        myDir.mkdirs()\n    }\n\n    val file = File(extFilePath)\n    try {\n        FileOutputStream(file, true).use({ fileOutputStream ->\n            OutputStreamWriter(fileOutputStream, \"UTF-8\").use({ outputStreamWriter ->\n                BufferedWriter(outputStreamWriter).use({ bw ->\n                    bw.write(saveData+\"\\n\")\n                    bw.flush()\n                })\n            })\n        })\n    } catch (e: Exception) {\n        e.printStackTrace()\n    }\n```\n   \n### 5. 読込\n\n```\n    val dataList : ArrayList<String> = ArrayList<String>()\n    try {\n        FileInputStream(extFilePath).use { fileInputStream ->\n            InputStreamReader(fileInputStream, \"UTF8\").use { inputStreamReader ->\n                BufferedReader(inputStreamReader).use { reader ->\n                    for (lineBuffer in reader.readLines()) {\n                        dataList.add(lineBuffer)\n                    }\n                }\n            }\n        }\n   } catch (e: Exception) {\n       e.printStackTrace()\n   }\n```        \n\n### 5. 削除\n\n```\n   try {\n        val fl = File(extFilePath)\n        fl.delete()\n   } catch ( e : IOException) {\n        e.printStackTrace();\n   }\n``` \n\n今回で一応ストレージへのアクセスは制覇（かな）\n\nあ、SDの指定が残ってるか \n\n      \n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:42:50+09:00",
      "group": null,
      "id": "f17a125e0bc88c17a6d3",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Kotlin",
          "versions": []
        },
        {
          "name": "AndroidStudio",
          "versions": []
        }
      ],
      "title": "kotlinでandroid入門 外部ストレージ",
      "updated_at": "2018-08-19T21:42:50+09:00",
      "url": "https://qiita.com/folivora/items/f17a125e0bc88c17a6d3",
      "user": {
        "description": "androidとkotlinの初心者\r\n独学なので正しいのかわからないので、コードをさらしてみました\r\n",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 5,
        "github_login_name": "bokufolivora",
        "id": "folivora",
        "items_count": 21,
        "linkedin_id": "",
        "location": "",
        "name": "",
        "organization": "",
        "permanent_id": 258658,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/258658/profile-images/1532009412",
        "twitter_screen_name": null,
        "website_url": "https://folivoradesu.blogspot.com/"
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>今回はscoped modelについて書いてみようと思います。<br>\n<a href=\"https://dartisans-jp.connpass.com/event/91133/\" rel=\"nofollow noopener\" target=\"_blank\">Dart Meetup Tokyo #5</a>での発表の中でもちょっと触れているやつです。ちなみにその時のスライドはこちらです。<br>\n<a href=\"https://speakerdeck.com/takayukihayashi/fluttertoangulardartwo-ditoclean-architecturede-iigan-zinisuru\" rel=\"nofollow noopener\" target=\"_blank\">FlutterとAngularDartを DIとClean Architectureでいい感じにする</a></p>\n\n<h1>\n<span id=\"scoped-model\" class=\"fragment\"></span><a href=\"#scoped-model\"><i class=\"fa fa-link\"></i></a>Scoped Model</h1>\n\n<h2>\n<span id=\"scoped-modelとは\" class=\"fragment\"></span><a href=\"#scoped-model%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Scoped Modelとは</h2>\n\n<p>Scoped Modelの特徴はざっくりまとめると下記のような感じです。</p>\n\n<ul>\n<li>親Widgetから子孫のWidgetにModelを簡単に渡す事が出来るようになる</li>\n<li>Modelが更新された場合に、そのModelを参照しているWidgetを再レンダリングする</li>\n<li><strong>StatefullWidgetとStateを使用する必要が無くなる</strong></li>\n</ul>\n\n<p>　個人的にはStatefullWidgetとStateを使う必要がないのが大きいです（Scoped Modelの内部では使用されていますが、そのあたりを自然な形で隠蔽してくれています）。Flutterのアーキテクチャーを考えれば必要なのは良くわかるのですが、ぶっちゃけあれって面倒ですよね？ｗ<br>\nなのでScoped Modelを使う事で全てのWidgetをStatelessにする事が出来るので個人的に凄く書きやすくなると思っています。</p>\n\n<h2>\n<span id=\"fuchsiaで取り入れられている\" class=\"fragment\"></span><a href=\"#fuchsia%E3%81%A7%E5%8F%96%E3%82%8A%E5%85%A5%E3%82%8C%E3%82%89%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Fuchsiaで取り入れられている</h2>\n\n<p>　日本では話題になることが少ないですが、現在Googleが開発している<a href=\"https://github.com/fuchsia-mirror\" rel=\"nofollow noopener\" target=\"_blank\">Fuchsia</a>というマイクロカーネルのOSがあります。そのFuchsiaではFlutterでGUIが開発されているのですが、その中でScoped Modelの考えが使われています。ちなみにScoped ModelのライブラリーをFuchsia側で使っているわけではなくFuchsia側のソースをそのまま切り出してScoped Modelのプラグインにしています。ソースコードはコメントを入れても300行くらいです。</p>\n\n<h2>\n<span id=\"実際の使い方\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>実際の使い方</h2>\n\n<p>　android studio等でflutterのプロジェクトを作成した際にデフォルトで作成されている「ボタンをクリックすると数字がカウントアップするアプリ」を例にScoped Modelを利用した場合にどうなるか見ていきます。READMEに書いてあるやつそのままですｗ</p>\n\n<h4>\n<span id=\"依存関係の追加\" class=\"fragment\"></span><a href=\"#%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%81%AE%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>依存関係の追加</h4>\n\n<p>flutterのプラグインとして<a href=\"https://pub.dartlang.org/packages/scoped_model\" rel=\"nofollow noopener\" target=\"_blank\">提供</a>されています。なのでpubspec.yamlに依存関係を追加すれば使えるようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">pubspec.yaml</span></div>\n<div class=\"highlight\"><pre><span class=\"na\">dependencies</span><span class=\"pi\">:</span>\n  <span class=\"na\">flutter</span><span class=\"pi\">:</span>\n    <span class=\"na\">sdk</span><span class=\"pi\">:</span> <span class=\"s\">flutter</span>\n  <span class=\"na\">scoped_model</span><span class=\"pi\">:</span> <span class=\"s\">^0.3.0</span> <span class=\"c1\">#これを追加</span>\n</pre></div>\n</div>\n\n<h4>\n<span id=\"modelの作成\" class=\"fragment\"></span><a href=\"#model%E3%81%AE%E4%BD%9C%E6%88%90\"><i class=\"fa fa-link\"></i></a>Modelの作成</h4>\n\n<p>　親Widgetと子孫Widgetで共有するWidgetを作成します。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"s\">'package:scoped_model/scoped_model.dart'</span><span class=\"o\">;</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">CounterModel</span> <span class=\"kd\">extends</span> <span class=\"n\">Model</span> <span class=\"o\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">_counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n\n  <span class=\"kt\">int</span> <span class=\"kd\">get</span> <span class=\"n\">counter</span> <span class=\"o\">=&gt;</span> <span class=\"n\">_counter</span><span class=\"o\">;</span>\n\n  <span class=\"kt\">void</span> <span class=\"n\">increment</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"n\">_counter</span><span class=\"o\">++;</span>\n    <span class=\"c1\">//状態を変更したらnotifyListenersを呼ぶ。</span>\n    <span class=\"n\">notifyListeners</span><span class=\"o\">();</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<p>Modelというクラスをextendsする形で独自のModelクラスを定義します。このModelはカウンターの数字情報を保持しつつその数字をincrementする処理を持ちます。<br>\nまた、状態（_counter）を変更した場合にWidgetの再レンダリングを実行するためにnotifyListenersを呼び出します。これを呼び忘れると再レンダリングは実行されないので注意が必要です。</p>\n\n<h4>\n<span id=\"scoped-modelの定義\" class=\"fragment\"></span><a href=\"#scoped-model%E3%81%AE%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>Scoped Modelの定義</h4>\n\n<p>　Scoped Modelを定義すると指定したmodelがその子孫Widget内にて容易に参照出来るようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span> <span class=\"n\">runApp</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">MyApp</span><span class=\"o\">(</span><span class=\"n\">CounterModel</span><span class=\"o\">()));</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">MyApp</span> <span class=\"kd\">extends</span> <span class=\"n\">StatelessWidget</span> <span class=\"o\">{</span>\n\n  <span class=\"kd\">final</span> <span class=\"n\">CounterModel</span> <span class=\"n\">counterModel</span><span class=\"o\">;</span>\n\n  <span class=\"n\">MyApp</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">counterModel</span><span class=\"o\">);</span>\n\n  <span class=\"nd\">@override</span>\n  <span class=\"n\">Widget</span> <span class=\"n\">build</span><span class=\"o\">(</span><span class=\"n\">BuildContext</span> <span class=\"n\">context</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">MaterialApp</span><span class=\"o\">(</span>\n      <span class=\"nl\">title:</span> <span class=\"s\">'Scoped Model Demo'</span><span class=\"o\">,</span>\n      <span class=\"nl\">theme:</span> <span class=\"k\">new</span> <span class=\"n\">ThemeData</span><span class=\"o\">(</span>\n        <span class=\"nl\">primarySwatch:</span> <span class=\"n\">Colors</span><span class=\"o\">.</span><span class=\"na\">blue</span><span class=\"o\">,</span>\n      <span class=\"o\">),</span>\n      <span class=\"c1\">//共通でmodelを使用したいルート（親）WidgetにてWidgetをWrapするように定義する</span>\n      <span class=\"nl\">home:</span> <span class=\"n\">ScopedModel</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span>\n          <span class=\"nl\">model:</span> <span class=\"n\">counterModel</span><span class=\"o\">,</span>\n          <span class=\"nl\">child:</span> <span class=\"k\">new</span> <span class=\"n\">MyHomePage</span><span class=\"o\">(</span><span class=\"s\">'Scoped Model Demo'</span><span class=\"o\">)</span>\n      <span class=\"o\">)</span>\n    <span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<p>　コンストラクタの <code>model</code> には子孫Widgetにて参照したいModelを指定します。また <code>child</code> には通常のWidgetを指定します。一瞬「？？」となるかもしれないですが<code>ScopedModel&lt;T&gt;</code>は単なるStatelessWidgetです。単に使いたいWidgetをSceopedModelでWrapすると考えれば大丈夫です。</p>\n\n<h4>\n<span id=\"子孫widgetにてmodelを参照する\" class=\"fragment\"></span><a href=\"#%E5%AD%90%E5%AD%ABwidget%E3%81%AB%E3%81%A6model%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>子孫WidgetにてModelを参照する</h4>\n\n<p>子孫WidgetにてModelを参照するには<code>ScopedModelDescendant&lt;T&gt;</code>を使用します。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"kd\">class</span> <span class=\"nc\">MyHomePage</span> <span class=\"kd\">extends</span> <span class=\"n\">StatelessWidget</span> <span class=\"o\">{</span>\n\n  <span class=\"kd\">final</span> <span class=\"kt\">String</span> <span class=\"n\">title</span><span class=\"o\">;</span>\n\n  <span class=\"n\">MyHomePage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">);</span>\n\n  <span class=\"nd\">@override</span>\n  <span class=\"n\">Widget</span> <span class=\"n\">build</span><span class=\"o\">(</span><span class=\"n\">BuildContext</span> <span class=\"n\">context</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">Scaffold</span><span class=\"o\">(</span>\n      <span class=\"nl\">appBar:</span> <span class=\"k\">new</span> <span class=\"n\">AppBar</span><span class=\"o\">(</span>\n        <span class=\"nl\">title:</span> <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span><span class=\"n\">title</span><span class=\"o\">),</span>\n      <span class=\"o\">),</span>\n      <span class=\"nl\">body:</span> <span class=\"k\">new</span> <span class=\"n\">Center</span><span class=\"o\">(</span>\n        <span class=\"nl\">child:</span> <span class=\"k\">new</span> <span class=\"n\">Column</span><span class=\"o\">(</span>\n          <span class=\"nl\">mainAxisAlignment:</span> <span class=\"n\">MainAxisAlignment</span><span class=\"o\">.</span><span class=\"na\">center</span><span class=\"o\">,</span>\n          <span class=\"nl\">children:</span> <span class=\"o\">&lt;</span><span class=\"n\">Widget</span><span class=\"o\">&gt;[</span>\n            <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span>\n              <span class=\"s\">'You have pushed the button this many times:'</span><span class=\"o\">,</span>\n            <span class=\"o\">),</span>\n            <span class=\"c1\">//Modelの情報を参照したいwidgetをScopedModelDescendantにてWrapし、builder関数を定義する</span>\n            <span class=\"n\">ScopedModelDescendant</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span>\n              <span class=\"nl\">builder:</span> <span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"n\">child</span><span class=\"o\">,</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span>\n              <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span>\n                <span class=\"s\">'</span><span class=\"si\">${model.counter}</span><span class=\"s\">'</span><span class=\"o\">,</span>\n                <span class=\"nl\">style:</span> <span class=\"n\">Theme</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">).</span><span class=\"na\">textTheme</span><span class=\"o\">.</span><span class=\"na\">display1</span><span class=\"o\">,</span>\n              <span class=\"o\">)</span>\n            <span class=\"o\">)</span>\n          <span class=\"o\">],</span>\n        <span class=\"o\">),</span>\n      <span class=\"o\">),</span>\n        <span class=\"c1\">//Modelの情報を参照したいwidgetをScopedModelDescendantにてWrapし、builder関数を定義する</span>\n      <span class=\"nl\">floatingActionButton:</span><span class=\"n\">ScopedModelDescendant</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span>\n          <span class=\"nl\">builder:</span> <span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"n\">child</span><span class=\"o\">,</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">FloatingActionButton</span><span class=\"o\">(</span>\n              <span class=\"c1\">//Modelのincrementを呼び出してカウントアップする。</span>\n              <span class=\"nl\">onPressed:</span> <span class=\"o\">()</span> <span class=\"o\">=&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">increment</span><span class=\"o\">(),</span>\n              <span class=\"nl\">tooltip:</span> <span class=\"s\">'Increment'</span><span class=\"o\">,</span>\n              <span class=\"nl\">child:</span> <span class=\"k\">new</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">),</span>\n            <span class=\"o\">);</span>\n          <span class=\"o\">}</span>\n      <span class=\"o\">)</span>\n    <span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<p>　CounterModelのカウント情報をText Widgetに表示しますが、ここで<code>ScopedModelDescendant&lt;T&gt;</code>を使用します。<br>\nそして<code>builder</code>という名前付き引数を指定します。ここで指定するの下記定義に沿った関数です。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"c1\">//scoped modelより抜粋</span>\n<span class=\"kd\">typedef</span> <span class=\"n\">Widget</span> <span class=\"n\">ScopedModelDescendantBuilder</span><span class=\"o\">&lt;</span><span class=\"n\">T</span> <span class=\"kd\">extends</span> <span class=\"n\">Model</span><span class=\"o\">&gt;(</span>\n  <span class=\"n\">BuildContext</span> <span class=\"n\">context</span><span class=\"o\">,</span>\n  <span class=\"n\">Widget</span> <span class=\"n\">child</span><span class=\"o\">,</span>\n  <span class=\"n\">T</span> <span class=\"n\">model</span><span class=\"o\">,</span>\n<span class=\"o\">);</span>\n</pre></div></div>\n\n<p>　Widgetを戻り値とし、第一引数にはBuildContext、第二引数にはScopedModelDescendantBuilderのコンストラクタにオプションで指定するWidget（これの使い道がよくわかっていないです・・・）、第三引数にはScopedModelで指定したModel（今回はCounterModel）を引数として受け取る関数となります。今回でいうと下記の2箇所です。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"n\">ScopedModelDescendant</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span>\n  <span class=\"nl\">builder:</span> <span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"n\">child</span><span class=\"o\">,</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span>\n    <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span>\n      <span class=\"s\">'</span><span class=\"si\">${model.counter}</span><span class=\"s\">'</span><span class=\"o\">,</span>\n      <span class=\"nl\">style:</span> <span class=\"n\">Theme</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">).</span><span class=\"na\">textTheme</span><span class=\"o\">.</span><span class=\"na\">display1</span><span class=\"o\">,</span>\n    <span class=\"o\">)</span>\n<span class=\"o\">)</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"nl\">floatingActionButton:</span><span class=\"n\">ScopedModelDescendant</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span>\n  <span class=\"nl\">builder:</span> <span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"n\">child</span><span class=\"o\">,</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">FloatingActionButton</span><span class=\"o\">(</span>\n      <span class=\"c1\">//Modelのincrementを呼び出してカウントアップする。</span>\n      <span class=\"nl\">onPressed:</span> <span class=\"o\">()</span> <span class=\"o\">=&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">increment</span><span class=\"o\">(),</span>\n      <span class=\"nl\">tooltip:</span> <span class=\"s\">'Increment'</span><span class=\"o\">,</span>\n      <span class=\"nl\">child:</span> <span class=\"k\">new</span> <span class=\"n\">Icon</span><span class=\"o\">(</span><span class=\"n\">Icons</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">),</span>\n    <span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">)</span>\n</pre></div></div>\n\n<p>　どうでしょうか。1つWrapするための記述（ScopedModelとScopedModelDescendant）が必要になりますがStatefullWidgetとStateの記述がなくなり、より本質的なUIに専念しやすくなっていると思います。</p>\n\n<h4>\n<span id=\"scopedmodeldescendantを使わずにmodelを参照する\" class=\"fragment\"></span><a href=\"#scopedmodeldescendant%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%9A%E3%81%ABmodel%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>ScopedModelDescendantを使わずにModelを参照する</h4>\n\n<p>　ScopedModelDescendantはbuilder関数を定義しますが、第一引数のBuildContextや第二引数のWidgetを使わない事も多いと思います。その場合はもっとダイレクトにModelを取得するやり方がScoped Modelにはあります。上記カウント情報を参照している部分は下記のようになります。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"nl\">children:</span> <span class=\"o\">&lt;</span><span class=\"n\">Widget</span><span class=\"o\">&gt;[</span>\n            <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span>\n              <span class=\"s\">'You have pushed the button this many times:'</span><span class=\"o\">,</span>\n            <span class=\"o\">),</span>\n            <span class=\"k\">new</span> <span class=\"n\">Text</span><span class=\"o\">(</span>\n              <span class=\"s\">'</span><span class=\"si\">${ScopedModel.of&lt;CounterModel&gt;(context, rebuildOnChange: true).counter}</span><span class=\"s\">'</span><span class=\"o\">,</span>\n              <span class=\"nl\">style:</span> <span class=\"n\">Theme</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">).</span><span class=\"na\">textTheme</span><span class=\"o\">.</span><span class=\"na\">display1</span><span class=\"o\">,</span>\n            <span class=\"o\">)</span>\n          <span class=\"o\">]</span>\n</pre></div></div>\n\n<p>　ScopedModelDescendantの記述が無くなったのよりすっきりしたコードになったと思います。<br>\n　ScopedModelにstaticな<code>of</code>メソッドが定義されていているのでそれを呼び出す形です。Genericsの指定と<code>rebuildOnChange</code>にtrueを指定する必要があります。<br>\nもしくは下記のようにCounterModel内にstaticメソッドを指定する事も可能で、その場合は<code>rebuildOnChange</code>にtrueを指定する必要はありません。</p>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"kd\">class</span> <span class=\"nc\">CounterModel</span> <span class=\"kd\">extends</span> <span class=\"n\">Model</span> <span class=\"o\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">_counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n\n  <span class=\"kt\">int</span> <span class=\"kd\">get</span> <span class=\"n\">counter</span> <span class=\"o\">=&gt;</span> <span class=\"n\">_counter</span><span class=\"o\">;</span>\n\n  <span class=\"kt\">void</span> <span class=\"n\">increment</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"n\">_counter</span><span class=\"o\">++;</span>\n    <span class=\"n\">notifyListeners</span><span class=\"o\">();</span>\n  <span class=\"o\">}</span>\n  <span class=\"c1\">//このofメソッドを追加</span>\n  <span class=\"kd\">static</span> <span class=\"n\">CounterModel</span> <span class=\"n\">of</span><span class=\"o\">(</span><span class=\"n\">BuildContext</span> <span class=\"n\">context</span><span class=\"o\">)</span> <span class=\"o\">=&gt;</span> <span class=\"n\">ScopedModel</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">&lt;</span><span class=\"n\">CounterModel</span><span class=\"o\">&gt;(</span><span class=\"n\">context</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"dart\"><div class=\"highlight\"><pre><span class=\"k\">new</span> <span class=\"nf\">Text</span><span class=\"p\">(</span>\n  <span class=\"s\">'</span><span class=\"si\">${CounterModel.of(context).counter}</span><span class=\"s\">'</span><span class=\"o\">,</span>\n  <span class=\"nl\">style:</span> <span class=\"n\">Theme</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">).</span><span class=\"na\">textTheme</span><span class=\"o\">.</span><span class=\"na\">display1</span><span class=\"o\">,</span>\n<span class=\"o\">)</span>\n</pre></div></div>\n\n<p>　とりあえず今回は以上になります。Dart Meetupの時にも話をしたのですがScoped ModelとDIと組み合わせる事でClean Architectureでプログラミングするのがとても容易になるのが自分が好きなポイントです。大きなアプリを作った時にどうなのかという点はあるかと思いますが、その点はそもそもFuchsiaで使用されているので上手く行かなかったら自分のスキルが足りないという事にしたいと思いますｗ。<br>\n　Flutterの理解がある程度あればScoped Modelを使うのも難しくないと思うのでそのあたりも良いポイントかなと思います。</p>\n",
      "body": "今回はscoped modelについて書いてみようと思います。\n[Dart Meetup Tokyo #5](https://dartisans-jp.connpass.com/event/91133/)での発表の中でもちょっと触れているやつです。ちなみにその時のスライドはこちらです。\n[FlutterとAngularDartを DIとClean Architectureでいい感じにする](https://speakerdeck.com/takayukihayashi/fluttertoangulardartwo-ditoclean-architecturede-iigan-zinisuru)\n\n\n#Scoped Model\n\n## Scoped Modelとは\n\nScoped Modelの特徴はざっくりまとめると下記のような感じです。\n\n- 親Widgetから子孫のWidgetにModelを簡単に渡す事が出来るようになる\n- Modelが更新された場合に、そのModelを参照しているWidgetを再レンダリングする\n- **StatefullWidgetとStateを使用する必要が無くなる**\n\n　個人的にはStatefullWidgetとStateを使う必要がないのが大きいです（Scoped Modelの内部では使用されていますが、そのあたりを自然な形で隠蔽してくれています）。Flutterのアーキテクチャーを考えれば必要なのは良くわかるのですが、ぶっちゃけあれって面倒ですよね？ｗ\nなのでScoped Modelを使う事で全てのWidgetをStatelessにする事が出来るので個人的に凄く書きやすくなると思っています。\n\n## Fuchsiaで取り入れられている\n　日本では話題になることが少ないですが、現在Googleが開発している[Fuchsia](https://github.com/fuchsia-mirror)というマイクロカーネルのOSがあります。そのFuchsiaではFlutterでGUIが開発されているのですが、その中でScoped Modelの考えが使われています。ちなみにScoped ModelのライブラリーをFuchsia側で使っているわけではなくFuchsia側のソースをそのまま切り出してScoped Modelのプラグインにしています。ソースコードはコメントを入れても300行くらいです。\n\n## 実際の使い方\n\n　android studio等でflutterのプロジェクトを作成した際にデフォルトで作成されている「ボタンをクリックすると数字がカウントアップするアプリ」を例にScoped Modelを利用した場合にどうなるか見ていきます。READMEに書いてあるやつそのままですｗ\n\n####依存関係の追加\n flutterのプラグインとして[提供](https://pub.dartlang.org/packages/scoped_model)されています。なのでpubspec.yamlに依存関係を追加すれば使えるようになります。\n\n```yaml:pubspec.yaml\ndependencies:\n  flutter:\n    sdk: flutter\n  scoped_model: ^0.3.0 #これを追加\n```\n\n####Modelの作成\n\n　親Widgetと子孫Widgetで共有するWidgetを作成します。\n\n```dart\nimport 'package:scoped_model/scoped_model.dart';\n\nclass CounterModel extends Model {\n  int _counter = 0;\n\n  int get counter => _counter;\n\n  void increment() {\n    _counter++;\n    //状態を変更したらnotifyListenersを呼ぶ。\n    notifyListeners();\n  }\n}\n```\nModelというクラスをextendsする形で独自のModelクラスを定義します。このModelはカウンターの数字情報を保持しつつその数字をincrementする処理を持ちます。\nまた、状態（_counter）を変更した場合にWidgetの再レンダリングを実行するためにnotifyListenersを呼び出します。これを呼び忘れると再レンダリングは実行されないので注意が必要です。\n\n\n####Scoped Modelの定義\n　Scoped Modelを定義すると指定したmodelがその子孫Widget内にて容易に参照出来るようになります。\n\n```dart\nvoid main() => runApp(new MyApp(CounterModel()));\n\nclass MyApp extends StatelessWidget {\n\n  final CounterModel counterModel;\n\n  MyApp(this.counterModel);\n\n  @override\n  Widget build(BuildContext context) {\n    return new MaterialApp(\n      title: 'Scoped Model Demo',\n      theme: new ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      //共通でmodelを使用したいルート（親）WidgetにてWidgetをWrapするように定義する\n      home: ScopedModel<CounterModel>(\n          model: counterModel,\n          child: new MyHomePage('Scoped Model Demo')\n      )\n    );\n  }\n}\n```\n　コンストラクタの `model` には子孫Widgetにて参照したいModelを指定します。また `child` には通常のWidgetを指定します。一瞬「？？」となるかもしれないですが`ScopedModel<T>`は単なるStatelessWidgetです。単に使いたいWidgetをSceopedModelでWrapすると考えれば大丈夫です。\n\n####子孫WidgetにてModelを参照する\n\n 子孫WidgetにてModelを参照するには`ScopedModelDescendant<T>`を使用します。\n\n```dart\nclass MyHomePage extends StatelessWidget {\n\n  final String title;\n\n  MyHomePage(this.title);\n\n  @override\n  Widget build(BuildContext context) {\n    return new Scaffold(\n      appBar: new AppBar(\n        title: new Text(title),\n      ),\n      body: new Center(\n        child: new Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            new Text(\n              'You have pushed the button this many times:',\n            ),\n            //Modelの情報を参照したいwidgetをScopedModelDescendantにてWrapし、builder関数を定義する\n            ScopedModelDescendant<CounterModel>(\n              builder: (context, child, model) =>\n              new Text(\n                '${model.counter}',\n                style: Theme.of(context).textTheme.display1,\n              )\n            )\n          ],\n        ),\n      ),\n        //Modelの情報を参照したいwidgetをScopedModelDescendantにてWrapし、builder関数を定義する\n      floatingActionButton:ScopedModelDescendant<CounterModel>(\n          builder: (context, child, model) {\n            return new FloatingActionButton(\n              //Modelのincrementを呼び出してカウントアップする。\n              onPressed: () => model.increment(),\n              tooltip: 'Increment',\n              child: new Icon(Icons.add),\n            );\n          }\n      )\n    );\n  }\n}\n```\n　CounterModelのカウント情報をText Widgetに表示しますが、ここで`ScopedModelDescendant<T>`を使用します。\nそして`builder`という名前付き引数を指定します。ここで指定するの下記定義に沿った関数です。\n\n```dart\n//scoped modelより抜粋\ntypedef Widget ScopedModelDescendantBuilder<T extends Model>(\n  BuildContext context,\n  Widget child,\n  T model,\n);\n```\n　Widgetを戻り値とし、第一引数にはBuildContext、第二引数にはScopedModelDescendantBuilderのコンストラクタにオプションで指定するWidget（これの使い道がよくわかっていないです・・・）、第三引数にはScopedModelで指定したModel（今回はCounterModel）を引数として受け取る関数となります。今回でいうと下記の2箇所です。\n\n```dart\nScopedModelDescendant<CounterModel>(\n  builder: (context, child, model) =>\n    new Text(\n      '${model.counter}',\n      style: Theme.of(context).textTheme.display1,\n    )\n)\n```\n```dart\nfloatingActionButton:ScopedModelDescendant<CounterModel>(\n  builder: (context, child, model) {\n    return new FloatingActionButton(\n      //Modelのincrementを呼び出してカウントアップする。\n      onPressed: () => model.increment(),\n      tooltip: 'Increment',\n      child: new Icon(Icons.add),\n    );\n  }\n)\n```\n\n　どうでしょうか。1つWrapするための記述（ScopedModelとScopedModelDescendant）が必要になりますがStatefullWidgetとStateの記述がなくなり、より本質的なUIに専念しやすくなっていると思います。\n\n####ScopedModelDescendantを使わずにModelを参照する\n　ScopedModelDescendantはbuilder関数を定義しますが、第一引数のBuildContextや第二引数のWidgetを使わない事も多いと思います。その場合はもっとダイレクトにModelを取得するやり方がScoped Modelにはあります。上記カウント情報を参照している部分は下記のようになります。\n\n```dart\nchildren: <Widget>[\n            new Text(\n              'You have pushed the button this many times:',\n            ),\n            new Text(\n              '${ScopedModel.of<CounterModel>(context, rebuildOnChange: true).counter}',\n              style: Theme.of(context).textTheme.display1,\n            )\n          ]\n```\n　ScopedModelDescendantの記述が無くなったのよりすっきりしたコードになったと思います。\n　ScopedModelにstaticな`of`メソッドが定義されていているのでそれを呼び出す形です。Genericsの指定と`rebuildOnChange`にtrueを指定する必要があります。\nもしくは下記のようにCounterModel内にstaticメソッドを指定する事も可能で、その場合は`rebuildOnChange`にtrueを指定する必要はありません。\n\n```dart\nclass CounterModel extends Model {\n  int _counter = 0;\n\n  int get counter => _counter;\n\n  void increment() {\n    _counter++;\n    notifyListeners();\n  }\n  //このofメソッドを追加\n  static CounterModel of(BuildContext context) => ScopedModel.of<CounterModel>(context);\n}\n```\n\n```dart\nnew Text(\n  '${CounterModel.of(context).counter}',\n  style: Theme.of(context).textTheme.display1,\n)\n```\n\n　とりあえず今回は以上になります。Dart Meetupの時にも話をしたのですがScoped ModelとDIと組み合わせる事でClean Architectureでプログラミングするのがとても容易になるのが自分が好きなポイントです。大きなアプリを作った時にどうなのかという点はあるかと思いますが、その点はそもそもFuchsiaで使用されているので上手く行かなかったら自分のスキルが足りないという事にしたいと思いますｗ。\n　Flutterの理解がある程度あればScoped Modelを使うのも難しくないと思うのでそのあたりも良いポイントかなと思います。\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:37:40+09:00",
      "group": null,
      "id": "690fa0d6528e056617b5",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Dart",
          "versions": []
        },
        {
          "name": "Flutter",
          "versions": []
        }
      ],
      "title": "Scoped Modelの基本的な使い方（Flutter）",
      "updated_at": "2018-08-19T21:37:40+09:00",
      "url": "https://qiita.com/hayassh/items/690fa0d6528e056617b5",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 0,
        "followers_count": 4,
        "github_login_name": null,
        "id": "hayassh",
        "items_count": 9,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 134650,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/134650/profile-images/1473719363",
        "twitter_screen_name": "t_hyssh",
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>You can handle the icon NSImage in Assets.xcassets by the name like <font color=\"red\">NSImage(named:\"helpE9\")</font>. In my case, there are helpE0 - helpEn and helpJ0 - helpJn and the number (n) depends on the app. I defined the image in the array as usual. It was OK except I had to define the array per app every time. So I gave up. Instead, I have replace the code as described below. </p>\n\n<h2>\n<span id=\"assetsxcassetsに入れたイメージをそのアイコン名で処理する方法\" class=\"fragment\"></span><a href=\"#assetsxcassets%E3%81%AB%E5%85%A5%E3%82%8C%E3%81%9F%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%81%9D%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E5%90%8D%E3%81%A7%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>Assets.xcassetsに入れたイメージをそのアイコン名で処理する方法</h2>\n\n<p>やっていることは初期処理で、次の２点。</p>\n\n<ul>\n<li>helpE0〜helpEn、helpJ0〜helpJnの登録済みのイメージの名前で配列を作ります。個数はアプリ依存。</li>\n<li>\n<p>作成したイメージ名配列に従い、イメージの配列を作成します。<br>\n<a href=\"https://camo.qiitausercontent.com/1bc2fc601bee096901e82893936e48a96cf2943f/68747470733a2f2f7261697a616e32616d652e66696c65732e776f726470726573732e636f6d2f323031382f30382f696d61676532303138303830392d3031322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/1bc2fc601bee096901e82893936e48a96cf2943f/68747470733a2f2f7261697a616e32616d652e66696c65732e776f726470726573732e636f6d2f323031382f30382f696d61676532303138303830392d3031322e706e67\" alt=\"\" data-canonical-src=\"https://raizan2ame.files.wordpress.com/2018/08/image20180809-012.png\"></a></p>\n\n<h2>\n<span id=\"初期処理でイメージを配列に登録する\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E5%87%A6%E7%90%86%E3%81%A7%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E9%85%8D%E5%88%97%E3%81%AB%E7%99%BB%E9%8C%B2%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>初期処理でイメージを配列に登録する</h2>\n\n<div class=\"code-frame\" data-lang=\"swift\"><div class=\"highlight\"><pre>\n<span class=\"kt\">MesaHelpArea</span>\n\n<span class=\"k\">var</span> <span class=\"nv\">helpIndex</span><span class=\"p\">:</span><span class=\"kt\">Int</span>                   <span class=\"o\">=</span> <span class=\"mi\">0</span>                         <span class=\"c1\">//🔰🔰現在のヘルプ画像位置。</span>\n<span class=\"k\">var</span> <span class=\"nv\">helpIndexE</span><span class=\"p\">:[</span><span class=\"kt\">Int</span><span class=\"p\">]</span>                <span class=\"o\">=</span> <span class=\"p\">[]</span>                        <span class=\"c1\">//🔰🔰ヘルプ画像位置🇺🇸。</span>\n<span class=\"k\">var</span> <span class=\"nv\">helpIndexJ</span><span class=\"p\">:[</span><span class=\"kt\">Int</span><span class=\"p\">]</span>                <span class=\"o\">=</span> <span class=\"p\">[]</span>                        <span class=\"c1\">//🔰🔰ヘルプ画像位置🇯🇵。</span>\n<span class=\"k\">var</span> <span class=\"nv\">helpIndexArray</span><span class=\"p\">:[</span><span class=\"kt\">Int</span><span class=\"p\">]</span>            <span class=\"o\">=</span> <span class=\"p\">[]</span>                        <span class=\"c1\">//🔰🔰ヘルプ画像位置。</span>\n<span class=\"k\">var</span> <span class=\"nv\">helpImage</span><span class=\"p\">:[</span><span class=\"kt\">NSImage</span><span class=\"p\">]</span>             <span class=\"o\">=</span> <span class=\"p\">[]</span>                        <span class=\"c1\">//🔰🔰</span>\n<span class=\"n\">______________________________________________________________________________________________</span>\n    <span class=\"k\">let</span> <span class=\"nv\">H</span>               <span class=\"o\">=</span> <span class=\"nf\">MesaHelpArea</span><span class=\"p\">()</span>                        <span class=\"c1\">//🔰🔰</span>\n\n    <span class=\"k\">var</span> <span class=\"nv\">wImageEnglish</span><span class=\"p\">:[</span><span class=\"kt\">String</span><span class=\"p\">]</span>  <span class=\"o\">=</span> <span class=\"p\">[]</span>                            <span class=\"c1\">//🔰🔰</span>\n    <span class=\"k\">var</span> <span class=\"nv\">wImageJapanese</span><span class=\"p\">:[</span><span class=\"kt\">String</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>                            <span class=\"c1\">//🔰🔰</span>\n    <span class=\"kt\">H</span><span class=\"o\">.</span><span class=\"n\">helpImage</span>                 <span class=\"o\">=</span> <span class=\"p\">[]</span>                            <span class=\"c1\">//🔰🔰</span>\n    <span class=\"k\">for</span> <span class=\"n\">inx</span> <span class=\"k\">in</span> <span class=\"mi\">0</span><span class=\"o\">..&lt;</span><span class=\"mi\">20</span> <span class=\"p\">{</span>                                         <span class=\"c1\">//🔰🔰</span>\n        <span class=\"n\">wImageEnglish</span><span class=\"o\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"s\">\"helpE\"</span> <span class=\"o\">+</span> <span class=\"nf\">String</span><span class=\"p\">(</span><span class=\"n\">inx</span><span class=\"p\">))</span>             <span class=\"c1\">//🔰🔰helpE0〜helpeEn</span>\n        <span class=\"n\">wImageJapanese</span><span class=\"o\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"s\">\"helpJ\"</span> <span class=\"o\">+</span> <span class=\"nf\">String</span><span class=\"p\">(</span><span class=\"n\">inx</span><span class=\"p\">))</span>            <span class=\"c1\">//🔰🔰helpJ0〜helpeJn</span>\n    <span class=\"p\">}</span>                                                           <span class=\"c1\">//🔰🔰</span>\n    <span class=\"k\">for</span> <span class=\"n\">inx</span> <span class=\"k\">in</span> <span class=\"mi\">0</span><span class=\"o\">..&lt;</span><span class=\"n\">wImageEnglish</span><span class=\"o\">.</span><span class=\"nf\">count</span> <span class=\"p\">{</span>                        <span class=\"c1\">//🔰🔰</span>\n        <span class=\"k\">if</span> <span class=\"nf\">NSImage</span><span class=\"p\">(</span><span class=\"nv\">named</span><span class=\"p\">:</span><span class=\"kt\">NSImage</span><span class=\"o\">.</span><span class=\"nf\">Name</span><span class=\"p\">(</span><span class=\"nv\">rawValue</span><span class=\"p\">:</span> <span class=\"n\">wImageEnglish</span><span class=\"p\">[</span><span class=\"n\">inx</span><span class=\"p\">]))</span> <span class=\"o\">!=</span> <span class=\"nf\">nil</span> <span class=\"p\">{</span><span class=\"c1\">//🔰🔰イメージが存在?</span>\n            <span class=\"kt\">H</span><span class=\"o\">.</span><span class=\"n\">helpImage</span><span class=\"o\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"nf\">NSImage</span><span class=\"p\">(</span><span class=\"nv\">named</span><span class=\"p\">:</span><span class=\"kt\">NSImage</span><span class=\"o\">.</span><span class=\"nf\">Name</span><span class=\"p\">(</span><span class=\"nv\">rawValue</span><span class=\"p\">:</span> <span class=\"n\">wImageEnglish</span><span class=\"p\">[</span><span class=\"n\">inx</span><span class=\"p\">]))</span><span class=\"o\">!</span><span class=\"p\">)</span><span class=\"c1\">//🔰🔰</span>\n        <span class=\"p\">}</span> <span class=\"nf\">else</span> <span class=\"p\">{</span> <span class=\"p\">}</span>                                              <span class=\"c1\">//🔰🔰</span>\n    <span class=\"p\">}</span>                                                           <span class=\"c1\">//🔰🔰</span>\n    <span class=\"k\">for</span> <span class=\"n\">inx</span> <span class=\"k\">in</span> <span class=\"mi\">0</span><span class=\"o\">..&lt;</span><span class=\"n\">wImageEnglish</span><span class=\"o\">.</span><span class=\"nf\">count</span> <span class=\"p\">{</span>                        <span class=\"c1\">//🔰🔰</span>\n        <span class=\"k\">if</span> <span class=\"nf\">NSImage</span><span class=\"p\">(</span><span class=\"nv\">named</span><span class=\"p\">:</span><span class=\"kt\">NSImage</span><span class=\"o\">.</span><span class=\"nf\">Name</span><span class=\"p\">(</span><span class=\"nv\">rawValue</span><span class=\"p\">:</span> <span class=\"n\">wImageEnglish</span><span class=\"p\">[</span><span class=\"n\">inx</span><span class=\"p\">]))</span> <span class=\"o\">!=</span> <span class=\"nf\">nil</span> <span class=\"p\">{</span><span class=\"c1\">//🔰🔰イメージが存在?、</span>\n            <span class=\"kt\">H</span><span class=\"o\">.</span><span class=\"n\">helpImage</span><span class=\"o\">.</span><span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"nf\">NSImage</span><span class=\"p\">(</span><span class=\"nv\">named</span><span class=\"p\">:</span><span class=\"kt\">NSImage</span><span class=\"o\">.</span><span class=\"nf\">Name</span><span class=\"p\">(</span><span class=\"nv\">rawValue</span><span class=\"p\">:</span> <span class=\"n\">wImageJapanese</span><span class=\"p\">[</span><span class=\"n\">inx</span><span class=\"p\">]))</span><span class=\"o\">!</span><span class=\"p\">)</span><span class=\"c1\">//🔰🔰</span>\n        <span class=\"p\">}</span> <span class=\"nf\">else</span> <span class=\"p\">{</span> <span class=\"p\">}</span>                                              <span class=\"c1\">//🔰🔰</span>\n    <span class=\"p\">}</span>                                                           <span class=\"c1\">//🔰🔰</span>\n</pre></div></div>\n</li>\n</ul>\n",
      "body": "You can handle the icon NSImage in Assets.xcassets by the name like <font color=\"red\">NSImage(named:\"helpE9\")</font>. In my case, there are helpE0 - helpEn and helpJ0 - helpJn and the number (n) depends on the app. I defined the image in the array as usual. It was OK except I had to define the array per app every time. So I gave up. Instead, I have replace the code as described below. \n\n##Assets.xcassetsに入れたイメージをそのアイコン名で処理する方法\nやっていることは初期処理で、次の２点。\n\n- helpE0〜helpEn、helpJ0〜helpJnの登録済みのイメージの名前で配列を作ります。個数はアプリ依存。\n- 作成したイメージ名配列に従い、イメージの配列を作成します。\n![](https://raizan2ame.files.wordpress.com/2018/08/image20180809-012.png)\n##初期処理でイメージを配列に登録する\n```swift\n\n    MesaHelpArea\n\n    var helpIndex:Int                   = 0                         //🔰🔰現在のヘルプ画像位置。\n    var helpIndexE:[Int]                = []                        //🔰🔰ヘルプ画像位置🇺🇸。\n    var helpIndexJ:[Int]                = []                        //🔰🔰ヘルプ画像位置🇯🇵。\n    var helpIndexArray:[Int]            = []                        //🔰🔰ヘルプ画像位置。\n    var helpImage:[NSImage]             = []                        //🔰🔰\n______________________________________________________________________________________________\n        let H               = MesaHelpArea()                        //🔰🔰\n\n        var wImageEnglish:[String]  = []                            //🔰🔰\n        var wImageJapanese:[String] = []                            //🔰🔰\n        H.helpImage                 = []                            //🔰🔰\n        for inx in 0..<20 {                                         //🔰🔰\n            wImageEnglish.append(\"helpE\" + String(inx))             //🔰🔰helpE0〜helpeEn\n            wImageJapanese.append(\"helpJ\" + String(inx))            //🔰🔰helpJ0〜helpeJn\n        }                                                           //🔰🔰\n        for inx in 0..<wImageEnglish.count {                        //🔰🔰\n            if NSImage(named:NSImage.Name(rawValue: wImageEnglish[inx])) != nil {//🔰🔰イメージが存在?\n                H.helpImage.append(NSImage(named:NSImage.Name(rawValue: wImageEnglish[inx]))!)//🔰🔰\n            } else { }                                              //🔰🔰\n        }                                                           //🔰🔰\n        for inx in 0..<wImageEnglish.count {                        //🔰🔰\n            if NSImage(named:NSImage.Name(rawValue: wImageEnglish[inx])) != nil {//🔰🔰イメージが存在?、\n                H.helpImage.append(NSImage(named:NSImage.Name(rawValue: wImageJapanese[inx]))!)//🔰🔰\n            } else { }                                              //🔰🔰\n        }                                                           //🔰🔰\n```\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:37:11+09:00",
      "group": null,
      "id": "4b735a90844873b3cccc",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "macos",
          "versions": []
        }
      ],
      "title": "Swift：NSImageをアイコン名で処理",
      "updated_at": "2018-08-19T21:41:02+09:00",
      "url": "https://qiita.com/raizan2ame/items/4b735a90844873b3cccc",
      "user": {
        "description": "App development on macOS and iOS with Swift and Objective-C.",
        "facebook_id": "",
        "followees_count": 0,
        "followers_count": 0,
        "github_login_name": null,
        "id": "raizan2ame",
        "items_count": 7,
        "linkedin_id": "",
        "location": "Itoshima, Fukuoka, Japan",
        "name": "H. K.",
        "organization": "Mesa Network Japan",
        "permanent_id": 122378,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/122378/profile-images/1473715218",
        "twitter_screen_name": null,
        "website_url": "https://raizan2ame.blog"
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h1>\n<span id=\"progateとは\" class=\"fragment\"></span><a href=\"#progate%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Progateとは</h1>\n\n<p><strong>Progateサイト上でコーディングをしながら、気軽にプログラミング言語を学ぶことが出来るサイト。</strong><br>\n<strong>一部無料のサービスだがレッスンを進めていくと有料になる（月額980円）</strong><br>\n前回のjQueryに続き今回はSwiftのレッスンを利用してみました<img alt=\":grinning:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f600.png\" title=\":grinning:\" width=\"20\"><br>\n今回はSwiftの全3コースで学べたことをまとめます。</p>\n\n<h1>\n<span id=\"1-swift-ⅰ-学習コース\" class=\"fragment\"></span><a href=\"#1-swift-%E2%85%B0-%E5%AD%A6%E7%BF%92%E3%82%B3%E3%83%BC%E3%82%B9\"><i class=\"fa fa-link\"></i></a>1. Swift Ⅰ 学習コース</h1>\n\n<p>全17ステップ<br>\n修了時間目安 2h20m</p>\n\n<h2>\n<span id=\"学習内容\" class=\"fragment\"></span><a href=\"#%E5%AD%A6%E7%BF%92%E5%86%85%E5%AE%B9\"><i class=\"fa fa-link\"></i></a>学習内容</h2>\n\n<ul>\n<li>1 章：Swiftとは？\n\n<ul>\n<li>Swiftについてと成果物（クイズアプリ）の確認</li>\n</ul>\n</li>\n<li>2 章：Swiftの基礎\n\n<ul>\n<li>定数、変数、演算子、キャストなど</li>\n</ul>\n</li>\n<li>3 章：条件分岐\n\n<ul>\n<li>条件分岐の書き方</li>\n</ul>\n</li>\n<li>4 章：アプリを作ってみよう\n\n<ul>\n<li>成果物の作成</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"感想\" class=\"fragment\"></span><a href=\"#%E6%84%9F%E6%83%B3\"><i class=\"fa fa-link\"></i></a>感想</h2>\n\n<p>Swiftでの変数や定数、if文などのレッスンです。<br>\n<strong>Swiftを使ったことがない人でも他のプログラミング言語を学習していれば簡単に感じると思います。</strong><br>\nSwiftは静的型付けなのでJavaなどの経験があれば理解しやすいと思います。<br>\nSwiftは型の暗黙的変換がなかったり、構文の最後にセミコロンがいらなかったりするようです。</p>\n\n<p>4章からは実際のiPhoneアプリ開発を想定したXcode（統合開発環境）の動画説明が多くなります。<br>\nXcodeでの画面開発やシミュレータの利用はprogateでは出来ないので動画での解説になります<br>\n動画解説後、画面のlabelやtextFieldなどのオブジェクトをコントローラで扱いクイズアプリを作成していきます。</p>\n\n<p><strong><em>4章が特にSwiftっぽいレッスンだったので、他のプログラミング言語の経験があれば4章だけやるのも良いと思いました。</em></strong></p>\n\n<h1>\n<span id=\"2-swift-ⅱ-学習コース\" class=\"fragment\"></span><a href=\"#2-swift-%E2%85%B1-%E5%AD%A6%E7%BF%92%E3%82%B3%E3%83%BC%E3%82%B9\"><i class=\"fa fa-link\"></i></a>2. Swift Ⅱ 学習コース</h1>\n\n<p>全16ステップ<br>\n修了時間目安 2h40m</p>\n\n<h2>\n<span id=\"学習内容-1\" class=\"fragment\"></span><a href=\"#%E5%AD%A6%E7%BF%92%E5%86%85%E5%AE%B9-1\"><i class=\"fa fa-link\"></i></a>学習内容</h2>\n\n<ul>\n<li>1 章：条件分岐\n\n<ul>\n<li>switch文についてです。case部で3...5のように範囲指定を行える。defaultは必須など</li>\n</ul>\n</li>\n<li>2 章：配列\n\n<ul>\n<li>foreachで配列にアクセスを行う書き方など。（変数 in 配列）</li>\n</ul>\n</li>\n<li>3 章：辞書\n\n<ul>\n<li>key-valueの連想配列？についてです。progateでは辞書と表現していました。</li>\n</ul>\n</li>\n<li>4 章：オプショナル\n\n<ul>\n<li>オプショナルの概念と使い方・オプショナルバインディングの使い方</li>\n</ul>\n</li>\n<li>5 章：英単語アプリをつくろう\n\n<ul>\n<li>keyの入力を受け取り、紐づくvalueを画面に表示します。</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"感想-1\" class=\"fragment\"></span><a href=\"#%E6%84%9F%E6%83%B3-1\"><i class=\"fa fa-link\"></i></a>感想</h2>\n\n<p><strong><em>序盤のswitch文や配列・for文は他のプログラミング言語で学習していれば新鮮さは感じられないと思います。</em></strong></p>\n\n<p><strong><em>オプショナルについてはJava8で学習はしていましたが改めて勉強になりました。</em></strong><br>\nSwiftでは変数にnilを代入する場合、オプショナルでデータ型をマッピングする必要があるようです。<br>\nnilを含む変数に安全にアクセスする為、オプショナルバインディングを使い条件分岐でnilか否かの処理を記述し、nilに対して安全なアプローチをとることを推奨していました。</p>\n\n<p>型推論についてのレッスンもありました。<br>\nprogateではあまり利用を推奨しておらず、変数宣言時に明示的にするように推奨していました。<br>\n型を明示しないとコードは短くなりますが、その変数が何の型なのかわかりにくくなってしまいますよね。<br>\nオプショナルバインディングは慣習的に型を明示しないようです。</p>\n\n<h1>\n<span id=\"3-swift-ⅲ-学習コース\" class=\"fragment\"></span><a href=\"#3-swift-%E2%85%B2-%E5%AD%A6%E7%BF%92%E3%82%B3%E3%83%BC%E3%82%B9\"><i class=\"fa fa-link\"></i></a>3. Swift Ⅲ 学習コース</h1>\n\n<p>全15ステップ<br>\n修了時間目安 2h00m</p>\n\n<h2>\n<span id=\"学習内容-2\" class=\"fragment\"></span><a href=\"#%E5%AD%A6%E7%BF%92%E5%86%85%E5%AE%B9-2\"><i class=\"fa fa-link\"></i></a>学習内容</h2>\n\n<ul>\n<li>1 章：関数（１）\n\n<ul>\n<li>関数の定義の仕方や引数、戻り値について</li>\n</ul>\n</li>\n<li>2 章：スコープ\n\n<ul>\n<li>変数のスコープについて</li>\n</ul>\n</li>\n<li>3 章：関数（２）\n\n<ul>\n<li>外部引数名、オーバーロード、可変長引数</li>\n</ul>\n</li>\n<li>4 章：課題に挑戦しよう\n\n<ul>\n<li>簡単な課題でこの章の復習</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"感想-2\" class=\"fragment\"></span><a href=\"#%E6%84%9F%E6%83%B3-2\"><i class=\"fa fa-link\"></i></a>感想</h2>\n\n<p>関数やスコープなどについては他のプログラミング言語の経験があれば不要かもしれません…<br>\nSwiftではこういうふうに書くんだという勉強にはなりますが…</p>\n\n<h1>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h1>\n\n<p><strong><em>全体的にどのプログラミング言語でも共通する基本的なことを指示通り進めていく流れになります。</em></strong><br>\n学習コースのみで実践課題がないのも残念でした。<br>\nProgateだとXcode周りの学習が出来ないので実践的な課題は少ないのかと思います。<br>\n<strong><em>有料でSwiftの勉強をすることを考えると980円だと高いなと感じました。</em></strong><br>\n実際にアプリを作りながら学べる書籍などがあれば、Swiftに関してはそちらがおススメです。</p>\n",
      "body": "# Progateとは\n**Progateサイト上でコーディングをしながら、気軽にプログラミング言語を学ぶことが出来るサイト。**\n**一部無料のサービスだがレッスンを進めていくと有料になる（月額980円）**\n前回のjQueryに続き今回はSwiftのレッスンを利用してみました:grinning:\n今回はSwiftの全3コースで学べたことをまとめます。\n\n# 1. Swift Ⅰ 学習コース\n全17ステップ\n修了時間目安 2h20m\n\n## 学習内容\n- 1 章：Swiftとは？\n - Swiftについてと成果物（クイズアプリ）の確認\n- 2 章：Swiftの基礎\n - 定数、変数、演算子、キャストなど\n- 3 章：条件分岐\n - 条件分岐の書き方\n- 4 章：アプリを作ってみよう\n - 成果物の作成\n\n## 感想\nSwiftでの変数や定数、if文などのレッスンです。\n**Swiftを使ったことがない人でも他のプログラミング言語を学習していれば簡単に感じると思います。**\nSwiftは静的型付けなのでJavaなどの経験があれば理解しやすいと思います。\nSwiftは型の暗黙的変換がなかったり、構文の最後にセミコロンがいらなかったりするようです。\n\n4章からは実際のiPhoneアプリ開発を想定したXcode（統合開発環境）の動画説明が多くなります。\nXcodeでの画面開発やシミュレータの利用はprogateでは出来ないので動画での解説になります\n動画解説後、画面のlabelやtextFieldなどのオブジェクトをコントローラで扱いクイズアプリを作成していきます。\n\n***4章が特にSwiftっぽいレッスンだったので、他のプログラミング言語の経験があれば4章だけやるのも良いと思いました。***\n\n\n# 2. Swift Ⅱ 学習コース\n全16ステップ\n修了時間目安 2h40m\n\n## 学習内容\n- 1 章：条件分岐\n - switch文についてです。case部で3...5のように範囲指定を行える。defaultは必須など\n- 2 章：配列\n - foreachで配列にアクセスを行う書き方など。（変数 in 配列）\n- 3 章：辞書\n - key-valueの連想配列？についてです。progateでは辞書と表現していました。\n- 4 章：オプショナル\n - オプショナルの概念と使い方・オプショナルバインディングの使い方\n- 5 章：英単語アプリをつくろう\n - keyの入力を受け取り、紐づくvalueを画面に表示します。\n\n## 感想\n\n***序盤のswitch文や配列・for文は他のプログラミング言語で学習していれば新鮮さは感じられないと思います。***\n\n***オプショナルについてはJava8で学習はしていましたが改めて勉強になりました。***\nSwiftでは変数にnilを代入する場合、オプショナルでデータ型をマッピングする必要があるようです。\nnilを含む変数に安全にアクセスする為、オプショナルバインディングを使い条件分岐でnilか否かの処理を記述し、nilに対して安全なアプローチをとることを推奨していました。\n\n型推論についてのレッスンもありました。\nprogateではあまり利用を推奨しておらず、変数宣言時に明示的にするように推奨していました。\n型を明示しないとコードは短くなりますが、その変数が何の型なのかわかりにくくなってしまいますよね。\nオプショナルバインディングは慣習的に型を明示しないようです。\n\n# 3. Swift Ⅲ 学習コース\n全15ステップ\n修了時間目安 2h00m\n\n## 学習内容\n- 1 章：関数（１）\n - 関数の定義の仕方や引数、戻り値について\n- 2 章：スコープ\n - 変数のスコープについて\n- 3 章：関数（２）\n - 外部引数名、オーバーロード、可変長引数\n- 4 章：課題に挑戦しよう\n - 簡単な課題でこの章の復習\n\n## 感想\n関数やスコープなどについては他のプログラミング言語の経験があれば不要かもしれません…\nSwiftではこういうふうに書くんだという勉強にはなりますが…\n\n# まとめ\n***全体的にどのプログラミング言語でも共通する基本的なことを指示通り進めていく流れになります。***\n学習コースのみで実践課題がないのも残念でした。\nProgateだとXcode周りの学習が出来ないので実践的な課題は少ないのかと思います。\n***有料でSwiftの勉強をすることを考えると980円だと高いなと感じました。***\n実際にアプリを作りながら学べる書籍などがあれば、Swiftに関してはそちらがおススメです。\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:36:02+09:00",
      "group": null,
      "id": "aa4b9f9bef7085a12ddf",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "入門",
          "versions": []
        },
        {
          "name": "Swift",
          "versions": []
        },
        {
          "name": "Progate",
          "versions": []
        },
        {
          "name": "学習サービス",
          "versions": []
        }
      ],
      "title": "ProgateのSwiftレッスンで学べること ",
      "updated_at": "2018-08-19T21:36:02+09:00",
      "url": "https://qiita.com/tommyiaw/items/aa4b9f9bef7085a12ddf",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 0,
        "followers_count": 0,
        "github_login_name": "ShuntaroTomiuchi",
        "id": "tommyiaw",
        "items_count": 2,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 263354,
        "profile_image_url": "https://avatars3.githubusercontent.com/u/16506630?v=4",
        "twitter_screen_name": null,
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<blockquote>\n<p>時間ができたらまともにかく</p>\n</blockquote>\n\n<p>標準のInputFieldはどうやっても無理です。ハンドラで小細工してももっと下のところに問題あるので無理。無理。</p>\n\n<p>TextMesh Pro の InputField が下回りを自作してて、それを使うと大丈夫。<br>\nただし、Calet周りのエラーハンドリングに漏れがあり、IME仮確定状態におけるスコープで強制的に空のtextを参照してしまう場合に例外を吐く箇所がある。</p>\n\n<p>一応、一番目立つところだけ対処すれば、ある程度は実用的。<br>\n（見つけるたびに例外ハンドリング追加してく...）</p>\n\n<p>'/Users/User名/Library/Unity/cache/packages/packages.unity.com/<a href=\"mailto:com.unity.textmeshpro@1.2.4\" class=\"autolink\">com.unity.textmeshpro@1.2.4</a>/Scripts/Runtime/TMP_InputField.cs'</p>\n\n<p>の2330行目あたりを</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>try {\n  if (caretPositionInternal &gt; 0)\n  {\n      m_Text = text.Remove(GetStringIndexFromCaretPosition(caretPositionInternal - 1), 1);\n      caretSelectPositionInternal = caretPositionInternal = caretPositionInternal - 1;\n      stringSelectPositionInternal = stringPositionInternal = GetStringIndexFromCaretPosition(caretPositionInternal);\n  }\n  m_isLastKeyBackspace = true;\n  SendOnValueChangedAndUpdateLabel();\n}\ncatch(System.ArgumentOutOfRangeException e){\n  Debug.Log(e.Message);\n}\n</pre></div></div>\n\n<p>問題は、Packmanagerで入れてる場合、アップデートのたびにこれをしなくてはいけない（許容範囲）</p>\n\n<p>そして、CloudBuildとかでビルドするときに、これの適用が外れるというところで、どうしたもんかい。。。</p>\n",
      "body": "> 時間ができたらまともにかく\n\n標準のInputFieldはどうやっても無理です。ハンドラで小細工してももっと下のところに問題あるので無理。無理。\n\nTextMesh Pro の InputField が下回りを自作してて、それを使うと大丈夫。\nただし、Calet周りのエラーハンドリングに漏れがあり、IME仮確定状態におけるスコープで強制的に空のtextを参照してしまう場合に例外を吐く箇所がある。\n\n一応、一番目立つところだけ対処すれば、ある程度は実用的。\n（見つけるたびに例外ハンドリング追加してく...）\n\n'/Users/User名/Library/Unity/cache/packages/packages.unity.com/com.unity.textmeshpro@1.2.4/Scripts/Runtime/TMP_InputField.cs'\n\nの2330行目あたりを\n\n```\ntry {\n  if (caretPositionInternal > 0)\n  {\n      m_Text = text.Remove(GetStringIndexFromCaretPosition(caretPositionInternal - 1), 1);\n      caretSelectPositionInternal = caretPositionInternal = caretPositionInternal - 1;\n      stringSelectPositionInternal = stringPositionInternal = GetStringIndexFromCaretPosition(caretPositionInternal);\n  }\n  m_isLastKeyBackspace = true;\n  SendOnValueChangedAndUpdateLabel();\n}\ncatch(System.ArgumentOutOfRangeException e){\n  Debug.Log(e.Message);\n}\n```\n\n問題は、Packmanagerで入れてる場合、アップデートのたびにこれをしなくてはいけない（許容範囲）\n\nそして、CloudBuildとかでビルドするときに、これの適用が外れるというところで、どうしたもんかい。。。\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:29:09+09:00",
      "group": null,
      "id": "c4772a1197344da69751",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Unity",
          "versions": []
        }
      ],
      "title": "macOSでも日本が入力できるInputField",
      "updated_at": "2018-08-19T21:29:09+09:00",
      "url": "https://qiita.com/karinharp/items/c4772a1197344da69751",
      "user": {
        "description": "",
        "facebook_id": "",
        "followees_count": 9,
        "followers_count": 17,
        "github_login_name": null,
        "id": "karinharp",
        "items_count": 21,
        "linkedin_id": "",
        "location": "幻想郷",
        "name": "月琴 かりん",
        "organization": "AloMarron",
        "permanent_id": 6047,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/6047/profile-images/1531366576",
        "twitter_screen_name": "karinharp",
        "website_url": "http://alomarron.com"
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h3>\n<span id=\"インポート\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88\"><i class=\"fa fa-link\"></i></a>インポート</h3>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"kn\">import</span> <span class=\"n\">stats</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pystan</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib.figure</span> <span class=\"kn\">import</span> <span class=\"n\">figaspect</span>\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n</pre></div></div>\n\n<h3>\n<span id=\"データ読み込み\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\"><i class=\"fa fa-link\"></i></a>データ読み込み</h3>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">salary2</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">'./data/data-salary-2.txt'</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h1>\n<span id=\"103-再パラメータ化\" class=\"fragment\"></span><a href=\"#103-%E5%86%8D%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E5%8C%96\"><i class=\"fa fa-link\"></i></a>10.3 再パラメータ化</h1>\n\n<h2>\n<span id=\"1031-nealの漏斗\" class=\"fragment\"></span><a href=\"#1031-neal%E3%81%AE%E6%BC%8F%E6%96%97\"><i class=\"fa fa-link\"></i></a>10.3.1 Nealの漏斗</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">fit_a</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-8a.stan'</span><span class=\"p\">,</span> <span class=\"n\">chains</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">iter</span><span class=\"o\">=</span><span class=\"mi\">4000</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n<span class=\"n\">fit_b</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-8b.stan'</span><span class=\"p\">,</span> <span class=\"n\">chains</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">iter</span><span class=\"o\">=</span><span class=\"mi\">4000</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n\n<span class=\"n\">ms_a</span> <span class=\"o\">=</span> <span class=\"n\">fit_a</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">()</span>\n<span class=\"n\">ms_b</span> <span class=\"o\">=</span> <span class=\"n\">fit_b</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">()</span>\n\n<span class=\"n\">xx</span><span class=\"p\">,</span> <span class=\"n\">yy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mgrid</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"n\">j</span><span class=\"p\">]</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">c_</span><span class=\"p\">[</span><span class=\"n\">xx</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(),</span> <span class=\"n\">yy</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()]</span>\n<span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">points</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">points</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">lp</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)))</span>\n<span class=\"n\">lp</span><span class=\"p\">[</span><span class=\"n\">lp</span> <span class=\"o\">&lt;</span> <span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">15</span>\n\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figaspect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">sharex</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">sharey</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">([</span><span class=\"n\">ms_a</span><span class=\"p\">,</span> <span class=\"n\">ms_b</span><span class=\"p\">],</span> <span class=\"n\">axes</span><span class=\"p\">):</span>\n    <span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">contourf</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">,</span> <span class=\"n\">yy</span><span class=\"p\">,</span> <span class=\"n\">lp</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">),</span> <span class=\"n\">vmin</span><span class=\"o\">=-</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">xlim</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_xlim</span><span class=\"p\">()</span>\n    <span class=\"n\">ylim</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_ylim</span><span class=\"p\">()</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'r'</span><span class=\"p\">][:,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'a'</span><span class=\"p\">],</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">setp</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s\">'r[1]'</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"n\">xlim</span><span class=\"o\">=</span><span class=\"n\">xlim</span><span class=\"p\">,</span> <span class=\"n\">ylim</span><span class=\"o\">=</span><span class=\"n\">ylim</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/fe04751a6b80fdc3454fd8492dfc2c79a721b2a5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f64356236363162372d613734382d393937392d373831382d3164623965373166393339362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/fe04751a6b80fdc3454fd8492dfc2c79a721b2a5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f64356236363162372d613734382d393937392d373831382d3164623965373166393339362e706e67\" alt=\"fig10-5.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/103085/d5b661b7-a748-9979-7818-1db9e71f9396.png\"></a></p>\n\n<h2>\n<span id=\"1032-階層モデル\" class=\"fragment\"></span><a href=\"#1032-%E9%9A%8E%E5%B1%A4%E3%83%A2%E3%83%87%E3%83%AB\"><i class=\"fa fa-link\"></i></a>10.3.2 階層モデル</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">col</span><span class=\"p\">:</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">}</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'N'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'K'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"s\">'KID'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n<span class=\"n\">fit</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model8-4c.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n",
      "body": "### インポート\n\n```python\nimport numpy as np\nfrom scipy import stats\nimport pandas as pd\nimport pystan\nimport matplotlib.pyplot as plt\nfrom matplotlib.figure import figaspect\n%matplotlib inline\n```\n\n### データ読み込み\n\n```python\nsalary2 = pd.read_csv('./data/data-salary-2.txt')\n```\n\n# 10.3 再パラメータ化\n## 10.3.1 Nealの漏斗\n\n```python\nfit_a = pystan.stan('./stan/model10-8a.stan', chains=1, iter=4000, seed=1234)\nfit_b = pystan.stan('./stan/model10-8b.stan', chains=1, iter=4000, seed=1234)\n\nms_a = fit_a.extract()\nms_b = fit_b.extract()\n\nxx, yy = np.mgrid[-5:5:30j, -5:5:30j]\npoints = np.c_[xx.ravel(), yy.ravel()]\nx, y = points[:, 0], points[:, 1]\nlp = np.log(stats.norm.pdf(y, loc=0, scale=3)) + np.log(stats.norm.pdf(x, loc=0, scale=np.exp(y/2)))\nlp[lp < -15] = -15\n\n_, axes = plt.subplots(1, 2, figsize=figaspect(1/2), sharex=True, sharey=True)\nfor ms, ax in zip([ms_a, ms_b], axes):\n    cs = ax.contourf(xx, yy, lp.reshape(xx.shape), vmin=-15, vmax=0)\n    xlim = ax.get_xlim()\n    ylim = ax.get_ylim()\n    ax.scatter(ms['r'][:, 0], ms['a'], s=1, c='k')\n    plt.setp(ax, xlabel='r[1]', ylabel='a', xlim=xlim, ylim=ylim)\nplt.show()\n```\n![fig10-5.png](https://qiita-image-store.s3.amazonaws.com/0/103085/d5b661b7-a748-9979-7818-1db9e71f9396.png)\n\n## 10.3.2 階層モデル\n\n```python\ndata = {col: salary2[col] for col in salary2.columns}\ndata['N'] = salary2.index.size\ndata['K'] = salary2['KID'].max()\nfit = pystan.stan('./stan/model8-4c.stan', data=data, seed=1234)\n```\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:27:13+09:00",
      "group": null,
      "id": "87fbb2040ccdbeb932c6",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Python",
          "versions": []
        },
        {
          "name": "Stan",
          "versions": []
        },
        {
          "name": "PyStan",
          "versions": []
        }
      ],
      "title": "StanとRでベイズ統計モデリング(アヒル本)をPythonにしてみる - 10.3 再パラメータ化",
      "updated_at": "2018-08-19T21:27:13+09:00",
      "url": "https://qiita.com/shngt/items/87fbb2040ccdbeb932c6",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 1,
        "followers_count": 54,
        "github_login_name": "ScenesK",
        "id": "shngt",
        "items_count": 76,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 103085,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/103085/profile-images/1479473183",
        "twitter_screen_name": null,
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p>今さらですが、<br>\nモードラインのモード名表示を短縮する方法はマイナーモードとメジャーモードでは異なります。</p>\n\n<h1>\n<span id=\"マイナーモード\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%82%A4%E3%83%8A%E3%83%BC%E3%83%A2%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>マイナーモード</h1>\n\n<p>マイナーモード名を短縮するときは、そのモードをロードしたあとで<code>diminish</code>を使います。</p>\n\n<div class=\"code-frame\" data-lang=\"common-lisp\"><div class=\"highlight\"><pre><span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nb\">require</span> <span class=\"ss\">'diminish</span> <span class=\"no\">nil</span> <span class=\"ss\">'noerror</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nv\">eval-after-load</span> <span class=\"s\">\"company\"</span>\n      <span class=\"o\">'</span><span class=\"p\">(</span><span class=\"nv\">diminish</span> <span class=\"ss\">'company-mode</span> <span class=\"s\">\"Cmp\"</span><span class=\"p\">))</span>\n</pre></div></div>\n\n<h1>\n<span id=\"メジャーモード\" class=\"fragment\"></span><a href=\"#%E3%83%A1%E3%82%B8%E3%83%A3%E3%83%BC%E3%83%A2%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>メジャーモード</h1>\n\n<p>メジャーモード名を短縮するときは、<code>diminish</code>を使わず、そのモードにフックして<code>mode-name</code>変数を直接書き変えます。</p>\n\n<div class=\"code-frame\" data-lang=\"common-lisp\"><div class=\"highlight\"><pre><span class=\"p\">(</span><span class=\"nv\">add-hook</span> <span class=\"ss\">'emacs-lisp-mode-hook</span> \n  <span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">()</span>\n    <span class=\"p\">(</span><span class=\"k\">setq</span> <span class=\"nv\">mode-name</span> <span class=\"s\">\"Elisp\"</span><span class=\"p\">)))</span> \n</pre></div></div>\n\n<p>私はMELPAから落としたパッケージには<code>use-package</code>の<code>:diminish</code>キーワードを使っていますが、Emacs標準のモード名は下記のようにしています。<sup id=\"fnref1\"><a href=\"#fn1\" rel=\"footnote\" title=\"safe-diminishありがたくパクらせていただきました。\">1</a></sup></p>\n\n<div class=\"code-frame\" data-lang=\"common-lisp\"><div class=\"highlight\"><pre><span class=\"p\">(</span><span class=\"nb\">defmacro</span> <span class=\"nv\">diminish-minor-mode</span> <span class=\"p\">(</span><span class=\"nv\">file</span> <span class=\"nv\">mode</span> <span class=\"k\">&amp;optional</span> <span class=\"nv\">new-name</span><span class=\"p\">)</span>\n  <span class=\"s\">\"https://github.com/larstvei/dot-emacs/blob/master/init.org\"</span>\n  <span class=\"o\">`</span><span class=\"p\">(</span><span class=\"nv\">with-eval-after-load</span> <span class=\"o\">,</span><span class=\"nv\">file</span>\n     <span class=\"p\">(</span><span class=\"nv\">diminish</span> <span class=\"o\">,</span><span class=\"nv\">mode</span> <span class=\"o\">,</span><span class=\"nv\">new-name</span><span class=\"p\">)))</span>\n\n<span class=\"p\">(</span><span class=\"nb\">defmacro</span> <span class=\"nv\">diminish-major-mode</span> <span class=\"p\">(</span><span class=\"nv\">hook</span> <span class=\"nv\">new-name</span><span class=\"p\">)</span>\n  <span class=\"o\">`</span><span class=\"p\">(</span><span class=\"nv\">add-hook</span> <span class=\"o\">,</span><span class=\"nv\">hook</span> <span class=\"nf\">#'</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"p\">()</span>\n                    <span class=\"p\">(</span><span class=\"k\">setq</span> <span class=\"nv\">mode-name</span> <span class=\"o\">,</span><span class=\"nv\">new-name</span><span class=\"p\">))))</span>\n\n<span class=\"c1\">;; minor mode</span>\n<span class=\"p\">(</span><span class=\"nv\">diminish-minor-mode</span> <span class=\"s\">\"eldoc\"</span> <span class=\"ss\">'eldoc-mode</span> <span class=\"s\">\"doc\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">;; major mode</span>\n<span class=\"p\">(</span><span class=\"nv\">diminish-major-mode</span> <span class=\"ss\">'emacs-lisp-mode-hook</span> <span class=\"s\">\"Elisp\"</span><span class=\"p\">)</span>\n\n</pre></div></div>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<p><a href=\"https://github.com/myrjola/diminish.el\" rel=\"nofollow noopener\" target=\"_blank\">diminish</a><br>\n<a href=\"https://qiita.com/tadsan/items/c859c5c04724cbda75fc#diminish\" id=\"reference-6f4179d2acae2f71b01f\">safe-diminish</a><br>\n<a href=\"http://emacs-fu.blogspot.com/2010/05/cleaning-up-mode-line.html\" rel=\"nofollow noopener\" target=\"_blank\">cleaning up the mode-line</a></p>\n\n<div class=\"footnotes\">\n<hr>\n<ol>\n\n<li id=\"fn1\">\n<p><code>safe-diminish</code>ありがたくパクらせていただきました。 <a href=\"#fnref1\">↩</a></p>\n</li>\n\n</ol>\n</div>\n",
      "body": "今さらですが、\nモードラインのモード名表示を短縮する方法はマイナーモードとメジャーモードでは異なります。\n\n# マイナーモード\n\nマイナーモード名を短縮するときは、そのモードをロードしたあとで`diminish`を使います。\n\n\n```el\n(when (require 'diminish nil 'noerror)\n  (eval-after-load \"company\"\n      '(diminish 'company-mode \"Cmp\"))\n```\n\n# メジャーモード\n\nメジャーモード名を短縮するときは、`diminish`を使わず、そのモードにフックして`mode-name`変数を直接書き変えます。\n\n```el\n(add-hook 'emacs-lisp-mode-hook \n  (lambda()\n    (setq mode-name \"Elisp\"))) \n```\n\n私はMELPAから落としたパッケージには`use-package`の`:diminish`キーワードを使っていますが、Emacs標準のモード名は下記のようにしています。[^1]\n\n[^1]: `safe-diminish`ありがたくパクらせていただきました。\n\n\n```el\n(defmacro diminish-minor-mode (file mode &optional new-name)\n  \"https://github.com/larstvei/dot-emacs/blob/master/init.org\"\n  `(with-eval-after-load ,file\n     (diminish ,mode ,new-name)))\n\n(defmacro diminish-major-mode (hook new-name)\n  `(add-hook ,hook #'(lambda ()\n                    (setq mode-name ,new-name))))\n\n;; minor mode\n(diminish-minor-mode \"eldoc\" 'eldoc-mode \"doc\")\n\n;; major mode\n(diminish-major-mode 'emacs-lisp-mode-hook \"Elisp\")\n\n```\n\n\n# 参考\n[diminish](https://github.com/myrjola/diminish.el)\n[safe-diminish](https://qiita.com/tadsan/items/c859c5c04724cbda75fc#diminish)\n[cleaning up the mode-line](http://emacs-fu.blogspot.com/2010/05/cleaning-up-mode-line.html)\n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:24:31+09:00",
      "group": null,
      "id": "42f62c3aa83f629e90ba",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Emacs",
          "versions": []
        },
        {
          "name": "elisp",
          "versions": []
        },
        {
          "name": "emacs-lisp",
          "versions": []
        }
      ],
      "title": "モードラインのモード名表示を短縮する",
      "updated_at": "2018-08-19T21:27:41+09:00",
      "url": "https://qiita.com/gnrr/items/42f62c3aa83f629e90ba",
      "user": {
        "description": "Just a yak shaver",
        "facebook_id": "",
        "followees_count": 2,
        "followers_count": 1,
        "github_login_name": "hidsh",
        "id": "gnrr",
        "items_count": 6,
        "linkedin_id": "",
        "location": "",
        "name": "",
        "organization": "",
        "permanent_id": 30474,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/30474/profile-images/1473685505",
        "twitter_screen_name": null,
        "website_url": ""
      },
      "page_views_count": null
    },
    {
      "rendered_body": "\n<h3>\n<span id=\"インポート\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88\"><i class=\"fa fa-link\"></i></a>インポート</h3>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"kn\">import</span> <span class=\"n\">stats</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pystan</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib.figure</span> <span class=\"kn\">import</span> <span class=\"n\">figaspect</span>\n<span class=\"kn\">import</span> <span class=\"nn\">seaborn</span> <span class=\"k\">as</span> <span class=\"n\">sns</span>\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n</pre></div></div>\n\n<h3>\n<span id=\"データ読み込み\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\"><i class=\"fa fa-link\"></i></a>データ読み込み</h3>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">salary2</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">'./data/data-salary-2.txt'</span><span class=\"p\">)</span>\n<span class=\"n\">shogi_player</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">'./data/data-shogi-player.txt'</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h1>\n<span id=\"102-弱情報事前分布\" class=\"fragment\"></span><a href=\"#102-%E5%BC%B1%E6%83%85%E5%A0%B1%E4%BA%8B%E5%89%8D%E5%88%86%E5%B8%83\"><i class=\"fa fa-link\"></i></a>10.2 弱情報事前分布</h1>\n\n<h2>\n<span id=\"1022-正の値を持つパラメータ\" class=\"fragment\"></span><a href=\"#1022-%E6%AD%A3%E3%81%AE%E5%80%A4%E3%82%92%E6%8C%81%E3%81%A4%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF\"><i class=\"fa fa-link\"></i></a>10.2.2 正の値を持つパラメータ</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">)</span>\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">invgamma</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">)</span>\n<span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">invgamma</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figaspect</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">axes</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">,</span> <span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"s\">'dashed'</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">setp</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s\">'y'</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s\">'probability density'</span><span class=\"p\">,</span> <span class=\"n\">xlim</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/6ef62d793205c10177d9f0a17d454efb00f24017/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f64633030633762632d663433612d383834652d363332332d6236303036656363383763612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/6ef62d793205c10177d9f0a17d454efb00f24017/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f64633030633762632d663433612d383834652d363332332d6236303036656363383763612e706e67\" alt=\"fig10-2.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/103085/dc00c7bc-f43a-884e-6323-b6006ecc87ca.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">)</span>\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figaspect</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axes</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">,</span> <span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"s\">'dashed'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">setp</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s\">'y'</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s\">'probability density'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/88b6ac06831f855fa82309b1b37c9ca44c4edb93/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f33623134356132632d663863632d666533322d633163312d3365653936393933313436632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/88b6ac06831f855fa82309b1b37c9ca44c4edb93/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f33623134356132632d663863632d666533322d633163312d3365653936393933313436632e706e67\" alt=\"fig10-3.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/103085/3b145a2c-f8cc-fe32-c1c1-3ee96993146c.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">col</span><span class=\"p\">:</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">}</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'N'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'K'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"s\">'KID'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n\n<span class=\"n\">fit1</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model8-4b.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n<span class=\"n\">fit2</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model8-4d.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">ms1</span> <span class=\"o\">=</span> <span class=\"n\">fit1</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">()</span>\n<span class=\"n\">ms2</span> <span class=\"o\">=</span> <span class=\"n\">fit2</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">()</span>\n\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figaspect</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"n\">sharex</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">sharey</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">([</span><span class=\"n\">ms1</span><span class=\"p\">,</span> <span class=\"n\">ms2</span><span class=\"p\">],</span> <span class=\"n\">axes</span><span class=\"p\">):</span>\n    <span class=\"n\">bins</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'s_a'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'s_a'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">min</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">20</span>\n    <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">distplot</span><span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'s_a'</span><span class=\"p\">],</span> <span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"n\">bins</span><span class=\"p\">,</span> <span class=\"n\">hist_kws</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">facecolor</span><span class=\"o\">=</span><span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"n\">edgecolor</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">),</span> <span class=\"n\">kde_kws</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s\">'k'</span><span class=\"p\">,</span> <span class=\"n\">shade</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">),</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">setp</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">xlim</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div></div>\n\n<p><a href=\"https://camo.qiitausercontent.com/460f0f15fb38485fc55544f94ebe977058b9d853/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f66663563393331622d373733322d643166642d636336642d3936656632393238343361312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://camo.qiitausercontent.com/460f0f15fb38485fc55544f94ebe977058b9d853/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3130333038352f66663563393331622d373733322d643166642d636336642d3936656632393238343361312e706e67\" alt=\"fig10-4.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/103085/ff5c931b-7732-d1fd-cc6d-96ef292843a1.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">shogi_player</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">N</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">,</span>\n    <span class=\"n\">G</span><span class=\"o\">=</span><span class=\"n\">shogi_player</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span>\n    <span class=\"n\">LW</span><span class=\"o\">=</span><span class=\"n\">shogi_player</span>\n<span class=\"p\">)</span>\n<span class=\"n\">fit</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-4.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pars</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">'mu'</span><span class=\"p\">,</span> <span class=\"s\">'s_mu'</span><span class=\"p\">,</span> <span class=\"s\">'s_pf'</span><span class=\"p\">),</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">ms</span> <span class=\"o\">=</span> <span class=\"n\">fit</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">()</span>\n\n<span class=\"n\">d_qua</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'mu'</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">95</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">'p05'</span><span class=\"p\">,</span> <span class=\"s\">'p50'</span><span class=\"p\">,</span> <span class=\"s\">'p95'</span><span class=\"p\">))</span>\n<span class=\"n\">d_qua</span><span class=\"p\">[</span><span class=\"s\">'nid'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">d_top5</span> <span class=\"o\">=</span> <span class=\"n\">d_qua</span><span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">(</span><span class=\"s\">'p50'</span><span class=\"p\">,</span> <span class=\"n\">ascending</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n<span class=\"n\">d_top5</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">d_qua</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">ms</span><span class=\"p\">[</span><span class=\"s\">'s_pf'</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">95</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">'p05'</span><span class=\"p\">,</span> <span class=\"s\">'p50'</span><span class=\"p\">,</span> <span class=\"s\">'p95'</span><span class=\"p\">))</span>\n<span class=\"n\">d_qua</span><span class=\"p\">[</span><span class=\"s\">'nid'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">d_top3</span> <span class=\"o\">=</span> <span class=\"n\">d_qua</span><span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">(</span><span class=\"s\">'p50'</span><span class=\"p\">,</span> <span class=\"n\">ascending</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">d_top3</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">d_bot3</span> <span class=\"o\">=</span> <span class=\"n\">d_qua</span><span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">(</span><span class=\"s\">'p50'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">d_bot3</span>\n</pre></div></div>\n\n<h2>\n<span id=\"1024-分散共分散行列\" class=\"fragment\"></span><a href=\"#1024-%E5%88%86%E6%95%A3%E5%85%B1%E5%88%86%E6%95%A3%E8%A1%8C%E5%88%97\"><i class=\"fa fa-link\"></i></a>10.2.4 分散共分散行列</h2>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">col</span><span class=\"p\">:</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">}</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'N'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'K'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"s\">'KID'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n<span class=\"n\">fit</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-5.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">col</span><span class=\"p\">:</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">}</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'N'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'K'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"s\">'KID'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n<span class=\"n\">fit</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-6.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<div class=\"code-frame\" data-lang=\"python\"><div class=\"highlight\"><pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">col</span><span class=\"p\">:</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"n\">col</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">}</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'N'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'K'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salary2</span><span class=\"p\">[</span><span class=\"s\">'KID'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">max</span><span class=\"p\">()</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s\">'Nu'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">fit</span> <span class=\"o\">=</span> <span class=\"n\">pystan</span><span class=\"o\">.</span><span class=\"n\">stan</span><span class=\"p\">(</span><span class=\"s\">'./stan/model10-7.stan'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n</pre></div></div>\n",
      "body": "### インポート\n\n```python\nimport numpy as np\nfrom scipy import stats\nimport pandas as pd\nimport pystan\nimport matplotlib.pyplot as plt\nfrom matplotlib.figure import figaspect\nimport seaborn as sns\n%matplotlib inline\n```\n\n### データ読み込み\n\n```python\nsalary2 = pd.read_csv('./data/data-salary-2.txt')\nshogi_player = pd.read_csv('./data/data-shogi-player.txt')\n```\n\n# 10.2 弱情報事前分布\n## 10.2.2 正の値を持つパラメータ\n\n```python\nx = np.logspace(-10, 1, 600)\np1 = stats.invgamma.pdf(x, a=0.001, scale=0.001)\np2 = stats.invgamma.pdf(x, a=0.1, scale=0.1)\n\n_, axes = plt.subplots(1, 2, figsize=figaspect(3/8))\nfor i, ax in enumerate(axes):\n    ax.plot(x, p1, c='k', linestyle='dashed')\n    ax.plot(x, p2, c='k')\n    plt.setp(ax, xlabel='y', ylabel='probability density', xlim=(0, 0.01) if i == 1 else None)\nplt.tight_layout()\nplt.show()\n```\n![fig10-2.png](https://qiita-image-store.s3.amazonaws.com/0/103085/dc00c7bc-f43a-884e-6323-b6006ecc87ca.png)\n\n```python\nx = np.linspace(0, 5, 101)\np1 = 2*stats.t.pdf(x, df=4)\np2 = 2*stats.norm.pdf(x)\n\nplt.figure(figsize=figaspect(3/4))\nax = plt.axes()\nax.plot(x, p1, c='k')\nax.plot(x, p2, c='k', linestyle='dashed')\nplt.setp(ax, xlabel='y', ylabel='probability density')\nplt.show()\n```\n![fig10-3.png](https://qiita-image-store.s3.amazonaws.com/0/103085/3b145a2c-f8cc-fe32-c1c1-3ee96993146c.png)\n\n```python\ndata = {col: salary2[col] for col in salary2.columns}\ndata['N'] = salary2.index.size\ndata['K'] = salary2['KID'].max()\n\nfit1 = pystan.stan('./stan/model8-4b.stan', data=data, seed=1234)\nfit2 = pystan.stan('./stan/model8-4d.stan', data=data, seed=1234)\n```\n\n```python\nms1 = fit1.extract()\nms2 = fit2.extract()\n\n_, axes = plt.subplots(1, 2, figsize=figaspect(3/8), sharex=True, sharey=True)\nfor ms, ax in zip([ms1, ms2], axes):\n    bins = (ms['s_a'].max() - ms['s_a'].min()).astype(int) // 20\n    sns.distplot(ms['s_a'], bins=bins, hist_kws=dict(facecolor='w', edgecolor='k'), kde_kws=dict(color='k', shade=True), ax=ax)\n    plt.setp(ax, xlim=(0, 600))\nplt.show()\n```\n![fig10-4.png](https://qiita-image-store.s3.amazonaws.com/0/103085/ff5c931b-7732-d1fd-cc6d-96ef292843a1.png)\n\n```python\nN = shogi_player.values.max()\ndata = dict(\n    N=N,\n    G=shogi_player.index.size,\n    LW=shogi_player\n)\nfit = pystan.stan('./stan/model10-4.stan', data=data, pars=('mu', 's_mu', 's_pf'), seed=1234)\n```\n\n```python\nms = fit.extract()\n\nd_qua = pd.DataFrame(np.percentile(ms['mu'], (5, 50, 95), axis=0).T, columns=('p05', 'p50', 'p95'))\nd_qua['nid'] = np.arange(N) + 1\n\nd_top5 = d_qua.sort_values('p50', ascending=False).head()\nd_top5\n```\n\n```python\nd_qua = pd.DataFrame(np.percentile(ms['s_pf'], (5, 50, 95), axis=0).T, columns=('p05', 'p50', 'p95'))\nd_qua['nid'] = np.arange(N) + 1\n\nd_top3 = d_qua.sort_values('p50', ascending=False).head(3)\nd_top3\n```\n\n```python\nd_bot3 = d_qua.sort_values('p50').head(3)\nd_bot3\n```\n\n## 10.2.4 分散共分散行列\n\n```python\ndata = {col: salary2[col] for col in salary2.columns}\ndata['N'] = salary2.index.size\ndata['K'] = salary2['KID'].max()\nfit = pystan.stan('./stan/model10-5.stan', data=data, seed=1234)\n```\n\n```python\ndata = {col: salary2[col] for col in salary2.columns}\ndata['N'] = salary2.index.size\ndata['K'] = salary2['KID'].max()\nfit = pystan.stan('./stan/model10-6.stan', data=data, seed=1234)\n```\n\n```python\ndata = {col: salary2[col] for col in salary2.columns}\ndata['N'] = salary2.index.size\ndata['K'] = salary2['KID'].max()\ndata['Nu'] = 2\nfit = pystan.stan('./stan/model10-7.stan', data=data, seed=1234)\n```\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:18:54+09:00",
      "group": null,
      "id": "1225c26cbc05a0f45e02",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Python",
          "versions": []
        },
        {
          "name": "Stan",
          "versions": []
        },
        {
          "name": "PyStan",
          "versions": []
        }
      ],
      "title": "StanとRでベイズ統計モデリング(アヒル本)をPythonにしてみる - 10.2 弱情報事前分布",
      "updated_at": "2018-08-19T21:18:54+09:00",
      "url": "https://qiita.com/shngt/items/1225c26cbc05a0f45e02",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 1,
        "followers_count": 54,
        "github_login_name": "ScenesK",
        "id": "shngt",
        "items_count": 76,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 103085,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/103085/profile-images/1479473183",
        "twitter_screen_name": null,
        "website_url": null
      },
      "page_views_count": null
    },
    {
      "rendered_body": "<p><br><br>\n全くズブの素人だった自分がそれなりにPythonが理解できた教材を備忘録的に紹介します。</p>\n\n<h2>【保存版】プログラミングを無料で学べる学習サイトを目的別に整理してまとめてみた</h2>\n\n<p><a href=\"https://dividable.net/programming-school/recommended-programming-learning-service/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://dividable.net/programming-school/recommended-programming-learning-service/</a></p>\n\n<p>とても分かりやすく学習ルートを紹介してくれているブログ記事です。（Qiitaじゃなくてごめんなさい）<br>\nこれを見て自分もPythonを勉強する気になりました。</p>\n\n<h2>Progate</h2>\n\n<p><a href=\"https://prog-8.com/languages\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://prog-8.com/languages</a></p>\n\n<p>先述したブログ記事の中でも触れてある初心者入門用のオンライン学習サイトです。<br>\nすべての項目を閲覧するには月額980円かかるのですが、入門用の書籍なんか買うより断然お得でさらに分かりやすいのでオススメです。<br>\nブラウザが表示できたらどんな環境でも（言い過ぎ？）学習を始められる点がとてもよかったです。<br>\n（Rubyの講座がとても充実していたので時間を見て挑戦しようと思っています。。。）</p>\n\n<h2>Aidemy</h2>\n\n<p><a href=\"https://aidemy.net/courses\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://aidemy.net/courses</a></p>\n\n<p>こちらも先ほどと同じくオンライン学習サイトになっています。<br>\nプロゲートが様々な言語を網羅しているのに対して、こちらは<b>AI</b>や<b>機械学習</b>に特化した内容になっています。<br>\n同じく月額制で学習を進める事ができますが、コース（一つの授業）を買い切って学習する事もできます。<br>\n（8月末まで<b>TikTok</b>で<b>Aidemy</b>を紹介する事で受講に使うチケットが1枚もらえるらしいです。）<br>\n参考URL貼っておきますので我こそはという方は是非！<br>\n<a href=\"https://prtimes.jp/main/html/rd/p/000000055.000028316.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://prtimes.jp/main/html/rd/p/000000055.000028316.html</a></p>\n\n<h2>予備校のノリで学ぶ「大学の数学・物理」</h2>\n\n<p>【大学数学】線形代数入門①(概観&amp;ベクトル)【線形代数】<br>\n<a href=\"https://www.youtube.com/watch?v=svm8hlhF8PA\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.youtube.com/watch?v=svm8hlhF8PA</a><br>\n【大学数学】線形代数入門②(行列)【線形代数】<br>\n<a href=\"https://www.youtube.com/watch?v=ltFl0FpLTzQ&amp;t=338s\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.youtube.com/watch?v=ltFl0FpLTzQ&amp;t=338s</a></p>\n\n<p>次はすこしプログラミングとは離れるのですが、Pythonでは「Numpy」というとってもとっても便利なライブラリがあります。<br>\n先述した<b>Aidemy</b>にも講座がありますが、行列の計算などを出力する場面が出てきます。<br>\n自分は恥ずかしながら勉強をしてこなかった人間ですので、全くチンプンカンプンの時にこのチャンネルに出会い救われました。<br>\nとても分かりやすくそしてジャストミートに同じ計算方法を扱っているのでとても重宝しました。<br>\n（その他の動画も大学数学や物理なんかを扱っていて見ているだけで楽しそうです。）</p>\n\n<p>実際に使ったのはここまでで、この後は便利だなと思ったサイトor今後使う予定のサイトをずらーっと並べておきます。<br>\n</p><h2>cousera</h2><br>\n<a href=\"https://www.coursera.org/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.coursera.org/</a><br>\n全部が英語で心折れそうですが有志による日本語訳が付いているそうなので頑張ってみます。<br>\n<h2>Udacity</h2><br>\n<a href=\"https://classroom.udacity.com/courses/ud359/lessons/664109694/concepts/6853492770923\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://classroom.udacity.com/courses/ud359/lessons/664109694/concepts/6853492770923</a><br>\nこちらはyoutube動画で字幕があるので何とかなりそうです（笑）\n\n<h2>最後に</h2>\n\n<p>と、まあ一番最初のブログを見てもらえばこれを見る必要なんかないんですけどね！！！<br>\nただYoutubeの予備校のノリで学ぶ「大学の数学・物理」はとてもオススメなので是非見てみてください！</p>\n",
      "body": "<br>\n全くズブの素人だった自分がそれなりにPythonが理解できた教材を備忘録的に紹介します。\n\n<h2>【保存版】プログラミングを無料で学べる学習サイトを目的別に整理してまとめてみた</h2>\nhttps://dividable.net/programming-school/recommended-programming-learning-service/\n\nとても分かりやすく学習ルートを紹介してくれているブログ記事です。（Qiitaじゃなくてごめんなさい）\nこれを見て自分もPythonを勉強する気になりました。\n\n<h2>Progate</h2>\nhttps://prog-8.com/languages\n\n先述したブログ記事の中でも触れてある初心者入門用のオンライン学習サイトです。\nすべての項目を閲覧するには月額980円かかるのですが、入門用の書籍なんか買うより断然お得でさらに分かりやすいのでオススメです。\nブラウザが表示できたらどんな環境でも（言い過ぎ？）学習を始められる点がとてもよかったです。\n（Rubyの講座がとても充実していたので時間を見て挑戦しようと思っています。。。）\n\n<h2>Aidemy</h2>\nhttps://aidemy.net/courses\n\nこちらも先ほどと同じくオンライン学習サイトになっています。\nプロゲートが様々な言語を網羅しているのに対して、こちらは<b>AI</b>や<b>機械学習</b>に特化した内容になっています。\n同じく月額制で学習を進める事ができますが、コース（一つの授業）を買い切って学習する事もできます。\n（8月末まで<b>TikTok</b>で<b>Aidemy</b>を紹介する事で受講に使うチケットが1枚もらえるらしいです。）\n参考URL貼っておきますので我こそはという方は是非！\nhttps://prtimes.jp/main/html/rd/p/000000055.000028316.html\n\n<h2>予備校のノリで学ぶ「大学の数学・物理」</h2>\n【大学数学】線形代数入門①(概観&ベクトル)【線形代数】\nhttps://www.youtube.com/watch?v=svm8hlhF8PA\n【大学数学】線形代数入門②(行列)【線形代数】\nhttps://www.youtube.com/watch?v=ltFl0FpLTzQ&t=338s\n\n次はすこしプログラミングとは離れるのですが、Pythonでは「Numpy」というとってもとっても便利なライブラリがあります。\n先述した<b>Aidemy</b>にも講座がありますが、行列の計算などを出力する場面が出てきます。\n自分は恥ずかしながら勉強をしてこなかった人間ですので、全くチンプンカンプンの時にこのチャンネルに出会い救われました。\nとても分かりやすくそしてジャストミートに同じ計算方法を扱っているのでとても重宝しました。\n（その他の動画も大学数学や物理なんかを扱っていて見ているだけで楽しそうです。）\n\n実際に使ったのはここまでで、この後は便利だなと思ったサイトor今後使う予定のサイトをずらーっと並べておきます。\n<h2>cousera</h2>\nhttps://www.coursera.org/\n全部が英語で心折れそうですが有志による日本語訳が付いているそうなので頑張ってみます。\n<h2>Udacity</h2>\nhttps://classroom.udacity.com/courses/ud359/lessons/664109694/concepts/6853492770923\nこちらはyoutube動画で字幕があるので何とかなりそうです（笑）\n\n\n\n\n<h2>最後に</h2>\nと、まあ一番最初のブログを見てもらえばこれを見る必要なんかないんですけどね！！！\nただYoutubeの予備校のノリで学ぶ「大学の数学・物理」はとてもオススメなので是非見てみてください！\n\n\n\n\n\n\n\n\n\n",
      "coediting": false,
      "comments_count": 0,
      "created_at": "2018-08-19T21:12:42+09:00",
      "group": null,
      "id": "9f9efbef973e18997565",
      "likes_count": 0,
      "private": false,
      "reactions_count": 0,
      "tags": [
        {
          "name": "Python",
          "versions": []
        },
        {
          "name": "プログラミング",
          "versions": []
        },
        {
          "name": "オンライン学習",
          "versions": []
        }
      ],
      "title": "Pythonを勉強する上でとても参考になったものたち",
      "updated_at": "2018-08-19T21:12:42+09:00",
      "url": "https://qiita.com/jo_okazaki1223/items/9f9efbef973e18997565",
      "user": {
        "description": null,
        "facebook_id": null,
        "followees_count": 0,
        "followers_count": 0,
        "github_login_name": null,
        "id": "jo_okazaki1223",
        "items_count": 1,
        "linkedin_id": null,
        "location": null,
        "name": "",
        "organization": null,
        "permanent_id": 222557,
        "profile_image_url": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50",
        "twitter_screen_name": null,
        "website_url": null
      },
      "page_views_count": null
    }
  ]
}